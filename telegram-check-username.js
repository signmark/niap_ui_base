/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è username –∫–∞–Ω–∞–ª–∞
 * –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
 * 
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node telegram-check-username.js
 */

// –ò—Å–ø–æ–ª—å–∑—É–µ–º axios –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
import axios from 'axios';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '7529101043:AAG298h0iubyeKPuZ-WRtEFbNEnEyqy_XJU';
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || '-1002302366310';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
function log(message) {
  console.log(`[${new Date().toLocaleTimeString()}] ${message}`);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –≤ Telegram
 * @param {string} chatId ID —á–∞—Ç–∞
 * @returns {Promise<object|null>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ
 */
async function getChatInfo(chatId) {
  try {
    log(`–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: ${chatId}`);
    const baseUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;
    
    const response = await axios.post(`${baseUrl}/getChat`, {
      chat_id: chatId
    }, {
      timeout: 10000,
      validateStatus: () => true
    });
    
    if (response.data && response.data.ok === true && response.data.result) {
      log(`–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ: ${JSON.stringify(response.data.result)}`);
      return response.data.result;
    } else {
      log(`–û—à–∏–±–∫–∞ API Telegram –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: ${JSON.stringify(response.data || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ')}`);
      return null;
    }
  } catch (error) {
    log(`–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: ${error.message}`);
    return null;
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 * @param {string} chatId ID —á–∞—Ç–∞ Telegram
 * @param {string|number} messageId ID —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} username Username —á–∞—Ç–∞ (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω)
 * @returns {string} URL —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function formatTelegramUrl(chatId, messageId, username) {
  log(`–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram URL: chatId=${chatId}, messageId=${messageId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}, username=${username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
  
  // –ï—Å–ª–∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω, –≤–µ—Ä–Ω–µ–º –±–∞–∑–æ–≤—ã–π URL Telegram
  if (!messageId) {
    if (username) {
      return `https://t.me/${username}`;
    }
    if (chatId.startsWith('@')) {
      return `https://t.me/${chatId.substring(1)}`;
    }
    return 'https://t.me';
  }
  
  // –ï—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω username —á–∞—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è URL
  if (username) {
    const url = `https://t.me/${username}/${messageId}`;
    log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –¥–ª—è –∫–∞–Ω–∞–ª–∞ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º username: ${url}`);
    return url;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è —Å username (@channel)
  if (chatId.startsWith('@')) {
    const username = chatId.substring(1);
    const url = `https://t.me/${username}/${messageId}`;
    log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –¥–ª—è –∫–∞–Ω–∞–ª–∞ —Å username: ${url}`);
    return url;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è —Å —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–æ–π/–∫–∞–Ω–∞–ª–æ–º (-100...)
  if (chatId.startsWith('-100')) {
    // –î–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤ —É–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å -100
    const channelId = chatId.substring(4);
    const url = `https://t.me/${channelId}/${messageId}`;
    log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã/–∫–∞–Ω–∞–ª–∞: ${url}`);
    return url;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å -)
  if (chatId.startsWith('-')) {
    // –î–ª—è –æ–±—ã—á–Ω–æ–π –≥—Ä—É–ø–ø—ã –±–µ–∑ username —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º URL –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É
    const groupId = chatId.substring(1); // –£–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –º–∏–Ω—É—Å
    const url = `https://t.me/c/${groupId}/${messageId}`;
    log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –¥–ª—è –æ–±—ã—á–Ω–æ–π –≥—Ä—É–ø–ø—ã: ${url}`);
    return url;
  }
  
  // –õ–∏—á–Ω—ã–µ —á–∞—Ç—ã –∏–ª–∏ –±–æ—Ç—ã (—á–∏—Å–ª–æ–≤–æ–π ID –±–µ–∑ –º–∏–Ω—É—Å–∞)
  const url = `https://t.me/c/${chatId}/${messageId}`;
  log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –¥–ª—è –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞/–±–æ—Ç–∞: ${url}`);
  return url;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç URL
 */
async function testMessageUrlGeneration() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    const chatInfo = await getChatInfo(TELEGRAM_CHAT_ID);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ –æ—Ç–≤–µ—Ç–∞ API (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const username = chatInfo && chatInfo.username ? chatInfo.username : null;
    
    if (username) {
      log(`–ü–æ–ª—É—á–µ–Ω username —á–∞—Ç–∞: ${username}`);
    } else {
      log(`–£ —á–∞—Ç–∞ –Ω–µ—Ç –ø—É–±–ª–∏—á–Ω–æ–≥–æ username`);
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const baseUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;
    const response = await axios.post(`${baseUrl}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ URL –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –í—Ä–µ–º—è: ${new Date().toLocaleString()}`,
      parse_mode: 'HTML'
    });
    
    if (response.data && response.data.ok) {
      const messageId = response.data.result.message_id;
      log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, ID: ${messageId}`);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º username, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
      const url = formatTelegramUrl(TELEGRAM_CHAT_ID, messageId, username);
      log(`–ò–¢–û–ì–û–í–´–ô URL: ${url}`);
      
      return {
        success: true,
        messageId,
        url
      };
    } else {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${JSON.stringify(response.data)}`);
      return { success: false };
    }
  } catch (error) {
    log(`–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: ${error.message}`);
    return { success: false };
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  log('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –¥–ª—è Telegram');
  
  const result = await testMessageUrlGeneration();
  
  if (result.success) {
    log(`‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);
    log(`üìù ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${result.messageId}`);
    log(`üîó URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${result.url}`);
  } else {
    log(`‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main().catch(error => {
  log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
});