/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ Telegram
 * –ó–∞–ø—É—Å–∫: node telegram-emoji-test.js
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { processHTMLForTelegram } from './shared/telegram-html-processor.js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
function log(message) {
  const timestamp = new Date().toISOString().replace('T', ' ').substring(0, 19);
  console.log(`[${timestamp}] ${message}`);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendTelegramMessage(html) {
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º HTML –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Telegram
  const processedHtml = processHTMLForTelegram(html);
  
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: processedHtml,
        parse_mode: 'HTML',
        disable_web_page_preview: true
      }),
    });
    
    const result = await response.json();
    
    if (!result.ok) {
      throw new Error(`Telegram API error: ${JSON.stringify(result)}`);
    }
    
    return result;
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–æ–¥–∏—Ç —Ç–µ—Å—Ç—ã —Å —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
 */
async function runEmojiTests() {
  log('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç—ã —Å —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–∞–º–∏ –≤ Telegram HTML');
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π HTML-—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ —ç–º–æ–¥–∑–∏
  const emojiTestHtml = `
<h1>–¢–µ—Å—Ç —ç–º–æ–¥–∑–∏ –∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è üöÄ</h1>

<p>–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ <b>—Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å —ç–º–æ–¥–∑–∏ –≤ Telegram.</p>

<p>–†–∞–∑–ª–∏—á–Ω—ã–µ —ç–º–æ–¥–∑–∏ –≤ —Å–ø–∏—Å–∫–µ:</p>
<ul>
  <li>üî¥ <b>–í–∞–∂–Ω–æ–µ</b> —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
  <li>üíö <i>–û–¥–æ–±—Ä–µ–Ω–Ω—ã–π</i> –∫–æ–Ω—Ç–µ–Ω—Ç</li>
  <li>‚ö†Ô∏è <u>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</u> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</li>
  <li>üì± –ú–æ–±–∏–ª—å–Ω–∞—è <a href="https://t.me">–≤–µ—Ä—Å–∏—è</a></li>
</ul>

<p>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã:</p>
<ol>
  <li>&lt;HTML&gt; —Å–∏–º–≤–æ–ª—ã &amp; –∞–º–ø–µ—Ä—Å–∞–Ω–¥ ‚Äî —Ç–∏—Ä–µ</li>
  <li>–ö–∞–≤—ã—á–∫–∏: "–¥–≤–æ–π–Ω—ã–µ" –∏ '–æ–¥–∏–Ω–∞—Ä–Ω—ã–µ'</li>
  <li>–î—Ä–æ–±–∏: &frac12; –∏ &frac14; –∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã: 100%</li>
</ol>

<p>üéâ <b>–≠–º–æ–¥–∑–∏</b> –≤ <i>—Ä–∞–∑–Ω—ã—Ö</i> <u>—Å—Ç–∏–ª—è—Ö</u> <s>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</s> —Ç–µ–∫—Å—Ç–∞!</p>
  `;
  
  log('–ò—Å—Ö–æ–¥–Ω—ã–π HTML:');
  log(emojiTestHtml);
  
  // –î–ª—è —Å–ª—É—á–∞—è —Å —ç–º–æ–¥–∑–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –≥–æ—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
  const formattedHtml = `<b>–¢–µ—Å—Ç —ç–º–æ–¥–∑–∏ –∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è üöÄ</b>

–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ <b>—Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å —ç–º–æ–¥–∑–∏ –≤ Telegram.

–†–∞–∑–ª–∏—á–Ω—ã–µ —ç–º–æ–¥–∑–∏ –≤ —Å–ø–∏—Å–∫–µ:

‚Ä¢ üî¥ <b>–í–∞–∂–Ω–æ–µ</b> —Å–æ–æ–±—â–µ–Ω–∏–µ
‚Ä¢ üíö <i>–û–¥–æ–±—Ä–µ–Ω–Ω—ã–π</i> –∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ ‚ö†Ô∏è <u>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</u> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
‚Ä¢ üì± –ú–æ–±–∏–ª—å–Ω–∞—è <a href="https://t.me">–≤–µ—Ä—Å–∏—è</a>

–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã:

1. &lt;HTML&gt; —Å–∏–º–≤–æ–ª—ã &amp; –∞–º–ø–µ—Ä—Å–∞–Ω–¥ ‚Äî —Ç–∏—Ä–µ
2. –ö–∞–≤—ã—á–∫–∏: "–¥–≤–æ–π–Ω—ã–µ" –∏ '–æ–¥–∏–Ω–∞—Ä–Ω—ã–µ'
3. –î—Ä–æ–±–∏: &frac12; –∏ &frac14; –∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã: 100%

üéâ <b>–≠–º–æ–¥–∑–∏</b> –≤ <i>—Ä–∞–∑–Ω—ã—Ö</i> <u>—Å—Ç–∏–ª—è—Ö</u> <s>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</s> —Ç–µ–∫—Å—Ç–∞!

`;

  try {
    log('\n–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ HTML –≤ Telegram...');
    const result = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: formattedHtml,
        parse_mode: 'HTML',
        disable_web_page_preview: true
      }),
    });
    
    const response = await result.json();
    
    if (response.ok) {
      log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.result.message_id}`);
    } else {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${JSON.stringify(response)}`);
    }
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runEmojiTests().catch(error => {
  log(`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: ${error.message}`);
});