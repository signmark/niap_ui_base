/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–º–æ–¥–∑–∏ –≤ HTML-—Ç–µ–∫—Å—Ç–µ –¥–ª—è Telegram
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏ –¥–ª—è Telegram
 * 
 * –ó–∞–ø—É—Å–∫: node telegram-emoji-test.js
 */

import { TelegramService } from './tests/telegram-service-mock.js';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä TelegramService –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const telegramService = new TelegramService();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

/**
 * –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
 * @param {string} name –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞
 * @param {string} input –í—Ö–æ–¥–Ω–æ–π HTML
 * @param {string} expected –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 * @param {string} actual –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
 */
function printTestResult(name, input, expected, actual) {
  // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const normalizeString = (str) => {
    return str.split('\n')
      .map(line => line.trimEnd())
      .filter(line => line.length > 0 || line === '')
      .join('\n')
      .trim();
  };
  
  const normalizedExpected = normalizeString(expected);
  const normalizedActual = normalizeString(actual);
  
  const success = normalizedExpected === normalizedActual;
  const statusText = success 
    ? `${colors.green}‚úì –ü–†–û–ô–î–ï–ù${colors.reset}` 
    : `${colors.red}‚úó –ü–†–û–í–ê–õ–ï–ù${colors.reset}`;
  
  console.log(`\n${colors.bright}=== –¢–µ—Å—Ç: ${name} ===${colors.reset}`);
  console.log(`${colors.blue}–í—Ö–æ–¥–Ω–æ–π HTML:${colors.reset}\n${input}`);
  console.log(`\n${colors.blue}–†–µ–∑—É–ª—å—Ç–∞—Ç:${colors.reset}\n${actual}`);
  
  if (!success) {
    console.log(`\n${colors.yellow}–û–∂–∏–¥–∞–ª–æ—Å—å:${colors.reset}\n${expected}`);
  }
  
  console.log(`\n${colors.bright}–°—Ç–∞—Ç—É—Å: ${statusText}${colors.reset}`);
  console.log('='.repeat(80));
  
  return success;
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã
 */
function runTests() {
  console.log(`${colors.cyan}========== –¢–ï–°–¢–´ –û–ë–†–ê–ë–û–¢–ö–ò –≠–ú–û–î–ó–ò –í HTML –î–õ–Ø TELEGRAM ==========${colors.reset}`);
  
  // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Å–±–æ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
  const results = [];
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
  const simpleEmojiHtml = `<p>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéÇ</p>`;
  const expectedSimpleEmoji = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéÇ`;
  
  const actualSimpleEmoji = telegramService.standardizeTelegramTags(simpleEmojiHtml);
  results.push(printTestResult(
    '–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏', 
    simpleEmojiHtml, 
    expectedSimpleEmoji, 
    actualSimpleEmoji
  ));
  
  // –¢–µ—Å—Ç 2: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
  const formattedEmojiHtml = `
<p>üî• <strong>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!</strong> üî•</p>
<p>–°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ:</p>
<ul>
  <li>üçé –Ø–±–ª–æ–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 20%</li>
  <li>üçå –ë–∞–Ω–∞–Ω—ã - 2 –∫–≥ –ø–æ —Ü–µ–Ω–µ 1</li>
  <li>üçì –°–≤–µ–∂–∞—è –∫–ª—É–±–Ω–∏–∫–∞</li>
</ul>
<p>üõí –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫—É–ø–∫–∞–º–∏!</p>
`;

  const expectedFormattedEmoji = `üî• <b>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!</b> üî•

–°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ:

  ‚Ä¢ üçé –Ø–±–ª–æ–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 20%

  ‚Ä¢ üçå –ë–∞–Ω–∞–Ω—ã - 2 –∫–≥ –ø–æ —Ü–µ–Ω–µ 1

  ‚Ä¢ üçì –°–≤–µ–∂–∞—è –∫–ª—É–±–Ω–∏–∫–∞

üõí –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫—É–ø–∫–∞–º–∏!`;
  
  const actualFormattedEmoji = telegramService.standardizeTelegramTags(formattedEmojiHtml);
  results.push(printTestResult(
    '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏', 
    formattedEmojiHtml, 
    expectedFormattedEmoji, 
    actualFormattedEmoji
  ));
  
  // –¢–µ—Å—Ç 3: –≠–º–æ–¥–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  const emojiInFormattedHtml = `
<p><strong>‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚ú®</strong></p>
<p>–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è <em>üî• –≥–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ üî•</em> –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã!</p>
<p>–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å:</p>
<ul>
  <li><strong>üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã</strong> - —Å–∫–∏–¥–∫–∞ 15%</li>
  <li><strong>üíª –ù–æ—É—Ç–±—É–∫–∏</strong> - —Å–∫–∏–¥–∫–∞ 10%</li>
  <li><strong>üéß –ù–∞—É—à–Ω–∏–∫–∏</strong> - —Å–∫–∏–¥–∫–∞ 20%</li>
</ul>
<p>‚è∞ –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!</p>
`;

  const expectedEmojiInFormatted = `<b>‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚ú®</b>

–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è <i>üî• –≥–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ üî•</i> –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã!

–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å:

  ‚Ä¢ <b>üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã</b> - —Å–∫–∏–¥–∫–∞ 15%

  ‚Ä¢ <b>üíª –ù–æ—É—Ç–±—É–∫–∏</b> - —Å–∫–∏–¥–∫–∞ 10%

  ‚Ä¢ <b>üéß –ù–∞—É—à–Ω–∏–∫–∏</b> - —Å–∫–∏–¥–∫–∞ 20%

‚è∞ –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!`;
  
  const actualEmojiInFormatted = telegramService.standardizeTelegramTags(emojiInFormattedHtml);
  results.push(printTestResult(
    '–≠–º–æ–¥–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞', 
    emojiInFormattedHtml, 
    expectedEmojiInFormatted, 
    actualEmojiInFormatted
  ));
  
  // –¢–µ—Å—Ç 4: –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
  const realExampleHtml = `
<p>ü•ì <strong>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!</strong> ü•ì</p>
<p>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥—É—Ä–º–∞–Ω–æ–≤:</p>
<ul>
  <li>üêñ –°–∞–ª–æ –¥–æ–º–∞—à–Ω–µ–µ –∫–æ–ø—á–µ–Ω–æ–µ</li>
  <li>üßÖ –õ—É–∫ —Å–≤–µ–∂–∏–π</li>
  <li>üçû –•–ª–µ–± —á–µ—Ä–Ω—ã–π –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π</li>
  <li>üßÇ –°–æ–ª—å –∫—Ä—É–ø–Ω–æ–≥–æ –ø–æ–º–æ–ª–∞</li>
</ul>
<p><em>üíØ –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–µ—Ä–º–µ—Ä–æ–≤!</em></p>
<p>üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É - <strong>–±–µ—Å–ø–ª–∞—Ç–Ω–æ</strong>.</p>
<p>üìû –ó–∞–∫–∞–∑ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: <strong>+7 (123) 456-78-90</strong></p>
`;

  const expectedRealExample = `ü•ì <b>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!</b> ü•ì

–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥—É—Ä–º–∞–Ω–æ–≤:

  ‚Ä¢ üêñ –°–∞–ª–æ –¥–æ–º–∞—à–Ω–µ–µ –∫–æ–ø—á–µ–Ω–æ–µ

  ‚Ä¢ üßÖ –õ—É–∫ —Å–≤–µ–∂–∏–π

  ‚Ä¢ üçû –•–ª–µ–± —á–µ—Ä–Ω—ã–π –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π

  ‚Ä¢ üßÇ –°–æ–ª—å –∫—Ä—É–ø–Ω–æ–≥–æ –ø–æ–º–æ–ª–∞

<i>üíØ –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–µ—Ä–º–µ—Ä–æ–≤!</i>

üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É - <b>–±–µ—Å–ø–ª–∞—Ç–Ω–æ</b>.

üìû –ó–∞–∫–∞–∑ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: <b>+7 (123) 456-78-90</b>`;
  
  const actualRealExample = telegramService.standardizeTelegramTags(realExampleHtml);
  results.push(printTestResult(
    '–†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏', 
    realExampleHtml, 
    expectedRealExample, 
    actualRealExample
  ));
  
  // –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
  const passed = results.filter(r => r).length;
  const total = results.length;
  
  console.log(`${colors.cyan}========== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ==========${colors.reset}`);
  console.log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${total}`);
  console.log(`–ü—Ä–æ–π–¥–µ–Ω–æ: ${passed}`);
  console.log(`–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${total - passed}`);
  
  if (passed === total) {
    console.log(`${colors.green}‚úì –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${colors.reset}`);
    return true;
  } else {
    console.log(`${colors.red}‚úó –ï—Å—Ç—å –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏.${colors.reset}`);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests();