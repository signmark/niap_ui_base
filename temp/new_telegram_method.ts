  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ URL –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Telegram
   * @param imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
   * @param chatId ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @param caption –¢–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
   * @param token –¢–æ–∫–µ–Ω Telegram API
   * @param baseUrl –ë–∞–∑–æ–≤—ã–π URL Telegram API
   * @returns –û—Ç–≤–µ—Ç –æ—Ç Telegram API
   */
  private async uploadTelegramImageFromUrl(
    imageUrl: string,
    chatId: string,
    caption: string,
    token: string,
    baseUrl = 'https://api.telegram.org/bot'
  ): Promise<any> {
    try {
      log(`üì• [TG] –ù–ê–ß–ê–õ–û –ó–ê–ì–†–£–ó–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –í TELEGRAM`, 'social-publishing');
      log(`üîµ [TG: –®–ê–ì 1] –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ${imageUrl.substring(0, 100)}...`, 'social-publishing');
      
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ñ–∞–π–ª–∞
      const tempDir = path.join(os.tmpdir(), 'telegram_uploads');
      if (!fs.existsSync(tempDir)) {
        fs.mkdirSync(tempDir, { recursive: true });
      }
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const timestamp = Date.now();
      const randomString = Math.random().toString(36).substring(2, 10);
      const tempFilePath = path.join(tempDir, `telegram_${timestamp}_${randomString}.jpg`);
      
      // –®–ê–ì 2: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ URL
      log(`üü† [TG: –®–ê–ì 2] –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é: ${imageUrl.substring(0, 100)}...`, 'social-publishing');
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
      const imageResponse = await axios.get(imageUrl, {
        responseType: 'arraybuffer',
        timeout: 30000, // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 30 —Å–µ–∫—É–Ω–¥
        headers: {
          'Accept': 'image/*',
          'User-Agent': 'Mozilla/5.0 SMM Planner Bot'
        }
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const dataSize = imageResponse.data.length;
      if (dataSize === 0) {
        throw new Error('–°–∫–∞—á–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª (0 –±–∞–π—Ç)');
      }
      
      log(`üü¢ [TG: –®–ê–ì 2] –°–∫–∞—á–∞–Ω–æ ${dataSize} –±–∞–π—Ç –¥–∞–Ω–Ω—ã—Ö`, 'social-publishing');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      fs.writeFileSync(tempFilePath, Buffer.from(imageResponse.data));
      log(`üü£ [TG: –®–ê–ì 3] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${tempFilePath}`, 'social-publishing');
      
      // –®–ê–ì 4: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
      log(`üîµ [TG: –®–ê–ì 4] –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram`, 'social-publishing');
      const formData = new FormData();
      formData.append('chat_id', chatId);
      
      if (caption) {
        formData.append('caption', caption);
        formData.append('parse_mode', 'HTML');
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ FormData
      const fileStream = fs.createReadStream(tempFilePath);
      formData.append('photo', fileStream, { filename: `image_${timestamp}.jpg` });
      
      // –®–ê–ì 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –≤ Telegram
      log(`üü† [TG: –®–ê–ì 5] –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –≤ Telegram API`, 'social-publishing');
      const response = await axios.post(`${baseUrl}${token}/sendPhoto`, formData, {
        headers: {
          ...formData.getHeaders(),
          'Accept': 'application/json'
        },
        maxContentLength: Infinity,
        maxBodyLength: Infinity,
        timeout: 30000
      });
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –ø–æ—Ç–æ–∫
      fileStream.destroy();
      
      // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      try {
        fs.unlinkSync(tempFilePath);
        log(`üßπ [TG] –£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${tempFilePath}`, 'social-publishing');
      } catch (unlinkError) {
        log(`‚ö†Ô∏è [TG] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: ${unlinkError}`, 'social-publishing');
      }
      
      log(`‚úÖ [TG] –£–°–ü–ï–•: –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram`, 'social-publishing');
      return response.data;
      
    } catch (error: any) {
      log(`‚ùå [TG] –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram: ${error.message}`, 'social-publishing');
      
      if (error.response) {
        log(`üì° [TG] –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ: ${JSON.stringify(error.response.data)}`, 'social-publishing');
      }
      
      throw error;
    }
  }
  
  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Telegram
   * @param content –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
   * @param telegramSettings –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
   */
  async publishToTelegram(
    content: CampaignContent,
    telegramSettings?: SocialMediaSettings['telegram']
  ): Promise<SocialPublication> {
    log(`‚ñ∂Ô∏è –ù–∞—á–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram. –ö–æ–Ω—Ç–µ–Ω—Ç ID: ${content.id}, —Ç–∏–ø: ${content.contentType}`, 'social-publishing');
    log(`‚ñ∂Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram: chatId=${telegramSettings?.chatId ? telegramSettings.chatId.substring(0, 6) + '...' : '–Ω–µ –∑–∞–¥–∞–Ω'}, token=${telegramSettings?.token ? telegramSettings.token.substring(0, 6) + '...' : '–Ω–µ –∑–∞–¥–∞–Ω'}`, 'social-publishing');
    
    if (!telegramSettings?.token || !telegramSettings?.chatId) {
      log(`‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram (token=${!!telegramSettings?.token}, chatId=${!!telegramSettings?.chatId})`, 'social-publishing');
      return {
        platform: 'telegram',
        status: 'failed',
        publishedAt: null,
        error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram (—Ç–æ–∫–µ–Ω –∏–ª–∏ ID —á–∞—Ç–∞)'
      };
    }

    try {
      const { token, chatId } = telegramSettings;
      log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram. –ö–æ–Ω—Ç–µ–Ω—Ç: ${content.id}, —Ç–∏–ø: ${content.contentType}`, 'social-publishing');
      log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram. –ß–∞—Ç: ${chatId}, –¢–æ–∫–µ–Ω: ${token.substring(0, 6)}...`, 'social-publishing');

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª–µ additionalImages –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
      content = this.processAdditionalImages(content, 'telegram');
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º HTML-–∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Telegram —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
      const formattedText = this.formatHtmlContent(content.content, 'telegram');
      log(`–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Telegram: –¥–ª–∏–Ω–∞ ${formattedText.length} —Å–∏–º–≤–æ–ª–æ–≤`, 'social-publishing');
      
      // –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      if (content.contentType === 'text') {
        log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Telegram (ID: ${content.id})`, 'social-publishing');
        
        // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API Telegram
        const baseUrl = 'https://api.telegram.org/bot';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
        const response = await axios.post(`${baseUrl}${token}/sendMessage`, {
          chat_id: chatId,
          text: formattedText,
          parse_mode: 'HTML',
          disable_web_page_preview: false // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü –≤ —Å—Å—ã–ª–∫–∞—Ö
        });
        
        log(`–£—Å–ø–µ—à–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram: ${JSON.stringify(response.data)}`, 'social-publishing');
        
        // –ü–æ–ª—É—á–∞–µ–º URL –ø–æ—Å—Ç–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
        const messageId = response.data.result.message_id;
        // –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–æ—Å—Ç–∞ –≤ Telegram (—Ñ–æ—Ä–º–∞—Ç t.me/c/channelid/messageid)
        const postUrl = chatId.startsWith('@')
          ? `https://t.me/${chatId.substring(1)}`
          : chatId.startsWith('-100')
            ? `https://t.me/c/${chatId.substring(4)}/${messageId}`
            : null;
            
        log(`URL –ø–æ—Å—Ç–∞ –≤ Telegram: ${postUrl}`, 'social-publishing');
        
        return {
          platform: 'telegram',
          status: 'published',
          publishedAt: new Date(),
          publishedUrl: postUrl,
          postId: messageId?.toString() || null
        };
      } 
      else if (content.contentType === 'image') {
        log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram (ID: ${content.id})`, 'social-publishing');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (!content.imageUrl) {
          log(`–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram`, 'social-publishing');
          return {
            platform: 'telegram',
            status: 'failed',
            publishedAt: null,
            error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
          };
        }
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä
        const processedImageUrl = this.processImageUrl(content.imageUrl, 'telegram');
        log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è Telegram: ${processedImageUrl}`, 'social-publishing');
        
        // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API Telegram
        const baseUrl = 'https://api.telegram.org/bot';
        
        try {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
          const response = await this.uploadTelegramImageFromUrl(
            processedImageUrl,
            chatId,
            formattedText, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML-—Ç–µ–∫—Å—Ç –∫–∞–∫ –ø–æ–¥–ø–∏—Å—å
            token,
            baseUrl
          );
          
          log(`–£—Å–ø–µ—à–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram: ${JSON.stringify(response)}`, 'social-publishing');
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
          const messageId = response.result.message_id;
          
          // –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–æ—Å—Ç–∞ –≤ Telegram (—Ñ–æ—Ä–º–∞—Ç t.me/c/channelid/messageid)
          const postUrl = chatId.startsWith('@')
            ? `https://t.me/${chatId.substring(1)}`
            : chatId.startsWith('-100')
              ? `https://t.me/c/${chatId.substring(4)}/${messageId}`
              : null;
              
          log(`URL –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤ Telegram: ${postUrl}`, 'social-publishing');
          
          return {
            platform: 'telegram',
            status: 'published',
            publishedAt: new Date(),
            publishedUrl: postUrl,
            postId: messageId?.toString() || null
          };
        } catch (uploadError: any) {
          log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram: ${uploadError.message}`, 'social-publishing');
          
          return {
            platform: 'telegram',
            status: 'failed',
            publishedAt: null,
            error: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${uploadError.message}`
          };
        }
      }
      else if (content.contentType === 'carousel') {
        log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ –≤ Telegram (ID: ${content.id})`, 'social-publishing');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if (!content.imageUrl && (!content.additionalImages || content.additionalImages.length === 0)) {
          log(`–û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ –≤ Telegram`, 'social-publishing');
          return {
            platform: 'telegram',
            status: 'failed',
            publishedAt: null,
            error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏'
          };
        }
        
        // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const imageUrls: string[] = [];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if (content.imageUrl) {
          imageUrls.push(this.processImageUrl(content.imageUrl, 'telegram'));
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if (content.additionalImages && Array.isArray(content.additionalImages) && content.additionalImages.length > 0) {
          content.additionalImages.forEach((imgUrl) => {
            if (typeof imgUrl === 'string' && imgUrl.trim()) {
              imageUrls.push(this.processImageUrl(imgUrl, 'telegram'));
            } else if (typeof imgUrl === 'object' && imgUrl.url) {
              imageUrls.push(this.processImageUrl(imgUrl.url, 'telegram'));
            }
          });
        }
        
        log(`–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ –≤ Telegram: ${imageUrls.length}`, 'social-publishing');
        
        if (imageUrls.length === 0) {
          log(`–û—à–∏–±–∫–∞: –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª–∏–¥–Ω—ã—Ö URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏`, 'social-publishing');
          return {
            platform: 'telegram',
            status: 'failed',
            publishedAt: null,
            error: '–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏'
          };
        }
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const tempFiles: string[] = [];
        const mediaItems: {index: number, messageId: number}[] = [];
        
        try {
          // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          const tempDir = path.join(os.tmpdir(), 'telegram_carousel');
          if (!fs.existsSync(tempDir)) {
            fs.mkdirSync(tempDir, { recursive: true });
          }
          
          // –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
          for (let i = 0; i < imageUrls.length; i++) {
            const url = imageUrls[i];
            const timestamp = Date.now();
            const randomString = Math.random().toString(36).substring(2, 10);
            const tempFilePath = path.join(tempDir, `telegram_carousel_${i}_${timestamp}_${randomString}.jpg`);
            
            try {
              // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              log(`–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${i+1}/${imageUrls.length} –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏: ${url.substring(0, 100)}...`, 'social-publishing');
              const response = await axios.get(url, {
                responseType: 'arraybuffer',
                timeout: 30000,
                headers: {
                  'Accept': 'image/*',
                  'User-Agent': 'Mozilla/5.0 SMM Planner Bot'
                }
              });
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
              const dataSize = response.data.length;
              if (dataSize === 0) {
                log(`–û–®–ò–ë–ö–ê: –°–∫–∞—á–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª (0 –±–∞–π—Ç) –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${i+1}`, 'social-publishing');
                continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              }
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
              fs.writeFileSync(tempFilePath, Buffer.from(response.data));
              log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i+1} –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${tempFilePath}`, 'social-publishing');
              tempFiles.push(tempFilePath);
              
              // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
              const formData = new FormData();
              formData.append('chat_id', chatId);
              
              // –ü–µ—Ä–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–µ–∑
              if (i === 0) {
                formData.append('caption', formattedText);
                formData.append('parse_mode', 'HTML');
              }
              
              // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
              const fileStream = fs.createReadStream(tempFilePath);
              formData.append('photo', fileStream, { filename: `image_${timestamp}_${i}.jpg` });
              
              // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram
              try {
                const baseUrl = 'https://api.telegram.org/bot';
                const uploadResponse = await axios.post(`${baseUrl}${token}/sendPhoto`, formData, {
                  headers: {
                    ...formData.getHeaders(),
                    'Accept': 'application/json'
                  },
                  maxContentLength: Infinity,
                  maxBodyLength: Infinity,
                  timeout: 30000
                });
                
                fileStream.destroy(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∏–º
                
                log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i+1} –≤ Telegram`, 'social-publishing');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –º–µ–¥–∏–∞-ID –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
                mediaItems.push({
                  index: i,
                  messageId: uploadResponse.data.result.message_id
                });
              } catch (uploadError: any) {
                fileStream.destroy(); // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∏–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
                log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${i+1} –≤ Telegram: ${uploadError.message}`, 'social-publishing');
                if (uploadError.response) {
                  log(`–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏: ${JSON.stringify(uploadError.response.data)}`, 'social-publishing');
                }
              }
            } catch (downloadError: any) {
              log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${i+1} –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏: ${downloadError.message}`, 'social-publishing');
            }
          }
          
          // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          tempFiles.forEach(file => {
            try {
              fs.unlinkSync(file);
              log(`–£–¥–∞–ª–µ–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${file}`, 'social-publishing');
            } catch (unlinkError) {
              log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: ${unlinkError}`, 'social-publishing');
            }
          });
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–∞–∫–∏–µ-–ª–∏–±–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
          if (mediaItems.length === 0) {
            log(`–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏`, 'social-publishing');
            return {
              platform: 'telegram',
              status: 'failed',
              publishedAt: null,
              error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏'
            };
          }
          
          // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ–¥–∏–∞-—ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å—É
          mediaItems.sort((a, b) => a.index - b.index);
          
          // –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–µ—Ä–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
          // –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø–æ—Å—Ç–∞ –≤ Telegram (—Ñ–æ—Ä–º–∞—Ç t.me/c/channelid/messageid)
          const firstMessageId = mediaItems[0]?.messageId;
          const postUrl = chatId.startsWith('@')
            ? `https://t.me/${chatId.substring(1)}`
            : chatId.startsWith('-100')
              ? `https://t.me/c/${chatId.substring(4)}/${firstMessageId}`
              : null;
              
          log(`URL –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ –≤ Telegram: ${postUrl}`, 'social-publishing');
          
          return {
            platform: 'telegram',
            status: 'published',
            publishedAt: new Date(),
            publishedUrl: postUrl,
            postId: firstMessageId?.toString() || null
          };
          
        } catch (carouselError: any) {
          // –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          tempFiles.forEach(file => {
            try {
              if (fs.existsSync(file)) {
                fs.unlinkSync(file);
              }
            } catch (e) {
              // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ
            }
          });
          
          log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏ –≤ Telegram: ${carouselError.message}`, 'social-publishing');
          
          return {
            platform: 'telegram',
            status: 'failed',
            publishedAt: null,
            error: `–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏: ${carouselError.message}`
          };
        }
      }
      
      // –ï—Å–ª–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
      log(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Telegram: ${content.contentType}`, 'social-publishing');
      return {
        platform: 'telegram',
        status: 'failed',
        publishedAt: null,
        error: `–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${content.contentType}`
      };
    } catch (error: any) {
      log(`–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram: ${error.message}`, 'social-publishing');
      
      return {
        platform: 'telegram',
        status: 'failed',
        publishedAt: null,
        error: `–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${error.message}`
      };
    }
  }