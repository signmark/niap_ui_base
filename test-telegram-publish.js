// –¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
const axios = require('axios');

// –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
const API_URL = 'http://localhost:5000';

// –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TEST_CONTENT = {
  id: '123', // –≠—Ç–æ—Ç ID –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã
  content: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º',
  socialPlatforms: {
    'telegram': { status: 'pending' },
    'vk': { status: 'pending' },
    'instagram': { status: 'pending' }
  }
};

async function runTest() {
  try {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram...');
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –î–û –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    console.log(`–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ ${TEST_CONTENT.id} –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...`);
    const beforeResponse = await axios.get(`${API_URL}/api/campaign-content/${TEST_CONTENT.id}`);
    console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –î–û –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
    console.log('- Social Platforms:', JSON.stringify(beforeResponse.data.socialPlatforms, null, 2));
    
    // 2. –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Telegram
    console.log('–ü—É–±–ª–∏–∫—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Telegram...');
    const publishResponse = await axios.post(`${API_URL}/api/publish/telegram/${TEST_CONTENT.id}`);
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', publishResponse.data);
    
    // 3. –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    console.log('–ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏...');
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // 4. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –ü–û–°–õ–ï –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    console.log(`–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ ${TEST_CONTENT.id} –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...`);
    const afterResponse = await axios.get(`${API_URL}/api/campaign-content/${TEST_CONTENT.id}`);
    console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –ü–û–°–õ–ï –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
    console.log('- Social Platforms:', JSON.stringify(afterResponse.data.socialPlatforms, null, 2));
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –¥—Ä—É–≥–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö
    const beforePlatforms = Object.keys(beforeResponse.data.socialPlatforms || {});
    const afterPlatforms = Object.keys(afterResponse.data.socialPlatforms || {});
    
    console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –î–û –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', beforePlatforms.join(', '));
    console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –ü–û–°–õ–ï –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', afterPlatforms.join(', '));
    
    const missingPlatforms = beforePlatforms.filter(p => !afterPlatforms.includes(p));
    if (missingPlatforms.length > 0) {
      console.log('‚ö†Ô∏è –û–®–ò–ë–ö–ê: –ü–æ—Ç–µ—Ä—è–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º:', missingPlatforms.join(', '));
    } else {
      console.log('‚úÖ –£–°–ü–ï–•: –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞:', error.message);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
  }
}

runTest();