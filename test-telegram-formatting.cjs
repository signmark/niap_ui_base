/**
 * –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ Telegram
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * 
 * –ó–∞–ø—É—Å–∫: node test-telegram-formatting.cjs
 */

const axios = require('axios');
require('dotenv').config();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
const token = process.env.TELEGRAM_BOT_TOKEN;
const chatId = process.env.TELEGRAM_CHAT_ID;

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram
const testCases = [
  {
    name: "–ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    text: "<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç</i>\n<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>\n<s>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</s>\n<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–¥–∞</code>\n<a href='https://example.com'>–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç</a>",
  },
  {
    name: "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    text: "–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:\n<b><i>–ñ–∏—Ä–Ω—ã–π –∫—É—Ä—Å–∏–≤</i></b>\n<b><u>–ñ–∏—Ä–Ω—ã–π –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u></b>\n<i><s>–ö—É—Ä—Å–∏–≤–Ω—ã–π –∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π</s></i>",
  },
  {
    name: "–ü–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –Ω–∞–∏–∑–Ω–∞–Ω–∫—É (—Ç–æ—á–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)",
    text: "<b>–ü–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ –Ω–∞–∏–∑–Ω–∞–Ω–∫—É</b>\n<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>\n<i>–ö—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç</i>\n<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>\n<s>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</s>\n<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–¥–∞</code>\n<a href='https://example.com'>–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç</a>\n\n–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:\n<b><i>–ñ–∏—Ä–Ω—ã–π –∫—É—Ä—Å–∏–≤</i></b>\n<b><u>–ñ–∏—Ä–Ω—ã–π –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u></b>\n<i><s>–ö—É—Ä—Å–∏–≤–Ω—ã–π –∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π</s></i>\n\n<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏</b>\n\n<i>–û–ø–∏—Å–∞–Ω–∏–µ –∏ –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –æ–± —ç—Ç–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π —Å—Ç–∞—Ç—å–µ. –ú–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å.</i>\n\n–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏, –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–±–∑–∞—Ü–µ–≤ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.\n–í –∫–æ—Ç–æ—Ä–æ–º –º–æ–≥—É—Ç –±—ã—Ç—å <b>–≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏</b> –∏ <i>–≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã</i>.\n\n<a href='https://t.me/your_channel'>–ù–∞—à –∫–∞–Ω–∞–ª</a>\n\nüëç 1",
  },
  {
    name: "–ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ (–¥–æ–ª–∂–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è)",
    text: "<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç <i>–∫—É—Ä—Å–∏–≤ <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π",
  }
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!token || !chatId) {
  console.error("–û–®–ò–ë–ö–ê: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID");
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —á–µ—Ä–µ–∑ API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function sendToTelegram(text) {
  try {
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π API-–º–∞—Ä—à—Ä—É—Ç
    const response = await axios.post('http://localhost:3000/api/test/telegram-post', {
      text,
      token,
      chatId
    });
    
    console.log(`‚úì –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
    
    if (response.data.postUrl) {
      console.log(`URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.postUrl}`);
    }
    
    return {
      success: true,
      url: response.data.postUrl,
      messageId: response.data.messageId
    };
  } catch (error) {
    console.error(`‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${error.message}`);
    if (error.response) {
      console.error(`  –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`  –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(error.response.data)}`);
    }
    return {
      success: false,
      error: error.message
    };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HTML-–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –í TELEGRAM ===\n');
  
  let successful = 0;
  let failed = 0;
  
  for (let i = 0; i < testCases.length; i++) {
    const test = testCases[i];
    console.log(`\n[–¢–ï–°–¢ ${i + 1}] ${test.name}`);
    console.log(`–¢–µ–∫—Å—Ç: ${test.text.substring(0, 100)}${test.text.length > 100 ? '...' : ''}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const result = await sendToTelegram(test.text);
    
    if (result.success) {
      console.log(`‚úì –¢–ï–°–¢ ${i + 1} –ü–†–û–ô–î–ï–ù!`);
      successful++;
    } else {
      console.log(`‚úó –¢–ï–°–¢ ${i + 1} –ü–†–û–í–ê–õ–ï–ù: ${result.error}`);
      failed++;
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    if (i < testCases.length - 1) {
      console.log('–û–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...');
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
  }
  
  console.log('\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===');
  console.log(`‚úì –£—Å–ø–µ—à–Ω–æ: ${successful}`);
  console.log(`‚úó –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${failed}`);
  console.log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${testCases.length}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
console.log('–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram...');
runTests().catch(error => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
});