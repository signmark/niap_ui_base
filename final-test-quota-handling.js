/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ quota_exceeded YouTube
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ -> –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ -> –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

import axios from 'axios';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import fs from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º storage –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
const storage = await import('./server/storage.ts');

const DIRECTUS_URL = 'https://directus.roboflow.tech';
const API_BASE = 'http://localhost:5000';

// –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å YouTube
const TEST_CONTENT_ID = 'fd9b54a9-24ad-41ab-b1fa-4da777154b3d';

async function testCompleteQuotaHandling() {
  console.log('üöÄ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò QUOTA_EXCEEDED');
  console.log('===============================================');
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    const schedulerModule = await import('./server/services/publish-scheduler.ts');
    const scheduler = schedulerModule.getPublishScheduler();
    const token = await scheduler.getSystemToken();
    if (!token) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω');
      return;
    }
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ï–ì–û –°–¢–ê–¢–£–°–ê');
    const content = await storage.storage.getCampaignContentById(TEST_CONTENT_ID, token);
    if (!content) {
      console.error('‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log(`üìä –ö–æ–Ω—Ç–µ–Ω—Ç: ${content.title}`);
    console.log(`üìä –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: ${content.status}`);
    console.log(`üìä YouTube —Å—Ç–∞—Ç—É—Å: ${content.socialPlatforms?.youtube?.status || 'undefined'}`);
    console.log(`üìä YouTube –æ—à–∏–±–∫–∞: ${content.socialPlatforms?.youtube?.error || '–Ω–µ—Ç'}`);

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    console.log('\nüïí –¢–ï–°–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
    await scheduler.checkScheduledContent();
    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –ø—Ä–æ–≤–µ—Ä–∫—É');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –ø–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê');
    const contentAfter = await storage.storage.getCampaignContentById(TEST_CONTENT_ID, token);
    console.log(`üìä YouTube —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: ${contentAfter.socialPlatforms?.youtube?.status || 'undefined'}`);
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('\nüåê –¢–ï–°–¢ API ENDPOINT');
    try {
      const response = await axios.get(`${API_BASE}/api/campaign-content/${TEST_CONTENT_ID}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      const apiContent = response.data;
      console.log(`üìä API YouTube —Å—Ç–∞—Ç—É—Å: ${apiContent.socialPlatforms?.youtube?.status || 'undefined'}`);
      console.log(`üìä API YouTube –æ—à–∏–±–∫–∞: ${apiContent.socialPlatforms?.youtube?.error || '–Ω–µ—Ç'}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }

    // 6. –í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
    console.log('================================');
    
    const youtubeStatus = content.socialPlatforms?.youtube?.status;
    const youtubeError = content.socialPlatforms?.youtube?.error;
    
    if (youtubeStatus === 'quota_exceeded') {
      console.log('‚úÖ YouTube —Å—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ quota_exceeded');
    } else {
      console.log(`‚ùå YouTube —Å—Ç–∞—Ç—É—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${youtubeStatus}`);
    }
    
    if (youtubeError && youtubeError.includes('–∫–≤–æ—Ç–∞')) {
      console.log('‚úÖ –û—à–∏–±–∫–∞ –∫–≤–æ—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞');
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –∫–≤–æ—Ç—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è: ${youtubeError}`);
    }
    
    console.log('\nüìù –í–´–í–û–î–´:');
    console.log('‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –ë–î: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç quota_exceeded: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚Ä¢ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É: ‚úÖ –î–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.error(error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testCompleteQuotaHandling();