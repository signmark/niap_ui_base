#!/usr/bin/env node

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';

async function forceRefreshContent() {
  try {
    const headers = {
      'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
      'Content-Type': 'application/json'
    };

    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    const metaResponse = await axios.get(`${API_BASE}/campaign-content`, {
      headers,
      params: {
        campaignId: CAMPAIGN_ID,
        limit: 10,
        page: 1
      }
    });

    console.log('üìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ API:');
    console.log('   –í—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', metaResponse.data.meta?.total || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   –°—Ç—Ä–∞–Ω–∏—Ü:', metaResponse.data.meta?.totalPages || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', metaResponse.data.meta?.page || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.log('   –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', metaResponse.data.data?.length || 0);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã Nplanner
    const recentResponse = await axios.get(`${API_BASE}/campaign-content`, {
      headers,
      params: {
        campaignId: CAMPAIGN_ID,
        limit: 50,
        page: 1,
        sort: '-created_at'
      }
    });

    if (recentResponse.data?.data) {
      const nplannerPosts = recentResponse.data.data.filter(item => {
        const title = item.title || '';
        const content = item.content || '';
        return title.toLowerCase().includes('nplanner') || 
               content.toLowerCase().includes('nplanner');
      });

      console.log(`\nüè• –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ Nplanner –≤ –ø–µ—Ä–≤—ã—Ö 50: ${nplannerPosts.length}`);
      
      if (nplannerPosts.length > 0) {
        console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–æ—Å—Ç–æ–≤ Nplanner:');
        nplannerPosts.slice(0, 5).forEach((post, index) => {
          const date = new Date(post.createdAt || post.created_at).toLocaleString('ru-RU');
          const hasImage = post.imageUrl || post.image_url ? 'üì∏' : 'üìù';
          console.log(`   ${index + 1}. ${hasImage} ${post.title}`);
          console.log(`      üìÖ ${date}`);
          console.log(`      üÜî ${post.id}`);
        });
        
        console.log('\n‚úÖ –ö–û–ù–¢–ï–ù–¢ NPLANNER –ù–ê–ô–î–ï–ù –í –ë–ê–ó–ï!');
        console.log('‚ùó –ü—Ä–æ–±–ª–µ–º–∞: —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—É—é –≤—ã–±–æ—Ä–∫—É');
        console.log('üîß –†–µ—à–µ–Ω–∏–µ: –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É');
      } else {
        console.log('‚ùå –ü–æ—Å—Ç—ã Nplanner –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–≤—ã—Ö 50 –∑–∞–ø–∏—Å—è—Ö');
      }
    }

    // –ü–æ–ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –∫–µ—à —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint
    try {
      console.log('\nüßπ –ü—ã—Ç–∞—é—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à...');
      const clearResponse = await axios.post(`${API_BASE}/clear-cache`, {}, { headers });
      console.log('‚úÖ –ö–µ—à –æ—á–∏—â–µ–Ω:', clearResponse.data?.success || false);
    } catch (cacheError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞:', cacheError.response?.data || cacheError.message);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

forceRefreshContent();