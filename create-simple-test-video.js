import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üé¨ –°–æ–∑–¥–∞—é –ø—Ä–æ—Å—Ç–µ–π—à–µ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ...');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å –Ω—É–ª—è
const videoPath = '/tmp/simple_test.mp4';

const ffmpegCmd = `ffmpeg -f lavfi -i testsrc=duration=3:size=1080x1920:rate=24 ` +
  `-f lavfi -i sine=frequency=800:duration=3 ` +
  `-c:v libx264 -profile:v baseline -level:v 3.0 -pix_fmt yuv420p ` +
  `-crf 30 -maxrate 1000k -bufsize 2000k ` +
  `-c:a aac -b:a 64k -ar 44100 -ac 2 ` +
  `-movflags +faststart -t 3 -y ${videoPath}`;

try {
  execSync(ffmpegCmd, { stdio: 'pipe' });
  
  if (fs.existsSync(videoPath)) {
    const stats = fs.statSync(videoPath);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: ${videoPath}`);
    console.log(`üìä –†–∞–∑–º–µ—Ä: ${Math.round(stats.size / 1024)}KB`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    const updateCmd = `curl -s -X POST http://localhost:5000/api/real-video-converter/convert ` +
      `-H "Content-Type: application/json" ` +
      `-d '{"localPath": "${videoPath}", "forceConvert": true, "contentId": "7fdcd858-0d14-4cd2-8950-5c8b31f29fea"}'`;
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä...');
    const result = execSync(updateCmd, { encoding: 'utf8' });
    
    try {
      const parsed = JSON.parse(result);
      if (parsed.success) {
        console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Å—Ç—ã–º –≤–∏–¥–µ–æ!');
        console.log(`üìπ URL: ${parsed.convertedUrl}`);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', parsed.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }
    } catch (e) {
      console.log('üîÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);
    }
    
  } else {
    console.log('‚ùå –í–∏–¥–µ–æ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ');
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ:', error.message);
}