/**
 * –¢–µ—Å—Ç Gemini —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */

import axios from 'axios';

const authData = {
  email: 'lbrspb@gmail.com',
  password: 'QtpZ3dh7'
};

const BASE_URL = 'http://localhost:5000';

async function testGeminiWithCampaignData() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
    const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, authData);
    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!');
    
    console.log('\nüß† –¢–µ—Å—Ç–∏—Ä—É–µ–º Gemini –° –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã...');
    const testData = {
      prompt: '–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏',
      service: 'gemini',
      useCampaignData: true,
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e'
    };
    
    const response = await axios.post(`${BASE_URL}/api/generate-content`, testData, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    console.log('‚úÖ GEMINI –†–ê–ë–û–¢–ê–ï–¢!');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã:');
    console.log(response.data.content?.substring(0, 300) + '...\n');
    
    console.log('üéâ –§–£–ù–ö–¶–ò–Ø –î–ê–ù–ù–´–• –ê–ù–ö–ï–¢–´ –†–ê–ë–û–¢–ê–ï–¢ –° GEMINI!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ Gemini:', error.response?.data || error.message);
  }
}

testGeminiWithCampaignData();