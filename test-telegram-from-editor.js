/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ Telegram
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-telegram-from-editor.js
 */

import axios from 'axios';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
const telegramToken = '7529101043:AAG298h0iubyeKPuZ-WRtEFbNEnEyqy_XJU';
const chatId = '-1002302366310';

// –ü—Ä–∏–º–µ—Ä HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
const htmlFromEditor = `<p><em>–í —Ö–æ–¥–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –º—ã —Ä–∞–∑–æ–±—Ä–∞–ª–∏, –ø–æ—á–µ–º—É –∑–∞–≤—Ç—Ä–∞–∫ ‚Äì —ç—Ç–æ –∫–æ—Ä–æ–ª—å –¥–Ω—è, –∏ –∫–∞–∫ –æ–Ω –≤–ª–∏—è–µ—Ç –Ω–∞ –Ω–∞—à—É —ç–Ω–µ—Ä–≥–∏—é, –º–µ—Ç–∞–±–æ–ª–∏–∑–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∞–ø–ø–µ—Ç–∏—Ç–∞. üëë –°–µ–≥–æ–¥–Ω—è –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ—Å–≤–µ—Ç–∏—Ç—å —Ç–µ–º—É –ø–µ—Ä–µ–∫—É—Å–æ–≤ ‚Äì —ç—Ç–∏—Ö –º–∞–ª–µ–Ω—å–∫–∏—Ö, –Ω–æ –≤–∞–∂–Ω—ã—Ö —Å–ø—É—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ –¥–Ω—è. üç≠</em></p>

<p><strong>–ü–µ—Ä–µ–∫—É—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∫–∞–∫ —Å–æ—é–∑–Ω–∏–∫–∞–º–∏ –≤ –¥–µ–ª–µ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏ —Å—Ç—Ä–æ–π–Ω–æ—Å—Ç–∏ üí™, —Ç–∞–∫ –∏ –∫–æ–≤–∞—Ä–Ω—ã–º–∏ –≤—Ä–∞–≥–∞–º–∏, –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –ø–æ–¥—Ä—ã–≤–∞—é—â–∏–º–∏ –Ω–∞—à–∏ —É—Å–∏–ª–∏—è. üòà</strong> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∫—É—Å—ã –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–∑–∫–∏—Ö —Å–∫–∞—á–∫–æ–≤ —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø—Ä–∏—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –≥–æ–ª–æ–¥—É –≤–∑—è—Ç—å –≤–µ—Ä—Ö, —á—Ç–æ —á–∞—Å—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∏–µ–º–∞—Ö –ø–∏—â–∏. ‚è±Ô∏è <strong>–ù–æ –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–∫—É—Å—ã –æ–¥–∏–Ω–∞–∫–æ–≤–æ –ø–æ–ª–µ–∑–Ω—ã ‚Äì –µ—Å—Ç—å —Ç–µ, —á—Ç–æ –ª—É—á—à–µ –æ–±—Ö–æ–¥–∏—Ç—å —Å—Ç–æ—Ä–æ–Ω–æ–π! ‚òùÔ∏è</strong></p>

<p>–°–ª–∞–¥–æ—Å—Ç–∏, –±—É–ª–æ—á–∫–∏, –ø–µ—á–µ–Ω—å–µ, —á–∏–ø—Å—ã –∏ –ø—Ä–æ—á–∏–µ —Å–æ–±–ª–∞–∑–Ω—ã —Ñ–∞—Å—Ç—Ñ—É–¥–∞ –º–æ–≥—É—Ç –ø–æ–¥–∞—Ä–∏—Ç—å –ª–∏—à—å –º–∏–º–æ–ª–µ—Ç–Ω—ã–π –ø—Ä–∏–ª–∏–≤ —Å–∏–ª, –∞ –ø–æ—Å–ª–µ ‚Äì —É–ø–∞–¥–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏, —É—Å–∏–ª–µ–Ω–∏–µ –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –ª–∏—à–Ω–∏–µ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä—ã –Ω–∞ —Ç–∞–ª–∏–∏. üò© <em>–ò—Å—Ç–∏–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–µ –ø–µ—Ä–µ–∫—É—Å—ã ‚Äì —ç—Ç–æ —Ç–µ, —á—Ç–æ –Ω–∞–¥–æ–ª–≥–æ —É—Ç–æ–ª—è—é—Ç –≥–æ–ª–æ–¥, –¥–∞—Ä—è—Ç –∑–∞—Ä—è–¥ –±–æ–¥—Ä–æ—Å—Ç–∏ –∏ —Å–Ω–∞–±–∂–∞—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–º —Ü–µ–Ω–Ω—ã–º–∏ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏. ü•ó</em> –û—Ä–µ—Ö–∏, —è–≥–æ–¥—ã, —Ñ—Ä—É–∫—Ç—ã, –æ–≤–æ—â–∏ —Å —Ö—É–º—É—Å–æ–º, —è–π—Ü–∞, –≥—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç, —Ç–≤–æ—Ä–æ–≥, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤—ã–µ —Ö–ª–µ–±—Ü—ã —Å –∞–≤–æ–∫–∞–¥–æ –∏–ª–∏ –æ—Ä–µ—Ö–æ–≤–æ–π –ø–∞—Å—Ç–æ–π ‚Äì –≤–æ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥—Ä—É–∑—å—è —Å—Ç—Ä–æ–π–Ω–æ–π —Ñ–∏–≥—É—Ä—ã –∏ —Ö–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è! ü•úüçìü•ë</p>

<p><strong>–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–æ–ª–æ—Ç—ã—Ö –ø—Ä–∞–≤–∏–ª –≥—Ä–∞–º–æ—Ç–Ω–æ–≥–æ –ø–µ—Ä–µ–∫—É—Å–∞: üìù</strong></p>

<ul>
<li>–í—ã–±–∏—Ä–∞–π—Ç–µ –ø–µ—Ä–µ–∫—É—Å—ã —Å –±–µ–ª–∫–æ–º, –ø–æ–ª–µ–∑–Ω—ã–º–∏ –∂–∏—Ä–∞–º–∏ –∏ –∫–ª–µ—Ç—á–∞—Ç–∫–æ–π ‚Äì –æ–Ω–∏ –¥–æ–ª—å—à–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —á—É–≤—Å—Ç–≤–æ —Å—ã—Ç–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –º–µ—Ç–∞–±–æ–ª–∏–∑–º. üí™</li>
<li>–ü—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É —Ç–µ–ª—É ‚Äì –ø–µ—Ä–µ–∫—É—Å—ã–≤–∞–π—Ç–µ, —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ–ª–æ–¥–Ω—ã, –∞ –Ω–µ –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ –∏–ª–∏ –æ—Ç —Å–∫—É–∫–∏. ü§î</li>
<li>–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ –ø–æ—Ä—Ü–∏–∏ ‚Äì –≥–æ—Ä—Å—Ç—å –æ—Ä–µ—Ö–æ–≤ –ø–æ–ª–µ–∑–Ω–∞, –Ω–æ —Ü–µ–ª—ã–π –ø–∞–∫–µ—Ç —É–∂–µ –ø–µ—Ä–µ–±–æ—Ä. ü•ú</li>
</ul>

<p>–ï—Å–ª–∏ –≤—ã —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–æ–Ω–∫–æ—Å—Ç—è—Ö –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è, –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–∏—Ç–∞–Ω–∏—è –¥–ª—è —Å–µ–±—è, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–∞—Ä–∞—Ñ–æ–Ω—É –≤ –¢–µ–ª–µ–≥—Ä–∞–º–µ! üì≤</p>`;

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ HTML-—Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ
 * @param {string} text –¢–µ–∫—Å—Ç —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
 * @returns {string} –¢–µ–∫—Å—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏
 */
function fixUnclosedTags(text) {
  // –°—Ç–µ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
  const tagStack = [];
  
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤
  const tagRegex = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi;
  
  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ
  let match;
  let lastIndex = 0;
  let result = '';
  
  while ((match = tagRegex.exec(text)) !== null) {
    const fullTag = match[0];
    const tagName = match[1].toLowerCase();
    const isClosingTag = fullTag.startsWith('</');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —Ç–µ–≥–∞
    result += text.substring(lastIndex, match.index);
    lastIndex = match.index + fullTag.length;
    
    if (isClosingTag) {
      // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–Ω –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∫—Ä—ã—Ç–æ–º—É —Ç–µ–≥—É
      if (tagStack.length > 0) {
        const lastOpenTag = tagStack[tagStack.length - 1];
        if (lastOpenTag === tagName) {
          // –¢–µ–≥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ —Å—Ç–µ–∫–∞
          tagStack.pop();
          result += fullTag;
        } else {
          // –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∫—Ä—ã—Ç–æ–º—É
          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏ –¥–ª—è –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤ –¥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ
          let found = false;
          for (let i = tagStack.length - 1; i >= 0; i--) {
            if (tagStack[i] === tagName) {
              found = true;
              // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–µ–≥–∏
              for (let j = tagStack.length - 1; j >= i; j--) {
                result += `</${tagStack[j]}>`;
                tagStack.pop();
              }
              break;
            }
          }
          
          if (!found) {
            // –ï—Å–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
            console.log(`–ò–≥–Ω–æ—Ä–∏—Ä—É—é –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </${tagName}>, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ`);
          } else {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
            result += fullTag;
          }
        }
      } else {
        // –ï—Å–ª–∏ —Å—Ç–µ–∫ –ø—É—Å—Ç, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –±–µ–∑ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ
        console.log(`–ò–≥–Ω–æ—Ä–∏—Ä—É—é –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </${tagName}>, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ`);
      }
    } else {
      // –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫
      tagStack.push(tagName);
      result += fullTag;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç
  result += text.substring(lastIndex);
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (LIFO)
  for (let i = tagStack.length - 1; i >= 0; i--) {
    result += `</${tagStack[i]}>`;
  }
  
  return result;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç Telegram
 * @param {string} html HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
 * @returns {string} HTML, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
 */
function formatHtmlForTelegram(html) {
  console.log('–§–æ—Ä–º–∞—Ç–∏—Ä—É—é HTML –¥–ª—è Telegram...');
  
  // 1. –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–ª–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  let result = html
    .replace(/<p[^>]*>([\s\S]*?)<\/p>/g, '$1\n')
    .replace(/<div[^>]*>([\s\S]*?)<\/div>/g, '$1\n')
    .replace(/<br\s*\/?>/g, '\n')
    .replace(/<ul[^>]*>/g, '\n')
    .replace(/<\/ul>/g, '\n')
    .replace(/<li[^>]*>([\s\S]*?)<\/li>/g, '‚Ä¢ $1\n');
  
  // 2. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—â–∏–µ —Ç–µ–≥–∏
  result = result
    .replace(/<strong>([\s\S]*?)<\/strong>/g, '<b>$1</b>')
    .replace(/<em>([\s\S]*?)<\/em>/g, '<i>$1</i>')
    .replace(/<b>([\s\S]*?)<\/b>/g, '<b>$1</b>')
    .replace(/<i>([\s\S]*?)<\/i>/g, '<i>$1</i>')
    .replace(/<u>([\s\S]*?)<\/u>/g, '<u>$1</u>')
    .replace(/<s>([\s\S]*?)<\/s>/g, '<s>$1</s>')
    .replace(/<strike>([\s\S]*?)<\/strike>/g, '<s>$1</s>');
  
  // 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è HTML-—Ç–µ–≥–∏
  result = result.replace(/<(?!\/?b>|\/?i>|\/?u>|\/?s>|\/?a(?:\s[^>]*)?>)[^>]*>/g, '');
  
  // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
  result = fixUnclosedTags(result);
  
  // 5. –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
  result = result
    .replace(/\n{3,}/g, '\n\n')
    .replace(/^\n+/, '')
    .replace(/\n+$/, '');
  
  console.log('–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  return result;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} html HTML –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @param {string} description –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise<void>}
 */
async function sendToTelegram(html, description) {
  try {
    console.log(`\n--- ${description} ---`);
    
    const formattedHtml = formatHtmlForTelegram(html);
    
    console.log('\n–ò—Å—Ö–æ–¥–Ω—ã–π HTML (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):');
    console.log(html.substring(0, 200) + '...');
    console.log('\n–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML –¥–ª—è Telegram (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):');
    console.log(formattedHtml.substring(0, 200) + '...');
    
    const response = await axios.post(`https://api.telegram.org/bot${telegramToken}/sendMessage`, {
      chat_id: chatId,
      text: formattedHtml,
      parse_mode: 'HTML',
      protect_content: false,
      disable_notification: false
    }, {
      headers: { 'Content-Type': 'application/json' },
      timeout: 30000,
    });
    
    if (response.data && response.data.ok) {
      console.log('\n‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      console.log(`ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.result.message_id}`);
      
      // –ü–æ–ª—É—á–∞–µ–º URL —Å–æ–æ–±—â–µ–Ω–∏—è
      try {
        const chatInfo = await axios.post(
          `https://api.telegram.org/bot${telegramToken}/getChat`,
          { chat_id: chatId },
          { headers: { 'Content-Type': 'application/json' } }
        );
        
        if (chatInfo.data.ok) {
          let messageUrl;
          if (chatInfo.data.result.username) {
            messageUrl = `https://t.me/${chatInfo.data.result.username}/${response.data.result.message_id}`;
            console.log(`–ü—É–±–ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª: ${chatInfo.data.result.username}`);
          } else {
            const formattedChatId = chatId.startsWith('-100') ? chatId.substring(4) : chatId;
            messageUrl = `https://t.me/c/${formattedChatId}/${response.data.result.message_id}`;
            console.log('–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª');
          }
          console.log(`URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${messageUrl}`);
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      }
    } else {
      console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', response.data);
    }
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
    if (error.response) {
      console.error('–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response.data);
    }
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞
 */
async function runTest() {
  console.log('=== –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ Telegram ===\n');
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
  await sendToTelegram(htmlFromEditor, '–û—Ç–ø—Ä–∞–≤–∫–∞ HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞');
  
  console.log('\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest().catch(console.error);