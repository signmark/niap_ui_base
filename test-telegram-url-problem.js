/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å URL, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –±–µ–∑ message_id
 * –ó–∞–ø—É—Å–∫: node test-telegram-url-problem.js
 */

import axios from 'axios';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message) {
  const timestamp = new Date().toLocaleTimeString();
  console.log(`[${timestamp}] ${message}`);
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –Ω–∞—à–µ–≥–æ –∫–æ–¥–∞ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–æ–µ–∫—Ç–∞
 */
async function testProjectIntegration() {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const testContent = {
      id: `test-integration-${Date.now()}`,
      title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å URL –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ',
      content: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL —Å message_id.',
      contentType: 'text',
      imageUrl: null,
      additionalImages: [],
      status: 'draft',
      userId: 'test-user',
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e',
      socialPlatforms: ['telegram'], 
      createdAt: new Date(),
      hashtags: [],
      links: [],
      metadata: {}
    };

    log('üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ...');

    // –ü—É–±–ª–∏–∫—É–µ–º —á–µ—Ä–µ–∑ API —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
    const response = await axios.post('http://localhost:5000/api/test/telegram-post', {
      content: testContent,
      chatId: '-1002302366310'
    });

    if (response.data.success) {
      log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      
      if (response.data.messageId) {
        log(`‚úÖ MessageId –ø–æ–ª—É—á–µ–Ω: ${response.data.messageId}`);
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: MessageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ!');
      }
      
      if (response.data.postUrl) {
        log(`üìã URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.postUrl}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ URL message_id
        if (response.data.messageId && response.data.postUrl.includes('/' + response.data.messageId)) {
          log('‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
        } else {
          log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
          log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è: URL=${response.data.postUrl}, messageId=${response.data.messageId}`);
        }
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: PostUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ!');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ
      log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:');
      console.dir(response.data, { depth: 3 });
      
      return response.data;
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      return response.data;
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    if (error.response) {
      log(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data)}`);
    }
    return { success: false, error: error.message };
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –º–µ—Ç–æ–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ API
 */
async function testUrlGeneration() {
  try {
    log('\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –Ω–∞–ø—Ä—è–º—É—é...');
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const chatId = '-1002302366310';
    const messageId = '12345'; // –¢–µ—Å—Ç–æ–≤—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è
    
    const response = await axios.get('http://localhost:5000/api/test/telegram-url', {
      params: {
        chatId,
        messageId
      }
    });
    
    if (response.data.success) {
      log('‚úÖ URL —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
      
      const url = response.data.data.url;
      log(`üìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL: ${url}`);
      
      if (url.includes('/' + messageId)) {
        log('‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
      } else {
        log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
      }
      
      return response.data;
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      return response.data;
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: ${error.message}`);
    if (error.response) {
      log(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data)}`);
    }
    return { success: false, error: error.message };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
async function runAllTests() {
  log('üîç –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å URL Telegram...');
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ
  await testProjectIntegration();
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –Ω–∞–ø—Ä—è–º—É—é
  await testUrlGeneration();
  
  log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
runAllTests()
  .catch(error => {
    log(`\n‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    process.exit(1);
  });