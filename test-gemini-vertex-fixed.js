/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Gemini Vertex —Å–µ—Ä–≤–∏—Å–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º Vertex AI
 */

async function testGeminiVertexService() {
  try {
    console.log('=== –¢–µ—Å—Ç Gemini Vertex —Å–µ—Ä–≤–∏—Å–∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º Vertex AI ===');
    
    const { geminiVertexService } = await import('./server/services/gemini-vertex.js');
    
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Vertex AI (–º–æ–¥–µ–ª—å 2.5)...');
    
    const testText = '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è —Ö–æ—Ä–æ—à–∞—è';
    const testPrompt = '–£–ª—É—á—à–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —Å–¥–µ–ª–∞–π –µ–≥–æ –±–æ–ª–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º';
    
    const improvedText = await geminiVertexService.improveText({
      text: testText,
      prompt: testPrompt,
      model: 'gemini-2.5-flash-preview-0520' // –î–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –Ω–∞ Vertex AI
    });
    
    console.log('‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:', testText);
    console.log('‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ Vertex AI:', improvedText);
    
    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Vertex AI (–º–æ–¥–µ–ª—å 2.5)...');
    
    const generatedText = await geminiVertexService.generateText({
      prompt: '–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–æ–≤',
      model: 'gemini-2.5-pro-preview-0506' // –î–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –Ω–∞ Vertex AI
    });
    
    console.log('‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ Vertex AI:', generatedText);
    
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ–±—ã—á–Ω–æ–π –º–æ–¥–µ–ª—å—é (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API)...');
    
    const standardText = await geminiVertexService.generateText({
      prompt: '–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–π –º–æ–¥–µ–ª–∏',
      model: 'gemini-1.5-flash' // –î–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API
    });
    
    console.log('‚úÖ –¢–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API:', standardText);
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! Vertex AI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    
    if (error.message.includes('Vertex AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')) {
      console.log('\nüîß –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Gemini 2.5 –º–æ–¥–µ–ª–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
      console.log('1. –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Vertex AI API –≤ Google Cloud Console');
      console.log('2. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ Service Account –∫–ª—é—á–∞');
      console.log('3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Vertex AI');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testGeminiVertexService();