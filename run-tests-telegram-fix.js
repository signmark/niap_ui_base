/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML –≤ Telegram
 * –ó–∞–ø—É—Å–∫: node run-tests-telegram-fix.js
 */

import dotenv from 'dotenv';
import axios from 'axios';
import fs from 'fs';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –ü—Ä–∏–º–µ—Ä HTML –¥–ª—è —Ç–µ—Å—Ç–∞ - —ç—Ç–æ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
const exampleHtml = `<p><strong>–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è!</strong> üôå –í—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞–¥—É–º—ã–≤–∞–ª–∏—Å—å –æ —Ç–æ–º, –∫–∞–∫ –ø–æ—Ö—É–¥–µ—Ç—å –±–µ–∑ –∏–∑–Ω—É—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∏–µ—Ç –∏ –º—É—á–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π? –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–µ–±–µ <em>—Ä–∞—Ü–∏–æ–Ω</em>, –∫–æ—Ç–æ—Ä—ã–π –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º ‚Äì <strong>–≤–∫—É—Å–Ω—ã–π</strong>, <u>—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π </u>–∏ –ø—Ä–∏ —ç—Ç–æ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤–µ—Å–∞.</p><p>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é ‚Äì –≤–æ—Ç –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! üîë –ó–∞–±—É–¥—å—Ç–µ –æ —Å–∫—É—á–Ω—ã—Ö –¥–∏–µ—Ç–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç –≤–∞—Å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –æ–±–¥–µ–ª–µ–Ω–Ω—ã–º–∏. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–º–∏ —Å —É—á–µ—Ç–æ–º –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π, –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ —Ü–µ–ª–µ–π.</p><p>–ö–∞–∂–¥—ã–π –∏–∑ –Ω–∞—Å —É–Ω–∏–∫–∞–ª–µ–Ω, –∏ –Ω–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –ø–∏—Ç–∞–Ω–∏–∏ —Ç–æ–∂–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã. –ü–æ—ç—Ç–æ–º—É –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∏ –Ω–∞–π—Ç–∏ —Å–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π —Ä–∞—Ü–∏–æ–Ω. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤–∞—à–∏–º –≤–∫—É—Å–∞–º –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º. üçΩÔ∏è</p><p>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –∫ –ø–∏—Ç–∞–Ω–∏—é –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø–æ–º–æ–≥–ª–æ –≤–∞–º –¥–æ—Å—Ç–∏—á—å —É—Å–ø–µ—Ö–∞ –∏ –∫–∞–∫–∏–µ —Å–æ–≤–µ—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –¥—Ä—É–≥–∏–º. –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–∞ –ø—É—Ç–∏ –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏! üí™</p>`;

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç Telegram 
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
 */
function convertEditorHtmlToTelegram(html) {
  if (!html) return '';
  
  console.log(`–ò—Å—Ö–æ–¥–Ω—ã–π HTML: ${html.substring(0, 100)}...`);
  
  try {
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    let result = html
      .replace(/<p[^>]*>([\s\S]*?)<\/p>/gi, '$1\n\n')
      .replace(/<div[^>]*>([\s\S]*?)<\/div>/gi, '$1\n')
      .replace(/<br\s*\/?>/gi, '\n')
      .replace(/<h[1-6][^>]*>([\s\S]*?)<\/h[1-6]>/gi, '<b>$1</b>\n\n');
    
    console.log(`–ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–ª–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${result.substring(0, 100)}...`);
    
    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    result = result
      // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTML-—Ç–µ–≥–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
      .replace(/<strong[^>]*>([\s\S]*?)<\/strong>/gi, '<b>$1</b>')
      .replace(/<em[^>]*>([\s\S]*?)<\/em>/gi, '<i>$1</i>')
      .replace(/<u[^>]*>([\s\S]*?)<\/u>/gi, '<u>$1</u>')
      .replace(/<(s|strike|del)[^>]*>([\s\S]*?)<\/\1>/gi, '<s>$2</s>')
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ span —Å inline-—Å—Ç–∏–ª—è–º–∏
      .replace(/<span[^>]*?style\s*=\s*["'][^"']*?font-style\s*:\s*italic[^"']*?["'][^>]*>([\s\S]*?)<\/span>/gi, '<i>$1</i>')
      .replace(/<span[^>]*?style\s*=\s*["'][^"']*?font-weight\s*:\s*(bold|[6-9]00)[^"']*?["'][^>]*>([\s\S]*?)<\/span>/gi, '<b>$2</b>')
      .replace(/<span[^>]*?style\s*=\s*["'][^"']*?text-decoration\s*:\s*underline[^"']*?["'][^>]*>([\s\S]*?)<\/span>/gi, '<u>$1</u>')
      .replace(/<span[^>]*?style\s*=\s*["'][^"']*?text-decoration\s*:\s*line-through[^"']*?["'][^>]*>([\s\S]*?)<\/span>/gi, '<s>$1</s>');
    
    console.log(`–ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${result.substring(0, 100)}...`);
    
    // 3. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö HTML-—Ç–µ–≥–æ–≤
    result = result.replace(/<(?!\/?(?:b|i|u|s|code|pre|a)(?:\s|>))[^>]+>/gi, '');
    
    console.log(`–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${result.substring(0, 100)}...`);
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
    const tagStack = [];
    const processedResult = [];
    let inTag = false;
    let currentTag = '';
    let isClosing = false;
    
    for (let i = 0; i < result.length; i++) {
      const char = result[i];
      processedResult.push(char);
      
      if (char === '<' && result[i+1] !== '/') {
        // –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
        inTag = true;
        currentTag = '';
        isClosing = false;
      } else if (char === '<' && result[i+1] === '/') {
        // –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
        inTag = true;
        currentTag = '';
        isClosing = true;
      } else if (char === '>' && inTag) {
        // –ö–æ–Ω–µ—Ü —Ç–µ–≥–∞
        inTag = false;
        
        if (isClosing) {
          // –≠—Ç–æ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
          const tagName = currentTag.replace('/', '').trim();
          if (tagStack.length > 0 && tagStack[tagStack.length - 1] === tagName) {
            // –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç - —É–¥–∞–ª—è–µ–º –∏–∑ —Å—Ç–µ–∫–∞
            tagStack.pop();
          }
        } else {
          // –≠—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ - –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫
          const tagName = currentTag.split(' ')[0];
          if (['b', 'i', 'u', 's', 'code', 'pre', 'a'].includes(tagName)) {
            tagStack.push(tagName);
          }
        }
      } else if (inTag) {
        // –°–æ–±–∏—Ä–∞–µ–º –∏–º—è —Ç–µ–≥–∞
        currentTag += char;
      }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
    for (let i = tagStack.length - 1; i >= 0; i--) {
      processedResult.push(`</${tagStack[i]}>`);
      console.log(`–î–æ–±–∞–≤–ª–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥: </${tagStack[i]}>`);
    }
    
    const finalResult = processedResult.join('');
    console.log(`–ò—Ç–æ–≥–æ–≤—ã–π HTML: ${finalResult.substring(0, 100)}...`);
    
    return finalResult;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ HTML: ${error.message}`);
    return html; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π HTML
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML –≤ Telegram
 */
async function sendFormattedHtmlToTelegram(html) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID');
    return;
  }
  
  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ HTML –≤ Telegram...');
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç Telegram
    const telegramHtml = convertEditorHtmlToTelegram(html);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram
    const response = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        chat_id: TELEGRAM_CHAT_ID,
        text: telegramHtml,
        parse_mode: 'HTML',
        disable_web_page_preview: true
      }
    );
    
    if (response.data && response.data.ok) {
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!');
      console.log(`üìä ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.result.message_id}`);
      return response.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', response.data);
      return response.data;
    }
  } catch (error) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error.message);
    if (error.response) {
      console.error('üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
    throw error;
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML –¥–ª—è Telegram
 */
async function runTest() {
  console.log('=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML –¥–ª—è Telegram ===');
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–º–µ—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    console.log('\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º...');
    await sendFormattedHtmlToTelegram(exampleHtml);
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest();