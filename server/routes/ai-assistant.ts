import { Router, Request, Response } from 'express';
// –ü–æ–∫–∞ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∏
// import { authenticateUser } from '../middleware/auth';

const router = Router();

interface AICommand {
  command: string;
  campaignId: string;
}

interface AIAction {
  type: 'create_post' | 'schedule_post' | 'publish_now' | 'generate_image' | 'analyze_trends';
  label: string;
  data: any;
  status: 'pending' | 'completed' | 'failed';
}

interface AIResponse {
  success: boolean;
  response?: string;
  actions?: AIAction[];
  error?: string;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ AI –∫–æ–º–∞–Ω–¥
router.post('/process-command', async (req: Request, res: Response) => {
  try {
    const { command, campaignId }: AICommand = req.body;
    const userId = (req as any).user?.id;

    console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: "${command}"`);

    if (!command || !campaignId) {
      return res.status(400).json({
        success: false,
        error: '–ö–æ–º–∞–Ω–¥–∞ –∏ ID –∫–∞–º–ø–∞–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã'
      });
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å –ø–æ–º–æ—â—å—é AI
    const analysisResult = await analyzeCommand(command, campaignId, userId);
    
    console.log(`ü§ñ [AI-ASSISTANT] –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:`, analysisResult);

    res.json(analysisResult);

  } catch (error) {
    console.error('ü§ñ [AI-ASSISTANT] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã'
    });
  }
});

// –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
async function analyzeCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  const lowerCommand = command.toLowerCase();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  if (lowerCommand.includes('—Å–æ–∑–¥–∞–π') || lowerCommand.includes('–Ω–∞–ø–∏—à–∏') || lowerCommand.includes('—Å–¥–µ–ª–∞–π –ø–æ—Å—Ç')) {
    return await handleCreatePostCommand(command, campaignId, userId);
  }
  
  if (lowerCommand.includes('–∑–∞–ø–ª–∞–Ω–∏—Ä—É–π') || lowerCommand.includes('–Ω–∞–∑–Ω–∞—á—å') || lowerCommand.includes('–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å')) {
    return await handleScheduleCommand(command, campaignId, userId);
  }
  
  if (lowerCommand.includes('–æ–ø—É–±–ª–∏–∫—É–π') || lowerCommand.includes('–ø—É–±–ª–∏–∫—É–π') || lowerCommand.includes('–æ—Ç–ø—Ä–∞–≤—å —Å–µ–π—á–∞—Å')) {
    return await handlePublishCommand(command, campaignId, userId);
  }
  
  if (lowerCommand.includes('–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') || lowerCommand.includes('–∫–∞—Ä—Ç–∏–Ω–∫') || lowerCommand.includes('—Ñ–æ—Ç–æ') || lowerCommand.includes('–≥–µ–Ω–µ—Ä–∏—Ä—É–π')) {
    return await handleImageCommand(command, campaignId, userId);
  }
  
  if (lowerCommand.includes('–∞–Ω–∞–ª–∏–∑') || lowerCommand.includes('—Ç—Ä–µ–Ω–¥') || lowerCommand.includes('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫')) {
    return await handleAnalysisCommand(command, campaignId, userId);
  }

  // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º AI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
  return await handleGeneralCommand(command, campaignId, userId);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
async function handleCreatePostCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞`);
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–º—É –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
  const topic = extractTopicFromCommand(command);
  const platforms = extractPlatformsFromCommand(command);
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é AI
  try {
    const aiContent = await generatePostContent(topic, platforms);
    
    const action: AIAction = {
      type: 'create_post',
      label: `–°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç: "${topic}"`,
      data: {
        content: aiContent.text,
        image_url: aiContent.imagePrompt ? undefined : null,
        platforms: platforms.length > 0 ? platforms : ['instagram', 'vk', 'facebook'],
        status: 'draft'
      },
      status: 'pending'
    };

    return {
      success: true,
      response: `–ì–æ—Ç–æ–≤–æ! –Ø —Å–æ–∑–¥–∞—é –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É "${topic}" –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º: ${platforms.length > 0 ? platforms.join(', ') : 'Instagram, VK, Facebook'}.\n\n–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n${aiContent.text}${aiContent.imagePrompt ? `\n\n–¢–∞–∫–∂–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${aiContent.imagePrompt}` : ''}`,
      actions: [action]
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
    return {
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ—Å—Ç–∞'
    };
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async function handleScheduleCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è`);
  
  const topic = extractTopicFromCommand(command);
  const scheduledDate = extractDateFromCommand(command);
  const platforms = extractPlatformsFromCommand(command);
  
  if (!scheduledDate) {
    return {
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –£–∫–∞–∂–∏—Ç–µ –∫–æ–≥–¥–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–∑–∞–≤—Ç—Ä–∞ –≤ 10 —É—Ç—Ä–∞", "—á–µ—Ä–µ–∑ 2 —á–∞—Å–∞", "–≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")'
    };
  }

  try {
    const aiContent = await generatePostContent(topic, platforms);
    
    const action: AIAction = {
      type: 'schedule_post',
      label: `–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ ${scheduledDate.toLocaleString('ru-RU')}`,
      data: {
        content: aiContent.text,
        scheduledDate: scheduledDate.toISOString(),
        platforms: platforms.length > 0 ? platforms : ['instagram', 'vk', 'facebook']
      },
      status: 'pending'
    };

    return {
      success: true,
      response: `–û—Ç–ª–∏—á–Ω–æ! –ü–ª–∞–Ω–∏—Ä—É—é –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É "${topic}" –Ω–∞ ${scheduledDate.toLocaleString('ru-RU')} –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º: ${platforms.length > 0 ? platforms.join(', ') : 'Instagram, VK, Facebook'}.\n\n–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n${aiContent.text}`,
      actions: [action]
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞:', error);
    return {
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç'
    };
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
async function handlePublishCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏`);
  
  const topic = extractTopicFromCommand(command);
  const platforms = extractPlatformsFromCommand(command);
  
  try {
    const aiContent = await generatePostContent(topic, platforms);
    
    const action: AIAction = {
      type: 'publish_now',
      label: `–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å`,
      data: {
        content: aiContent.text,
        platforms: platforms.length > 0 ? platforms : ['instagram', 'vk', 'facebook'],
        publishNow: true
      },
      status: 'pending'
    };

    return {
      success: true,
      response: `–ü—É–±–ª–∏–∫—É—é –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É "${topic}" –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤ ${platforms.length > 0 ? platforms.join(', ') : 'Instagram, VK, Facebook'}!\n\n–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n${aiContent.text}`,
      actions: [action]
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error);
    return {
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç'
    };
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function handleImageCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);
  
  const imagePrompt = extractImagePromptFromCommand(command);
  
  const action: AIAction = {
    type: 'generate_image',
    label: `–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`,
    data: {
      prompt: imagePrompt,
      style: 'professional',
      size: '1024x1024'
    },
    status: 'pending'
  };

  return {
    success: true,
    response: `–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "${imagePrompt}". –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...`,
    actions: [action]
  };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞
async function handleAnalysisCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–Ω–∞–ª–∏–∑–∞`);
  
  return {
    success: true,
    response: `–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—É—â–∏–µ —Ç—Ä–µ–Ω–¥—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤–∞—à–µ–π –∫–∞–º–ø–∞–Ω–∏–∏. –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏...`,
    actions: [{
      type: 'analyze_trends',
      label: '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤',
      data: { campaignId },
      status: 'pending'
    }]
  };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ AI
async function handleGeneralCommand(command: string, campaignId: string, userId: string): Promise<AIResponse> {
  console.log(`ü§ñ [AI-ASSISTANT] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–µ–π –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ AI`);
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –≤–Ω–µ—à–Ω–∏–º AI API (GPT, Gemini –∏ —Ç.–¥.)
  // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç
  return {
    success: true,
    response: `–Ø –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ: "${command}". –ü–æ–∫–∞ —è —É—á—É—Å—å –ø–æ–Ω–∏–º–∞—Ç—å —Ç–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –ª—É—á—à–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:\n\n‚Ä¢ "–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –ø—Ä–æ..."\n‚Ä¢ "–ó–∞–ø–ª–∞–Ω–∏—Ä—É–π –Ω–∞..."\n‚Ä¢ "–û–ø—É–±–ª–∏–∫—É–π —Å–µ–π—á–∞—Å..."\n‚Ä¢ "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."\n\n–ò–ª–∏ —Å–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å.`
  };
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é AI
async function generatePostContent(topic: string, platforms: string[]): Promise<{text: string, imagePrompt?: string}> {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Gemini API –∏–ª–∏ –¥—Ä—É–≥–∏–º AI
  // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  
  const templates = {
    instagram: `üéØ ${topic}

‚ú® –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–æ—Å—Ç –ø—Ä–æ ${topic.toLowerCase()}!

#smm #–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ #${topic.replace(/\s+/g, '')}`,
    vk: `${topic}

–î–µ–ª–∏–º—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø—Ä–æ ${topic.toLowerCase()}.

–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ –æ–± —ç—Ç–æ–º?`,
    facebook: `${topic}

–ü–æ–¥—Ä–æ–±–Ω—ã–π –ø–æ—Å—Ç –æ ${topic.toLowerCase()} –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`
  };

  // –í—ã–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const primaryPlatform = platforms[0] || 'instagram';
  const text = templates[primaryPlatform as keyof typeof templates] || templates.instagram;
  
  return {
    text,
    imagePrompt: `Professional image about ${topic}, modern style, high quality`
  };
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–º—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã
function extractTopicFromCommand(command: string): string {
  // –ü—Ä–æ—Å—Ç–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–º—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  const patterns = [
    /–ø—Ä–æ (.+)/i,
    /–æ (.+)/i,
    /–Ω–∞ —Ç–µ–º—É (.+)/i,
    /–ø–æ—Å—Ç (.+)/i
  ];
  
  for (const pattern of patterns) {
    const match = command.match(pattern);
    if (match) {
      return match[1].trim();
    }
  }
  
  // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å—é –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ —Ç–µ–º—É
  return command.replace(/(—Å–æ–∑–¥–∞–π|–Ω–∞–ø–∏—à–∏|—Å–¥–µ–ª–∞–π|–ø–æ—Å—Ç)/gi, '').trim() || '–æ–±—â–∞—è —Ç–µ–º–∞';
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏–∑ –∫–æ–º–∞–Ω–¥—ã
function extractPlatformsFromCommand(command: string): string[] {
  const platforms: string[] = [];
  const lowerCommand = command.toLowerCase();
  
  if (lowerCommand.includes('instagram') || lowerCommand.includes('–∏–Ω—Å—Ç–∞–≥—Ä–∞–º')) {
    platforms.push('instagram');
  }
  if (lowerCommand.includes('vk') || lowerCommand.includes('–≤–∫') || lowerCommand.includes('–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ')) {
    platforms.push('vk');
  }
  if (lowerCommand.includes('facebook') || lowerCommand.includes('—Ñ–µ–π—Å–±—É–∫')) {
    platforms.push('facebook');
  }
  if (lowerCommand.includes('telegram') || lowerCommand.includes('—Ç–µ–ª–µ–≥—Ä–∞–º')) {
    platforms.push('telegram');
  }
  if (lowerCommand.includes('youtube') || lowerCommand.includes('—é—Ç—É–±')) {
    platforms.push('youtube');
  }
  
  return platforms;
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏–∑ –∫–æ–º–∞–Ω–¥—ã
function extractDateFromCommand(command: string): Date | null {
  const now = new Date();
  const lowerCommand = command.toLowerCase();
  
  // –ó–∞–≤—Ç—Ä–∞
  if (lowerCommand.includes('–∑–∞–≤—Ç—Ä–∞')) {
    const tomorrow = new Date(now);
    tomorrow.setDate(tomorrow.getDate() + 1);
    
    // –ò—â–µ–º –≤—Ä–µ–º—è
    const timeMatch = command.match(/(\d{1,2}):?(\d{2})?\s*(—É—Ç—Ä–∞|–¥–Ω—è|–≤–µ—á–µ—Ä–∞)/i);
    if (timeMatch) {
      let hours = parseInt(timeMatch[1]);
      const minutes = parseInt(timeMatch[2] || '0');
      const period = timeMatch[3].toLowerCase();
      
      if (period === '–≤–µ—á–µ—Ä–∞' && hours < 12) hours += 12;
      if (period === '—É—Ç—Ä–∞' && hours === 12) hours = 0;
      
      tomorrow.setHours(hours, minutes, 0, 0);
    } else {
      tomorrow.setHours(9, 0, 0, 0); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 9 —É—Ç—Ä–∞
    }
    
    return tomorrow;
  }
  
  // –ß–µ—Ä–µ–∑ X —á–∞—Å–æ–≤
  const hoursMatch = command.match(/—á–µ—Ä–µ–∑\s+(\d+)\s+—á–∞—Å/i);
  if (hoursMatch) {
    const hours = parseInt(hoursMatch[1]);
    const futureDate = new Date(now);
    futureDate.setHours(futureDate.getHours() + hours);
    return futureDate;
  }
  
  // –°–µ–≥–æ–¥–Ω—è –≤ X
  const todayTimeMatch = command.match(/—Å–µ–≥–æ–¥–Ω—è\s+–≤\s+(\d{1,2}):?(\d{2})?/i);
  if (todayTimeMatch) {
    const hours = parseInt(todayTimeMatch[1]);
    const minutes = parseInt(todayTimeMatch[2] || '0');
    const today = new Date(now);
    today.setHours(hours, minutes, 0, 0);
    return today;
  }
  
  return null;
}

// –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function extractImagePromptFromCommand(command: string): string {
  const patterns = [
    /–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (.+)/i,
    /–∫–∞—Ä—Ç–∏–Ω–∫.* (.+)/i,
    /—Ñ–æ—Ç–æ (.+)/i,
    /–≥–µ–Ω–µ—Ä–∏—Ä—É–π (.+)/i
  ];
  
  for (const pattern of patterns) {
    const match = command.match(pattern);
    if (match) {
      return match[1].trim();
    }
  }
  
  return command.replace(/(–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ|–∫–∞—Ä—Ç–∏–Ω–∫|—Ñ–æ—Ç–æ|–≥–µ–Ω–µ—Ä–∏—Ä—É–π)/gi, '').trim() || 'professional marketing image';
}

export default router;