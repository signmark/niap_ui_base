import express from 'express';
import axios from 'axios';

const router = express.Router();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π Facebook —Ç–æ–∫–µ–Ω–∞
router.get('/facebook/debug-token', async (req, res) => {
  try {
    const { token } = req.query;
    
    if (!token) {
      return res.status(400).json({
        success: false,
        error: 'Token is required'
      });
    }

    console.log('üîç [FB-DEBUG] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', token.toString().substring(0, 20) + '...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    const debugResponse = await axios.get(`https://graph.facebook.com/me/permissions`, {
      params: {
        access_token: token
      }
    });

    console.log('üìã [FB-DEBUG] –†–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', JSON.stringify(debugResponse.data, null, 2));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const meResponse = await axios.get(`https://graph.facebook.com/me`, {
      params: {
        access_token: token,
        fields: 'id,name,email'
      }
    });

    console.log('üë§ [FB-DEBUG] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', JSON.stringify(meResponse.data, null, 2));

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const pagesResponse = await axios.get(`https://graph.facebook.com/me/accounts`, {
      params: {
        access_token: token,
        fields: 'id,name,access_token,category'
      }
    });

    console.log('üìÑ [FB-DEBUG] –°—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(pagesResponse.data, null, 2));

    res.json({
      success: true,
      permissions: debugResponse.data.data,
      user: meResponse.data,
      pages: pagesResponse.data.data
    });

  } catch (error) {
    console.error('‚ùå [FB-DEBUG] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', error.response?.data || error.message);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞',
      details: error.response?.data || error.message
    });
  }
});

export default router;