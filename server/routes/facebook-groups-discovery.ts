import { Router } from 'express';
import axios from 'axios';

const router = Router();

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Facebook –≥—Ä—É–ø–ø –∏ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/facebook/groups-and-pages', async (req, res) => {
  try {
    const token = req.query.token as string;
    
    if (!token) {
      return res.status(400).json({
        success: false,
        error: '–¢–æ–∫–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
      });
    }

    console.log('üîç [FB-GROUPS] –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ç–æ–∫–µ–Ω–∞:', token.substring(0, 20) + '...');

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const pagesResponse = await axios.get(`https://graph.facebook.com/me/accounts`, {
      params: {
        access_token: token,
        fields: 'id,name,access_token,category,tasks'
      }
    });

    console.log('üìÑ [FB-GROUPS] –°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã:', pagesResponse.data);

    // –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let groups = [];
    try {
      const groupsResponse = await axios.get(`https://graph.facebook.com/me/groups`, {
        params: {
          access_token: token,
          fields: 'id,name,description,privacy,member_count'
        }
      });
      groups = groupsResponse.data.data || [];
      console.log('üë• [FB-GROUPS] –ì—Ä—É–ø–ø—ã –Ω–∞–π–¥–µ–Ω—ã:', groups);
    } catch (groupError: any) {
      console.log('‚ö†Ô∏è [FB-GROUPS] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—ã:', groupError.response?.data || groupError.message);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—ã –ø—É—Å—Ç—ã–º–∏
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è—Ö
    const permissionsResponse = await axios.get(`https://graph.facebook.com/me/permissions`, {
      params: {
        access_token: token
      }
    });

    const permissions = permissionsResponse.data.data.map((p: any) => p.permission);
    const hasPublishToGroups = permissions.includes('publish_to_groups');
    const hasManagePosts = permissions.includes('email'); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ

    console.log('üîë [FB-GROUPS] –†–∞–∑—Ä–µ—à–µ–Ω–∏—è:', {
      hasPublishToGroups,
      hasManagePosts,
      allPermissions: permissions
    });

    res.json({
      success: true,
      data: {
        pages: pagesResponse.data.data || [],
        groups: groups,
        permissions: {
          hasPublishToGroups,
          hasManagePosts,
          all: permissions
        }
      }
    });

  } catch (error: any) {
    console.error('‚ùå [FB-GROUPS] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–ø–ø –∏ —Å—Ç—Ä–∞–Ω–∏—Ü:', error.response?.data || error.message);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Facebook',
      details: error.response?.data || error.message
    });
  }
});

export default router;