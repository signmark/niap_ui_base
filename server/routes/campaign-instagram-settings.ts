import express from 'express';
import { log } from '../utils/logger';
import axios from 'axios';

const router = express.Router();

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ Instagram –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ JSON –∫–∞–º–ø–∞–Ω–∏–∏
 */
router.get('/campaigns/:campaignId/instagram-settings', async (req, res) => {
  const { campaignId } = req.params;
  const userToken = req.headers.authorization?.replace('Bearer ', '');

  try {
    console.log('üìã GET Instagram settings for campaign:', campaignId);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω –∫–∞–∫ fallback –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const tokenToUse = userToken || process.env.DIRECTUS_TOKEN;
    
    if (!tokenToUse) {
      return res.status(401).json({
        success: false,
        error: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω'
      });
    }

    console.log('üìã Using token type:', userToken ? 'user' : 'system');

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
    const getCampaignResponse = await axios.get(
      `${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`,
      {
        headers: {
          Authorization: `Bearer ${tokenToUse}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const campaign = getCampaignResponse.data.data;
    const socialMediaSettings = campaign.social_media_settings || {};
    const instagramSettings = socialMediaSettings.instagram || null;

    console.log('üìã Instagram settings found:', {
      hasSettings: !!instagramSettings,
      appId: instagramSettings?.appId,
      configured: instagramSettings?.configured
    });

    res.json({
      success: true,
      settings: instagramSettings
    });

  } catch (error: any) {
    console.error('‚ùå Error retrieving Instagram settings:', error.message);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Instagram –Ω–∞—Å—Ç—Ä–æ–µ–∫',
      details: error.message
    });
  }
});

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ Instagram –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ JSON –∫–∞–º–ø–∞–Ω–∏–∏
 */
router.patch('/campaigns/:campaignId/instagram-settings', async (req, res) => {
  const { campaignId } = req.params;
  const { appId, appSecret, instagramId, accessToken, setupCompletedAt } = req.body;
  const userToken = req.headers.authorization?.replace('Bearer ', '');

  try {
    console.log('üî• INSTAGRAM SETTINGS ENDPOINT');
    console.log('üî• Campaign ID:', campaignId);
    console.log('üî• Full request body:', JSON.stringify(req.body, null, 2));
    console.log('üî• Instagram settings:', { 
      appId: appId ? 'present' : 'missing', 
      appSecret: appSecret ? 'present' : 'missing', 
      instagramId,
      accessToken: accessToken ? 'present' : 'missing'
    });

    if (!appId || !appSecret) {
      return res.status(400).json({
        success: false,
        error: 'App ID –∏ App Secret –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã'
      });
    }

    // –ü–æ–ª—É—á–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
    const getCampaignResponse = await axios.get(
      `${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`,
      {
        headers: {
          Authorization: `Bearer ${userToken}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const campaign = getCampaignResponse.data.data;
    const existingSettings = campaign.social_media_settings || {};

    // –û–±–Ω–æ–≤–ª—è–µ–º Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏)
    const existingInstagram = existingSettings.instagram || {};
    const updatedSettings = {
      ...existingSettings,
      instagram: {
        ...existingInstagram, // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (—Ç–æ–∫–µ–Ω—ã, –∞–∫–∫–∞—É–Ω—Ç—ã)
        appId,
        appSecret, // App Secret —Ç–æ–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ë–î
        instagramId: instagramId || existingInstagram.instagramId || '',
        accessToken: accessToken || existingInstagram.accessToken, // –°–æ—Ö—Ä–∞–Ω—è–µ–º accessToken
        setupCompletedAt: setupCompletedAt || new Date().toISOString(),
        configured: true
      }
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const updateResponse = await axios.patch(
      `${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`,
      {
        social_media_settings: updatedSettings
      },
      {
        headers: {
          Authorization: `Bearer ${userToken}`,
          'Content-Type': 'application/json'
        }
      }
    );

    console.log('üî• Instagram settings saved successfully');
    console.log('üî• Final Instagram settings:', JSON.stringify(updatedSettings.instagram, null, 2));

    res.json({
      success: true,
      data: updatedSettings.instagram
    });

  } catch (error: any) {
    console.error('‚ùå Error saving Instagram settings:', error?.response?.data || error.message);
    
    res.status(500).json({
      success: false,
      error: error?.response?.data?.errors?.[0]?.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Instagram'
    });
  }
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ Instagram Business Account ID —á–µ—Ä–µ–∑ Graph API
 */
router.post('/campaigns/:campaignId/fetch-instagram-business-id', async (req, res) => {
  const { campaignId } = req.params;
  const { accessToken } = req.body;
  const userToken = req.headers.authorization?.replace('Bearer ', '');

  try {
    console.log('üîç Fetching Instagram Business Account ID for campaign:', campaignId);
    console.log('üîç Access Token provided:', accessToken ? 'YES' : 'NO');
    console.log('üîç User Token provided:', userToken ? 'YES' : 'NO');
    
    if (!accessToken) {
      console.log('‚ùå Missing access token');
      return res.status(400).json({
        success: false,
        error: 'Access Token –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Business Account ID'
      });
    }

    if (!userToken) {
      console.log('‚ùå Missing user token');
      return res.status(401).json({
        success: false,
        error: '–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω'
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã Facebook –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üìã Getting Facebook pages...');
    const pagesResponse = await axios.get(
      `https://graph.facebook.com/v23.0/me/accounts?access_token=${accessToken}&fields=id,name,instagram_business_account`
    );

    console.log('üìã Facebook pages response:', JSON.stringify(pagesResponse.data, null, 2));

    const pages = pagesResponse.data.data || [];
    let instagramBusinessAccountId = null;
    let availablePages = [];

    // –ò—â–µ–º Instagram Business Account —Å—Ä–µ–¥–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ —Å–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
    for (const page of pages) {
      availablePages.push({
        id: page.id,
        name: page.name,
        hasInstagramBusiness: !!(page.instagram_business_account && page.instagram_business_account.id)
      });
      
      if (page.instagram_business_account && page.instagram_business_account.id) {
        instagramBusinessAccountId = page.instagram_business_account.id;
        console.log('‚úÖ Found Instagram Business Account ID:', instagramBusinessAccountId);
        console.log('‚úÖ From Facebook page:', page.name, '(ID:', page.id, ')');
        break;
      }
    }

    console.log('üìã Available Facebook pages:', availablePages);

    if (!instagramBusinessAccountId) {
      return res.status(404).json({
        success: false,
        error: 'Instagram Business Account –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–∞ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–≤—è–∑–∞–Ω–∞ —Å Instagram Business –∞–∫–∫–∞—É–Ω—Ç–æ–º.',
        details: {
          availablePages: availablePages,
          message: '–ù–∏ –æ–¥–Ω–∞ –∏–∑ –≤–∞—à–∏—Ö Facebook —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–µ —Å–≤—è–∑–∞–Ω–∞ —Å Instagram Business –∞–∫–∫–∞—É–Ω—Ç–æ–º. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å Instagram Business –∞–∫–∫–∞—É–Ω—Ç –∫ –æ–¥–Ω–æ–π –∏–∑ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü.'
        }
      });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º Instagram Business Account ID –≤ –∫–∞–º–ø–∞–Ω–∏—é
    console.log('üíæ Saving Instagram Business Account ID to campaign...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω
    const getCampaignResponse = await axios.get(
      `${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`,
      {
        headers: {
          Authorization: `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );

    const campaign = getCampaignResponse.data.data;
    const currentSocialMediaSettings = campaign.social_media_settings || {};
    const currentInstagramSettings = currentSocialMediaSettings.instagram || {};

    // –û–±–Ω–æ–≤–ª—è–µ–º Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –Ω–æ–≤—ã–º Business Account ID
    const updatedInstagramSettings = {
      ...currentInstagramSettings,
      businessAccountId: instagramBusinessAccountId,
      businessAccountIdFetchedAt: new Date().toISOString()
    };

    const updatedSocialMediaSettings = {
      ...currentSocialMediaSettings,
      instagram: updatedInstagramSettings
    };

    console.log('üíæ Saving with Business Account ID:', instagramBusinessAccountId);
    console.log('üíæ Full Instagram settings to save:', JSON.stringify(updatedInstagramSettings, null, 2));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω
    const updateResponse = await axios.patch(
      `${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`,
      {
        social_media_settings: updatedSocialMediaSettings
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );

    console.log('‚úÖ Instagram Business Account ID saved successfully');

    res.json({
      success: true,
      businessAccountId: instagramBusinessAccountId,
      message: 'Instagram Business Account ID —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω'
    });

  } catch (error: any) {
    console.error('‚ùå Error fetching Instagram Business Account ID:', error.response?.data || error.message);
    res.status(500).json({
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Instagram Business Account ID',
      details: error.response?.data || error.message
    });
  }
});

export default router;