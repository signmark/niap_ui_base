import express from 'express';
import axios from 'axios';
import { log } from '../utils/logger';

const router = express.Router();

// –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è OAuth flow (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Redis)
const oauthSessions = new Map();

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ OAuth flow
router.post('/instagram/auth/start', async (req, res) => {
  try {
    const { appId, appSecret, redirectUri, webhookUrl, instagramId, campaignId } = req.body;

    if (!appId || !appSecret || !campaignId) {
      return res.status(400).json({
        success: false,
        error: '–¢—Ä–µ–±—É—é—Ç—Å—è: appId, appSecret, campaignId'
      });
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π redirect URI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    let finalRedirectUri = redirectUri;
    if (!finalRedirectUri) {
      const host = req.get('host');
      if (host && host.includes('replit.dev')) {
        // –í Replit —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
        finalRedirectUri = `${req.protocol}://${host}/instagram-callback`;
      } else {
        // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–º–µ–Ω
        finalRedirectUri = 'https://smm.roboflow.space/instagram-callback';
      }
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—à–∏—Ç—ã–π webhook URL –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
    const finalWebhookUrl = webhookUrl || 'https://n8n.roboflow.space/webhook/instagram-auth';

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π state –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    const state = Math.random().toString(36).substring(2, 15);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    oauthSessions.set(state, {
      appId,
      appSecret,
      redirectUri: finalRedirectUri,
      webhookUrl: finalWebhookUrl,
      instagramId,
      campaignId, // –î–æ–±–∞–≤–ª—è–µ–º campaignId –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      timestamp: Date.now()
    });

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Facebook —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
    const scopes = [
      'instagram_graph_user_profile',  // –ü—Ä–æ—Ñ–∏–ª—å Instagram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      'instagram_graph_user_media',    // –ú–µ–¥–∏–∞ Instagram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      'pages_show_list',               // –°–ø–∏—Å–æ–∫ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü
      'pages_read_engagement'          // –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    ].join(',');

    const authUrl = `https://www.facebook.com/v23.0/dialog/oauth?` +
      `client_id=${appId}&` +
      `redirect_uri=${encodeURIComponent(finalRedirectUri)}&` +
      `scope=${encodeURIComponent(scopes)}&` +
      `response_type=code&` +
      `state=${state}`;

    log('instagram-oauth', `OAuth –ø–æ—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω –¥–ª—è App ID: ${appId}, Campaign ID: ${campaignId}`);
    
    res.json({ 
      success: true,
      authUrl, 
      state,
      redirectUri: finalRedirectUri
    });
  } catch (error) {
    log('instagram-oauth', `–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ OAuth: ${error}`);
    res.status(500).json({ 
      success: false,
      error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ OAuth' 
    });
  }
});

// Callback —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Facebook
router.get('/instagram/auth/callback', async (req, res) => {
  console.log('üöÄ INSTAGRAM OAUTH CALLBACK STARTED');
  console.log('üìã Query parameters:', JSON.stringify(req.query, null, 2));
  
  const { code, state, error } = req.query;

  if (error) {
    console.log('‚ùå Facebook OAuth error:', error);
    log('instagram-oauth', `Facebook error: ${error}`);
    return res.status(400).json({ error: `Facebook error: ${error}` });
  }

  if (!code || !state) {
    console.log('‚ùå Missing required parameters - code or state');
    return res.status(400).json({ error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ state' });
  }

  console.log('‚úÖ OAuth code received:', code?.toString().substring(0, 20) + '...');
  console.log('‚úÖ State parameter:', state);

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
  const session = oauthSessions.get(state);
  if (!session) {
    console.log('‚ùå Invalid session for state:', state);
    console.log('üìã Available sessions:', Array.from(oauthSessions.keys()));
    return res.status(400).json({ error: '–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è' });
  }

  console.log('‚úÖ Session found:', {
    appId: session.appId,
    campaignId: session.campaignId,
    instagramId: session.instagramId,
    timestamp: new Date(session.timestamp).toISOString()
  });

  try {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è axios —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º timeout
    const axiosConfig = {
      timeout: 30000, // 30 —Å–µ–∫—É–Ω–¥
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
      }
    };

    log('instagram-oauth', '–®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω...');
    // –®–∞–≥ 1: –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω
    const tokenResponse = await axios.get('https://graph.facebook.com/v23.0/oauth/access_token', {
      params: {
        client_id: session.appId,
        client_secret: session.appSecret,  
        redirect_uri: session.redirectUri,
        code: code
      },
      ...axiosConfig
    });

    const shortLivedToken = tokenResponse.data.access_token;
    console.log('‚úÖ Short-lived token received:', shortLivedToken.substring(0, 20) + '...');

    log('instagram-oauth', '–®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω...');
    console.log('üîÑ Converting to long-lived token...');
    // –®–∞–≥ 2: –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π
    const longLivedResponse = await axios.get('https://graph.facebook.com/v23.0/oauth/access_token', {
      params: {
        grant_type: 'fb_exchange_token',
        client_id: session.appId,
        client_secret: session.appSecret,
        fb_exchange_token: shortLivedToken
      },
      ...axiosConfig
    });

    const longLivedToken = longLivedResponse.data.access_token;
    const expiresIn = longLivedResponse.data.expires_in;
    console.log('‚úÖ Long-lived token received:', longLivedToken.substring(0, 20) + '...');
    console.log('‚è∞ Token expires in:', expiresIn, 'seconds');

    log('instagram-oauth', '–®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ...');
    // –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userResponse = await axios.get('https://graph.facebook.com/v23.0/me', {
      params: {
        access_token: longLivedToken,
        fields: 'id,name,email'
      },
      ...axiosConfig
    });

    log('instagram-oauth', '–®–∞–≥ 4: –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    // –®–∞–≥ 4: –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å Instagram –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    const pagesResponse = await axios.get('https://graph.facebook.com/v23.0/me/accounts', {
      params: {
        access_token: longLivedToken,
        fields: 'id,name,access_token,instagram_business_account{id,name,username,profile_picture_url}',
        limit: 100
      },
      ...axiosConfig
    });

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º Instagram
    const pagesWithInstagram = pagesResponse.data.data?.filter((page: any) =>
      page.instagram_business_account
    ) || [];

    log('instagram-oauth', `–ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü —Å Instagram: ${pagesWithInstagram.length}`);

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ N8N webhook
    const webhookData = {
      success: true,
      appId: session.appId,
      longLivedToken,
      expiresIn,
      user: userResponse.data,
      pages: pagesWithInstagram,
      instagramAccounts: pagesWithInstagram.map((page: any) => ({
        instagramId: page.instagram_business_account.id,
        username: page.instagram_business_account.username,
        name: page.instagram_business_account.name,
        pageId: page.id,
        pageName: page.name,
        pageAccessToken: page.access_token
      })),
      timestamp: new Date().toISOString()
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ Instagram –Ω–∞–ø—Ä—è–º—É—é –≤ social_media_settings –∫–∞–º–ø–∞–Ω–∏–∏
    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫–∞–º–ø–∞–Ω–∏—é
      const instagramSettings = {
        appId: session.appId,
        appSecret: session.appSecret, // –°–æ—Ö—Ä–∞–Ω—è–µ–º App Secret –≤ –ë–î
        longLivedToken,
        expiresIn,
        tokenExpiresAt: (expiresIn && expiresIn !== 'never' && !isNaN(parseInt(expiresIn))) 
          ? new Date(Date.now() + (parseInt(expiresIn) * 1000)).toISOString() 
          : null,
        user: userResponse.data,
        instagramAccounts: webhookData.instagramAccounts,
        authTimestamp: new Date().toISOString(),
        status: 'active'
      };

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
      const DIRECTUS_URL = process.env.DIRECTUS_URL;
      const DIRECTUS_TOKEN = process.env.DIRECTUS_TOKEN;

      const currentCampaignResponse = await axios.get(
        `${DIRECTUS_URL}/items/user_campaigns/${session.campaignId}`,
        {
          headers: {
            'Authorization': `Bearer ${DIRECTUS_TOKEN}`
          }
        }
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º social_media_settings —Å –¥–∞–Ω–Ω—ã–º–∏ Instagram
      const currentSettings = currentCampaignResponse.data.data.social_media_settings || {};
      const existingInstagram = currentSettings.instagram || {};
      
      console.log('üíæ Preparing to save Instagram OAuth data to campaign:', session.campaignId);
      console.log('üìã Instagram settings to save:', {
        appId: instagramSettings.appId,
        hasAppSecret: !!instagramSettings.appSecret,
        hasLongLivedToken: !!instagramSettings.longLivedToken,
        userInfo: instagramSettings.user,
        instagramAccountsCount: instagramSettings.instagramAccounts?.length || 0
      });
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –Ω–æ–≤—ã–º–∏ OAuth –¥–∞–Ω–Ω—ã–º–∏
      const updatedInstagramSettings = {
        ...existingInstagram,
        ...instagramSettings,
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –ø–æ–ª—è –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        token: existingInstagram.token || instagramSettings.longLivedToken,
        businessAccountId: existingInstagram.businessAccountId || 
          (instagramSettings.instagramAccounts && instagramSettings.instagramAccounts[0] ? 
            instagramSettings.instagramAccounts[0].instagramId : null)
      };
      
      const updatedSettings = {
        ...currentSettings,
        instagram: updatedInstagramSettings
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–∞–º–ø–∞–Ω–∏—é
      console.log('üíæ Saving to Directus campaign:', session.campaignId);
      console.log('üìã Settings being saved:', JSON.stringify(updatedSettings, null, 2));
      
      const saveResponse = await axios.patch(
        `${DIRECTUS_URL}/items/user_campaigns/${session.campaignId}`,
        {
          social_media_settings: updatedSettings
        },
        {
          headers: {
            'Authorization': `Bearer ${DIRECTUS_TOKEN}`,
            'Content-Type': 'application/json'
          }
        }
      );

      console.log('‚úÖ Instagram settings saved to database successfully!');
      console.log('üìã Save response status:', saveResponse.status);
      console.log('üíæ Final settings saved:', JSON.stringify(updatedInstagramSettings, null, 2));
      
      log('instagram-oauth', `Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∫–∞–º–ø–∞–Ω–∏—é ${session.campaignId}`);
      log('instagram-oauth', `–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${JSON.stringify(updatedInstagramSettings, null, 2)}`);

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ N8N webhook –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
      if (session.webhookUrl) {
        try {
          await axios.post(session.webhookUrl, webhookData, {
            headers: {
              'Content-Type': 'application/json'
            },
            timeout: 10000
          });
          log('instagram-oauth', `–î–∞–Ω–Ω—ã–µ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ N8N webhook: ${session.webhookUrl}`);
        } catch (webhookError) {
          log('instagram-oauth', `–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ N8N webhook: ${webhookError}`);
        }
      }

    } catch (saveError) {
      log('instagram-oauth', `–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Instagram –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${saveError}`);
    }

    // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
    oauthSessions.delete(state);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
    const responseData = {
      success: true,
      message: 'Instagram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ',
      data: {
        token: longLivedToken, // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –æ—Ç–≤–µ—Ç –¥–ª—è frontend
        instagramAccounts: webhookData.instagramAccounts,
        user: userResponse.data,
        longLivedToken,
        expiresIn
      }
    };
    
    console.log('üì° CALLBACK RESPONSE - Sending to client:', {
      success: responseData.success,
      message: responseData.message,
      hasToken: !!responseData.data.token,
      tokenPreview: responseData.data.token?.substring(0, 20) + '...',
      userInfo: responseData.data.user,
      accountsCount: responseData.data.instagramAccounts?.length || 0
    });
    
    res.json(responseData);

  } catch (error) {
    log('instagram-oauth', `–û—à–∏–±–∫–∞ OAuth callback: ${error}`);
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
    oauthSessions.delete(state);
    
    res.status(500).json({
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ OAuth callback',
      details: error instanceof Error ? error.message : String(error)
    });
  }
});

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ OAuth —Å–µ—Å—Å–∏–∏
router.get('/instagram/auth/status/:state', (req, res) => {
  const { state } = req.params;
  const session = oauthSessions.get(state);
  
  if (!session) {
    return res.json({ exists: false });
  }
  
  res.json({
    exists: true,
    timestamp: session.timestamp,
    appId: session.appId
  });
});

export default router;