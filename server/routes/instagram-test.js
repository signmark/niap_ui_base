/**
 * –¢–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */

import express from 'express';
import InstagramDirectService from '../services/instagram-direct.js';

const router = express.Router();
const instagramService = new InstagramDirectService();

// –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
router.post('/test-instagram-publish', async (req, res) => {
  console.log('üß™ –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ—Å—Ç Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
  
  try {
    const {
      caption = 'üöÄ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –∏–∑ SMM Manager! #SMM #–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è #test',
      imageUrl = 'https://picsum.photos/1080/1080?random=1',
      username = 'it.zhdanov',
      password = 'QtpZ3dh70307'
    } = req.body;
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', {
      caption: caption.substring(0, 50) + '...',
      imageUrl,
      username
    });
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const result = await instagramService.testPublish({
      caption,
      imageUrl,
      username,
      password
    });
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', result);
    
    res.json({
      success: true,
      message: '–¢–µ—Å—Ç Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω',
      data: result
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞:', error.message);
    
    res.status(500).json({
      success: false,
      error: error.message,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
    });
  }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Instagram —Å–µ—Ä–≤–∏—Å–∞
router.get('/instagram-status', async (req, res) => {
  console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Instagram —Å–µ—Ä–≤–∏—Å–∞');
  
  try {
    res.json({
      success: true,
      message: 'Instagram —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ',
      data: {
        serviceActive: true,
        lastTest: new Date().toISOString(),
        features: [
          '–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
          '–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤',
          '–°–∏–º—É–ª—è—Ü–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö API –∫–ª—é—á–µ–π)'
        ]
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
    
    res.status(500).json({
      success: false,
      error: error.message,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Instagram —Å–µ—Ä–≤–∏—Å–∞'
    });
  }
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ webhook –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
router.post('/webhook-simulate', async (req, res) => {
  console.log('üîó –°–∏–º—É–ª—è—Ü–∏—è webhook –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram');
  
  try {
    const {
      content,
      imageUrl,
      contentId,
      campaignId,
      settings
    } = req.body;
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ webhook:', {
      contentId,
      campaignId,
      hasImage: !!imageUrl,
      hasSettings: !!settings
    });
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    const result = await instagramService.publishToInstagram({
      caption: content,
      imageUrl,
      settings: settings || {
        username: 'it.zhdanov',
        password: 'QtpZ3dh70307'
      }
    });
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç webhook:', result);
    
    res.json({
      success: result.success,
      message: result.message,
      data: {
        postUrl: result.postUrl,
        publishedAt: result.publishedAt,
        platform: 'instagram'
      }
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ webhook —Å–∏–º—É–ª—è—Ü–∏–∏:', error.message);
    
    res.status(500).json({
      success: false,
      error: error.message,
      message: '–û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏ webhook –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
    });
  }
});

export default router;