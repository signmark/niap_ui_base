import axios from 'axios';
import { log } from '../utils/logger';
import { storage } from '../storage';
import { socialPublishingService } from './social/index';
import { directusCrud } from './directus-crud';
import { publicationLockManager } from './publication-lock-manager';
import { publicationTracker } from './publication-tracking';
import { directusAuthManager } from './directus-auth-manager';

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ N8N
 */
export class PublishScheduler {
  private intervalId: NodeJS.Timeout | null = null;
  private isRunning = false;
  private checkIntervalMs = 30000; // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  private isProcessing = false;
  private adminTokenCache: string | null = null;
  private adminTokenTimestamp: number = 0;
  private tokenExpirationMs = 30 * 60 * 1000; // 30 –º–∏–Ω—É—Ç
  
  // –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–´–ô)
  private processedContentCache = new Map<string, Set<string>>(); // contentId -> Set<platform>
  private maxCacheSize = 1000; // –ú–∞–∫—Å–∏–º—É–º 1000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫—ç—à–µ
  private cacheCleanupInterval = 30 * 60 * 1000; // –æ—á–∏—â–∞–µ–º –∫—ç—à –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
  private lastCacheCleanup = Date.now();

  /**
   * –û—á–∏—â–∞–µ—Ç –∫—ç—à –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –õ–ò–ú–ò–¢–û–ú –†–ê–ó–ú–ï–†–ê
   */
  private cleanupCache() {
    const now = Date.now();
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞
    if (this.processedContentCache.size > this.maxCacheSize) {
      // –£–¥–∞–ª—è–µ–º 50% —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π 
      const entries = Array.from(this.processedContentCache.entries());
      const toDelete = entries.slice(0, Math.floor(entries.length / 2));
      
      for (const [key] of toDelete) {
        this.processedContentCache.delete(key);
      }
      
      log(`üö® MEMORY: –ö—ç—à —É—Ä–µ–∑–∞–Ω –¥–æ ${this.processedContentCache.size} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–±—ã–ª–æ ${entries.length})`, 'scheduler');
    }
    
    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    if (now - this.lastCacheCleanup > this.cacheCleanupInterval) {
      const oldSize = this.processedContentCache.size;
      this.processedContentCache.clear();
      this.lastCacheCleanup = now;
      log(`üõ°Ô∏è –ö—ç—à –æ—á–∏—â–µ–Ω –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (—Ä–∞–∑–º–µ—Ä –±—ã–ª: ${oldSize})`, 'scheduler');
    }
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ—Ç –∫—ç—à –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   */
  public clearContentCache(contentId: string) {
    this.processedContentCache.delete(contentId);
    log(`–ö—ç—à –æ—á–∏—â–µ–Ω –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}`, 'scheduler');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–∞ –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
   */
  private isAlreadyProcessed(contentId: string, platform: string): boolean {
    const platformSet = this.processedContentCache.get(contentId);
    return platformSet ? platformSet.has(platform) : false;
  }

  /**
   * –û—Ç–º–µ—á–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
   */
  private markAsProcessed(contentId: string, platform: string) {
    let platformSet = this.processedContentCache.get(contentId);
    if (!platformSet) {
      platformSet = new Set();
      this.processedContentCache.set(contentId, platformSet);
    }
    platformSet.add(platform);
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
   */
  start() {
    if (this.isRunning) {
      log('‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫', 'scheduler');
      return;
    }

    this.isRunning = true;
    log('‚úÖ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º', 'scheduler');
    
    // –°—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
    this.checkScheduledContent();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
    this.intervalId = setInterval(() => {
      this.checkScheduledContent();
    }, this.checkIntervalMs);
    
    log(`‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${this.checkIntervalMs}–º—Å`, 'scheduler');
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
   */
  stop() {
    if (!this.isRunning || !this.intervalId) {
      log('–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –Ω–µ –∑–∞–ø—É—â–µ–Ω', 'scheduler');
      return;
    }

    log('–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π', 'scheduler');
    clearInterval(this.intervalId);
    this.intervalId = null;
    this.isRunning = false;
    this.isProcessing = false;
  }

  /**
   * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
   */
  shutdown() {
    this.stop();
    
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏
    this.processedContentCache.clear();
    this.adminTokenCache = null;
    
    log('üî¥ PublishScheduler: –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞', 'scheduler');
  }





  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø—É–±–ª–∏–∫—É–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —É—á–µ—Ç–æ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
   */
  async checkScheduledContent() {
    try {
      if (this.isProcessing) {
        return;
      }
      
      this.isProcessing = true;
      
      // –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      this.cleanupCache();
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
      const authToken = process.env.DIRECTUS_TOKEN || process.env.DIRECTUS_ADMIN_TOKEN;
      if (!authToken) {
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
      const directusUrl = process.env.DIRECTUS_URL;
      if (!directusUrl) {
        return;
      }

      const headers = {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json'
      };

      const currentTime = new Date();
      const currentTimeISO = currentTime.toISOString();
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ 'scheduled' –∏ 'partial' –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
      let allContent: any[] = [];
      
      try {
        const response = await axios.get(`${directusUrl}/items/campaign_content`, {
          headers,
          params: {
            filter: JSON.stringify({
              status: {
                _in: ['scheduled', 'partial']
              }
            }),
            limit: 100
          }
        });

        allContent = response?.data?.data || [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–∏ —Ç–µ—Å—Ç–æ–≤—ã–µ YouTube –∫–æ–Ω—Ç–µ–Ω—Ç—ã
        const testContentIds = ['bea24ff7-9c75-4404-812b-06d355bd98ac', 'fd9b54a9-24ad-41ab-b1fa-4da777154b3d', '9d2c6b9a-0aa9-44c0-b37d-538b6c6193c3', '654701b6-a865-44f4-8453-0ea433cd5f90', 'ea5a4482-8885-408e-9495-bca8293b7f85', 'e2469bd4-416e-4258-8c34-5822c3759c77', '6eff52ab-7623-414c-8a0c-5744f4c0be55'];
        const foundTestContent = allContent.filter((item: any) => testContentIds.includes(item.id));
        
        // –£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        
        if (allContent.length === 0) {
          return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        try {
          const { broadcastNotification } = await import('../index');
          broadcastNotification('scheduler_processing_start', {
            count: allContent.length,
            message: `–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É ${allContent.length} –∫–æ–Ω—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏`
          });
        } catch (error) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        }

        let processedCount = 0;
        let publishedCount = 0;

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
        for (const content of allContent) {
          // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ
          processedCount++;
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º
          const platformsData = content.social_platforms || content.socialPlatforms;
          if (!platformsData) {
            continue;
          }

          let platforms = platformsData;
          if (typeof platforms === 'string') {
            try {
              platforms = JSON.parse(platforms);
            } catch (e) {
              continue;
            }
          }
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≥–æ—Ç–æ–≤—ã–µ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏
          const readyPlatforms = [];
          // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–¥–µ—Ç–∞–ª–∏ —Ç–æ–ª—å–∫–æ –≤ debug)
          
          for (const [platformName, platformData] of Object.entries(platforms)) {
            const data = platformData as any;
            // –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (—Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥)
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º postUrl - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ
            if (data.postUrl && data.postUrl.trim() !== '') {
              continue; // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ
            }
            
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            if (data.status === 'published') {
              continue;
            }
            
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å failed —Å—Ç–∞—Ç—É—Å–æ–º (–ª–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ)
            if (data.status === 'failed') {
              // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
              if (data.error && (data.error.includes('CRITICAL') || data.error.includes('not found'))) {
                log(`‚ùå ${platformName} ${content.id}: ${data.error}`, 'scheduler');
              }
              continue;
            }
            
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
            if (data.error && (
              data.error.includes('CRITICAL') ||
              data.error.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–∞–º–ø–∞–Ω–∏–∏') ||
              data.error.includes('not found in campaign') ||
              data.error.includes('Invalid access token') ||
              data.error.includes('Application does not have permission') ||
              data.error.includes('—Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω') ||
              data.error.includes('—Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫') ||
              data.error.includes('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã') ||
              data.error.includes('platform settings not configured')
            )) {
              continue; // –ú–æ–ª—á–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
            }
            
            // üõ°Ô∏è –£–†–û–í–ï–ù–¨ 1: –õ–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            if (this.isAlreadyProcessed(content.id, platformName)) {
              log(`üõ°Ô∏è –ó–ê–©–ò–¢–ê –£–†–û–í–ï–ù–¨ 1: ${platformName} ${content.id} —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è (–ª–æ–∫–∞–ª—å–Ω—ã–π –∫—ç—à)`, 'scheduler');
              continue;
            }
            
            // üõ°Ô∏è –£–†–û–í–ï–ù–¨ 2: Publication Tracker (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
            const canPublishFromDB = await publicationTracker.canPublish(content.id, platformName);
            if (!canPublishFromDB) {
              log(`üõ°Ô∏è –ó–ê–©–ò–¢–ê –£–†–û–í–ï–ù–¨ 2: ${platformName} ${content.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω Publication Tracker`, 'scheduler');
              continue;
            }

            // –£–º–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ YouTube quota_exceeded - –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –ª–∏ –∫–≤–æ—Ç—ã
            if (platformName === 'youtube' && data.status === 'quota_exceeded') {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–≤–æ—Ç (–ø–æ–ª–Ω–æ—á—å PT)
              const quotaExceededTime = data.updatedAt ? new Date(data.updatedAt) : null;
              let shouldResetQuota = false;
              
              if (quotaExceededTime) {
                // YouTube –∫–≤–æ—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ –ø–æ–ª–Ω–æ—á—å PT (UTC-8 –∏–ª–∏ UTC-7 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç DST)
                const nowPT = new Date();
                const ptOffset = -8 * 60; // Pacific Time offset in minutes (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
                const ptTime = new Date(nowPT.getTime() + ptOffset * 60000);
                
                // –ï—Å–ª–∏ quota_exceeded –±—ã–ª –ø–æ–ª—É—á–µ–Ω –≤—á–µ—Ä–∞ –∏–ª–∏ —Ä–∞–Ω—å—à–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
                const quotaPTTime = new Date(quotaExceededTime.getTime() + ptOffset * 60000);
                const daysDiff = Math.floor((ptTime.getTime() - quotaPTTime.getTime()) / (24 * 60 * 60 * 1000));
                
                if (daysDiff >= 1) {
                  shouldResetQuota = true;
                  log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: YouTube –∫–≤–æ—Ç—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º quota_exceeded –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
                }
              } else {
                // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
                shouldResetQuota = true;
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π quota_exceeded —Å—Ç–∞—Ç—É—Å –±–µ–∑ –¥–∞—Ç—ã –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
              }
              
              if (!shouldResetQuota) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                const errorMessage = data.error || '';
                const errorType = errorMessage.includes('exceeded the number of videos') ? 
                  '–¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–æ–∫ –≤–∏–¥–µ–æ' : '–ø—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ API';
                
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º YouTube ${content.id} - ${errorType} (–∫–≤–æ—Ç—ã –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å)`, 'scheduler');
                continue;
              } else {
                // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω
                if (data.postUrl) {
                  log(`üõ°Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–©–ò–¢–ê: YouTube –∫–æ–Ω—Ç–µ–Ω—Ç ${content.id} –£–ñ–ï –û–ü–£–ë–õ–ò–ö–û–í–ê–ù (${data.postUrl}), –ù–ï –°–ë–†–ê–°–´–í–ê–ï–ú quota_exceeded!`, 'scheduler');
                  continue;
                }
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º quota_exceeded —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –°–±—Ä–∞—Å—ã–≤–∞–µ–º quota_exceeded —Å—Ç–∞—Ç—É—Å –¥–ª—è YouTube –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
                // –°—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
              }
            }

            // üõ°Ô∏è –£–†–û–í–ï–ù–¨ 3: Lock Manager –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            if (publicationLockManager.isLocked(content.id, platformName)) {
              log(`üõ°Ô∏è –ó–ê–©–ò–¢–ê –£–†–û–í–ï–ù–¨ 3: ${platformName} ${content.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω Lock Manager`, 'scheduler');
              continue;
            }

            // –û–¢–ö–õ–Æ–ß–ï–ù–ê –ë–õ–û–ö–ò–†–û–í–ö–ê –î–õ–Ø –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä—É—á–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
            // –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            let shouldPublish = false;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
            if (data.scheduledAt || data.scheduled_at) {
              const platformTime = new Date(data.scheduledAt || data.scheduled_at);
              if (platformTime <= currentTime) {
                shouldPublish = true;
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} –≥–æ—Ç–æ–≤–∞ –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ - ${platformTime.toISOString()} <= ${currentTime.toISOString()}`, 'scheduler');
              } else {
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} –∂–¥–µ—Ç —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ - ${platformTime.toISOString()} > ${currentTime.toISOString()}`, 'scheduler');
              }
            } 
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ)
            else if (content.scheduled_at) {
              const contentTime = new Date(content.scheduled_at);
              if (contentTime <= currentTime) {
                shouldPublish = true;
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} –≥–æ—Ç–æ–≤–∞ –ø–æ –æ–±—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ - ${contentTime.toISOString()} <= ${currentTime.toISOString()}`, 'scheduler');
              } else {
                log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} –∂–¥–µ—Ç –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - ${contentTime.toISOString()} > ${currentTime.toISOString()}`, 'scheduler');
              }
            } 
            // –î–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º partial - –ø—É–±–ª–∏–∫—É–µ–º —Å—Ä–∞–∑—É (–ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞)
            else if (content.status === 'partial') {
              shouldPublish = true;
              log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è (—Å—Ç–∞—Ç—É—Å partial)`, 'scheduler');
            }
            // –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ pending - –ø—É–±–ª–∏–∫—É–µ–º —Å—Ä–∞–∑—É
            else if (data.status === 'pending') {
              shouldPublish = true;
              log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è (—Å—Ç–∞—Ç—É—Å ${data.status})`, 'scheduler');
            }
            // Failed —Å—Ç–∞—Ç—É—Å —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –≤—ã—à–µ, —ç—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∞

            if (shouldPublish) {
              // üõ°Ô∏è –£–†–û–í–ï–ù–¨ 3 –∏ 4: –û—Ç–º–µ—á–∞–µ–º –≤ –∫—ç—à–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∏ Publication Tracker
              this.markAsProcessed(content.id, platformName);
              publicationTracker.markAsProcessed(content.id, platformName);
              readyPlatforms.push(platformName);
              log(`üõ°Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ ${platformName} –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è ${content.id}`, 'scheduler');
            }
          }

          if (readyPlatforms.length > 0) {
            // –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ N8N (–ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ)
            await this.publishContentToPlatforms(content, readyPlatforms, authToken);
            publishedCount++;
          }
          // –¢–∏—Ö–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ –≥–æ—Ç–æ–≤—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        try {
          const { broadcastNotification } = await import('../index');
          broadcastNotification('scheduler_processing_complete', {
            processedCount,
            publishedCount,
            message: `–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${publishedCount} –∏–∑ ${processedCount} –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∑–∞–ø—É—â–µ–Ω–æ`
          });
        } catch (error) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        }
        
      } catch (error: any) {
        // –¢–∏—Ö–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if (error.response?.status === 401) {
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π
          try {
            const { adminTokenManager } = await import('./admin-token-manager');
            adminTokenManager.clearToken();
          } catch {}
          return;
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        if (error.response?.status !== 401 && error.response?.status !== 403) {
          log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –û—à–∏–±–∫–∞ API: ${error.message}`, 'scheduler');
        }
        return;
      }
      
    } catch (error: any) {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π: ${error.message}`, 'scheduler');
    } finally {
      this.isProcessing = false;
    }
  }

  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ N8N webhooks
   */
  private async publishContentToPlatforms(content: any, platforms: string[], authToken: string) {
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–∏—Å—ã –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const publishPromises = platforms.map(async (platform) => {
      try {
        // –í–°–ï –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ N8N webhooks
        return await this.publishThroughN8nWebhook(content, platform);
      } catch (error: any) {
        log(`–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ${content.id} –≤ ${platform}: ${error.message}`, 'scheduler');
        return { platform, success: false, error: error.message };
      }
    });

    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await Promise.allSettled(publishPromises);

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    await this.updateContentStatus(content.id, authToken);
  }

  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ YouTube –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ API
   */
  private async publishToYouTubeDirect(content: any, authToken: string) {
    try {
      log(`–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ü—Ä—è–º–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ YouTube –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
      const campaign = await this.getCampaignData(content.campaign_id, authToken);
      if (!campaign) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏');
      }

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      const { socialPublishingService } = await import('./social/index');
      const result = await socialPublishingService.publishToPlatform(content, 'youtube', campaign, authToken);

      if (result.status === 'published') {
        log(`YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}: ${result.postUrl}`, 'scheduler');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try {
          const updateData = {
            socialPlatforms: {
              ...content.social_platforms,
              youtube: {
                status: 'published',
                postUrl: result.postUrl,
                platform: 'youtube',
                publishedAt: result.publishedAt || new Date().toISOString(),
                videoId: result.videoId || null
              }
            }
          };
          
          await storage.updateCampaignContent(content.id, updateData, authToken);
          log(`YouTube —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
        } catch (saveError: any) {
          log(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è YouTube —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: ${saveError.message}`, 'scheduler');
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        try {
          const { broadcastNotification } = await import('../index');
          broadcastNotification('content_published', {
            contentId: content.id,
            platform: 'youtube',
            message: '–£—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ YouTube'
          });
        } catch (error) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        }
        
        return { platform: 'youtube', success: true };
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ quota exceeded –æ—à–∏–±–∫—É
        if (result.quotaExceeded || (result.error && result.error.includes('quota'))) {
          log(`YouTube quota exceeded –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å`, 'scheduler');
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º quota_exceeded —Å—Ç–∞—Ç—É—Å
          try {
            const updateData = {
              socialPlatforms: {
                ...content.social_platforms,
                youtube: {
                  status: 'quota_exceeded',
                  platform: 'youtube',
                  error: result.error || 'YouTube quota exceeded',
                  updatedAt: new Date().toISOString()
                }
              }
            };
            
            if (authToken) {
              await storage.updateCampaignContent(content.id, updateData, authToken);
              log(`–°—Ç–∞—Ç—É—Å quota_exceeded —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ quota_exceeded
              await this.updateContentStatus(content.id, authToken);
            }
          } catch (updateError: any) {
            log(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ quota_exceeded: ${updateError.message}`, 'scheduler');
          }
        }
        
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ YouTube API');
      }

    } catch (error: any) {
      log(`–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ YouTube —á–µ—Ä–µ–∑ N8N ${content.id}: ${error.message}`, 'scheduler');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ quota exceeded –æ—à–∏–±–∫—É –∏ –≤ –æ–±—ã—á–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏—è—Ö
      if (error.message && (error.message.includes('quota') || error.message.includes('Quota'))) {
        log(`YouTube quota exceeded –≤ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
        
        try {
          const authToken = process.env.DIRECTUS_TOKEN || process.env.DIRECTUS_ADMIN_TOKEN;
          const updateData = {
            social_platforms: {
              ...content.social_platforms,
              youtube: {
                status: 'quota_exceeded',
                platform: 'youtube', 
                error: error.message,
                updatedAt: new Date().toISOString()
              }
            }
          };
          
          if (authToken) {
            await storage.updateCampaignContent(content.id, updateData, authToken);
            log(`–°—Ç–∞—Ç—É—Å quota_exceeded —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`, 'scheduler');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ quota_exceeded
            await this.updateContentStatus(content.id, authToken);
          }
        } catch (updateError: any) {
          log(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ quota_exceeded: ${updateError.message}`, 'scheduler');
        }
      }
      
      return { platform: 'youtube', success: false, error: error.message };
    }
  }

  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ N8N webhook
   */
  private async publishThroughN8nWebhook(content: any, platform: string) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Instagram Stories
    const isStory = content.content_type === 'story' || 
                   (content.metadata && (
                     (typeof content.metadata === 'string' && content.metadata.includes('storyType')) ||
                     (typeof content.metadata === 'object' && content.metadata.storyType)
                   ));

    // –ú–∞–ø–ø–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–∞ N8N webhook endpoints
    const webhookMap: Record<string, string> = {
      'telegram': 'publish-telegram',
      'vk': 'publish-vk',
      'instagram': isStory ? 'publish-stories' : 'publish-instagram', 
      'facebook': 'publish-facebook',
      'youtube': 'publish-youtube'
    };

    const platformString = platform.toLowerCase();
    const webhookName = webhookMap[platformString] || `publish-${platformString}`;
    
    log(`üé¨ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ö–æ–Ω—Ç–µ–Ω—Ç ${content.id} - —Ç–∏–ø: ${content.content_type}, —è–≤–ª—è–µ—Ç—Å—è Stories: ${isStory}, webhook: ${webhookName}`, 'scheduler');

    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è N8N webhook
    const n8nBaseUrl = process.env.N8N_URL;
    if (!n8nBaseUrl) {
      throw new Error('N8N_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }

    const baseUrl = n8nBaseUrl.endsWith('/') ? n8nBaseUrl.slice(0, -1) : n8nBaseUrl;
    const webhookUrl = baseUrl.includes('/webhook') 
      ? `${baseUrl}/${webhookName}`
      : `${baseUrl}/webhook/${webhookName}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ N8N –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    
    await axios.post(webhookUrl, {
      contentId: content.id,
      platform: platformString,
      source: 'scheduler',
      timestamp: new Date().toISOString()
    }, {
      timeout: 30000,
      headers: {
        'Content-Type': 'application/json'
      }
    });

    // –ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ N8N
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ UI
    try {
      const { broadcastNotification } = await import('../index');
      const platformNames: Record<string, string> = {
        'instagram': 'Instagram',
        'facebook': 'Facebook', 
        'vk': '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ',
        'telegram': 'Telegram'
      };
      const platformName = platformNames[platform.toLowerCase()] || platform;
      
      broadcastNotification('content_published', {
        contentId: content.id,
        platform: platform,
        message: `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ N8N –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ ${platformName}`
      });
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    }
    
    return { platform, success: true };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
   */
  private async getCampaignData(campaignId: string, authToken: string) {
    try {
      const response = await axios.get(`${process.env.DIRECTUS_URL}/items/user_campaigns/${campaignId}`, {
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'Content-Type': 'application/json'
        },
        params: {
          fields: 'id,name,social_media_settings'
        }
      });
      return response.data.data;
    } catch (error: any) {
      return null;
    }
  }

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
   */
  private async updateContentStatus(contentId: string, authToken: string) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      const freshContent = await storage.getCampaignContentById(contentId, authToken);
      if (!freshContent?.social_platforms) return;

      let platforms = freshContent.social_platforms;
      if (typeof platforms === 'string') {
        platforms = JSON.parse(platforms);
      }

      const allPlatforms = Object.keys(platforms);
      const publishedCount = Object.values(platforms).filter((data: any) => 
        data.status === 'published' && data.postUrl
      ).length;
      
      // –°—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å quota_exceeded –∫–∞–∫ "–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ" 
      const quotaExceededCount = Object.values(platforms).filter((data: any) => 
        data.status === 'quota_exceeded'
      ).length;
      
      const completedCount = publishedCount + quotaExceededCount;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
      let newStatus = freshContent.status;
      if (completedCount === allPlatforms.length) {
        newStatus = 'published';
      } else if (publishedCount > 0) {
        newStatus = 'partially_published';
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
      if (newStatus !== freshContent.status) {
        const updateData: any = { status: newStatus };
        if (newStatus === 'published') {
          updateData.published_at = new Date();
        }

        await storage.updateCampaignContent(contentId, updateData, authToken);
        log(`–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '${newStatus}'`, 'scheduler');
      }

    } catch (error: any) {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}: ${error.message}`, 'scheduler');
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
let publishSchedulerInstance: PublishScheduler | null = null;

export function getPublishScheduler(): PublishScheduler {
  if (!publishSchedulerInstance) {
    publishSchedulerInstance = new PublishScheduler();
    log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Å–∏–Ω–≥–ª—Ç–æ–Ω', 'scheduler');
  }
  return publishSchedulerInstance;
}