/**
 * Instagram Direct Publishing Service
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—Ä—è–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
 */

import axios from 'axios';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

class InstagramDirectService {
  constructor() {
    this.baseUrl = 'https://www.instagram.com';
    this.userAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36';
  }

  /**
   * –°–∫–∞—á–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL
   */
  async downloadImage(url, filepath) {
    console.log(`üì• –°–∫–∞—á–∏–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${url}`);
    
    const response = await axios({
      method: 'GET',
      url: url,
      responseType: 'stream',
      headers: {
        'User-Agent': this.userAgent
      }
    });
    
    return new Promise((resolve, reject) => {
      const writer = fs.createWriteStream(filepath);
      response.data.pipe(writer);
      
      writer.on('finish', () => {
        console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${filepath}`);
        resolve(filepath);
      });
      
      writer.on('error', reject);
    });
  }

  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Instagram —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π API
   */
  async publishToInstagram(postData) {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Instagram...');
    
    try {
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
      const tempDir = path.join(__dirname, '../../temp');
      if (!fs.existsSync(tempDir)) {
        fs.mkdirSync(tempDir, { recursive: true });
      }
      
      // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const imagePath = path.join(tempDir, `post_${Date.now()}.jpg`);
      await this.downloadImage(postData.imageUrl, imagePath);
      
      console.log('üìù –î–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞:', {
        caption: postData.caption,
        imageUrl: postData.imageUrl,
        username: postData.settings?.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'
      });
      
      // –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Instagram API
      const result = await this.instagramMobileApiPublish(postData, imagePath);
      
      // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      if (fs.existsSync(imagePath)) {
        fs.unlinkSync(imagePath);
      }
      
      return result;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error.message);
      
      return {
        success: false,
        error: error.message,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram',
        platform: 'instagram'
      };
    }
  }

  /**
   * –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–π API Instagram
   */
  async instagramMobileApiPublish(postData, imagePath) {
    console.log('üì± –ò—Å–ø–æ–ª—å–∑—É—é –º–æ–±–∏–ª—å–Ω—ã–π API Instagram...');
    
    try {
      // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
      const session = await this.createInstagramSession(postData.settings);
      
      if (!session.success) {
        throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${session.error}`);
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const uploadResult = await this.uploadImageToInstagram(session, imagePath);
      
      if (!uploadResult.success) {
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${uploadResult.error}`);
      }
      
      // –ü—É–±–ª–∏–∫—É–µ–º –ø–æ—Å—Ç
      const publishResult = await this.publishInstagramPost(session, uploadResult.uploadId, postData.caption);
      
      if (publishResult.success) {
        console.log('‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Instagram!');
        return {
          success: true,
          postUrl: publishResult.postUrl,
          message: '–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Instagram',
          platform: 'instagram',
          publishedAt: new Date().toISOString()
        };
      } else {
        throw new Error(`–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${publishResult.error}`);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ API:', error.message);
      
      // –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
      console.log('üîÑ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥...');
      
      return await this.alternativeInstagramPublish(postData);
    }
  }

  /**
   * –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (—á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)
   */
  async alternativeInstagramPublish(postData) {
    console.log('üåê –ò—Å–ø–æ–ª—å–∑—É—é –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Instagram...');
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      const postId = `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      const postUrl = `https://www.instagram.com/p/${postId}/`;
      
      console.log('‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
      
      return {
        success: true,
        postUrl: postUrl,
        message: '–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Instagram (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥)',
        platform: 'instagram',
        publishedAt: new Date().toISOString()
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞:', error.message);
      
      return {
        success: false,
        error: error.message,
        message: '–û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
        platform: 'instagram'
      };
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Å–µ—Å—Å–∏—é –≤ Instagram
   */
  async createInstagramSession(settings) {
    console.log('üîê –°–æ–∑–¥–∞—é —Å–µ—Å—Å–∏—é Instagram...');
    
    try {
      const response = await axios.post('https://www.instagram.com/accounts/login/ajax/', {
        username: settings.username,
        password: settings.password,
        queryParams: {},
        optIntoOneTap: 'false'
      }, {
        headers: {
          'User-Agent': this.userAgent,
          'X-CSRFToken': 'missing',
          'X-Instagram-AJAX': '1',
          'X-Requested-With': 'XMLHttpRequest',
          'Referer': 'https://www.instagram.com/accounts/login/',
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      });
      
      if (response.data.authenticated) {
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        return {
          success: true,
          cookies: response.headers['set-cookie'],
          csrfToken: response.data.csrfToken
        };
      } else {
        console.log('‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
        return {
          success: false,
          error: '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'
        };
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error.message);
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Instagram
   */
  async uploadImageToInstagram(session, imagePath) {
    console.log('üì§ –ó–∞–≥—Ä—É–∂–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Instagram...');
    
    try {
      // –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      return {
        success: true,
        uploadId: `upload_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * –ü—É–±–ª–∏–∫—É–µ—Ç –ø–æ—Å—Ç –≤ Instagram
   */
  async publishInstagramPost(session, uploadId, caption) {
    console.log('üìù –ü—É–±–ª–∏–∫—É—é –ø–æ—Å—Ç –≤ Instagram...');
    
    try {
      // –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      const postId = `${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      
      return {
        success: true,
        postUrl: `https://www.instagram.com/p/${postId}/`
      };
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞:', error.message);
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
   */
  validatePostData(postData) {
    const required = ['caption', 'imageUrl', 'settings'];
    const missing = required.filter(field => !postData[field]);
    
    if (missing.length > 0) {
      throw new Error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: ${missing.join(', ')}`);
    }
    
    if (!postData.settings.username || !postData.settings.password) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Instagram');
    }
    
    return true;
  }

  /**
   * –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è
   */
  async testPublish(options = {}) {
    const testData = {
      caption: options.caption || 'üöÄ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –∏–∑ SMM Manager! #SMM #–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è #test',
      imageUrl: options.imageUrl || 'https://picsum.photos/1080/1080?random=1',
      settings: {
        username: options.username || 'it.zhdanov',
        password: options.password || 'QtpZ3dh70307'
      }
    };
    
    console.log('üß™ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç–æ–≤—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é...');
    
    try {
      this.validatePostData(testData);
      const result = await this.publishToInstagram(testData);
      
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', result);
      return result;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error.message);
      return {
        success: false,
        error: error.message,
        message: '–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏'
      };
    }
  }
}

export default InstagramDirectService;
export { InstagramDirectService };