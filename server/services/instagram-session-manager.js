/**
 * Instagram Session Manager
 * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ Instagram –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

import fs from 'fs';
import path from 'path';

class InstagramSessionManager {
  constructor() {
    this.sessionsDir = path.join(process.cwd(), 'temp');
    this.sessionsFile = path.join(this.sessionsDir, 'instagram-sessions.json');
    this.sessions = {};
    
    this.ensureSessionsDir();
    this.loadSessions();
    
    console.log('[Instagram Session Manager] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–µ—Å—Å–∏–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
   */
  ensureSessionsDir() {
    if (!fs.existsSync(this.sessionsDir)) {
      fs.mkdirSync(this.sessionsDir, { recursive: true });
      console.log('[Instagram Session Manager] –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–µ—Å—Å–∏–π:', this.sessionsDir);
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–µ—Å—Å–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
   */
  loadSessions() {
    try {
      if (fs.existsSync(this.sessionsFile)) {
        const data = fs.readFileSync(this.sessionsFile, 'utf8');
        this.sessions = JSON.parse(data);
        
        const sessionCount = Object.keys(this.sessions).length;
        console.log(`[Instagram Session Manager] –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${sessionCount} —Å–µ—Å—Å–∏–π –∏–∑ —Ñ–∞–π–ª–∞`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Å–µ—Å—Å–∏–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
        this.cleanupExpiredSessions();
      } else {
        console.log('[Instagram Session Manager] –§–∞–π–ª —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π');
      }
    } catch (error) {
      console.error('[Instagram Session Manager] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–π:', error.message);
      this.sessions = {};
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª
   */
  saveSessions() {
    try {
      const data = JSON.stringify(this.sessions, null, 2);
      fs.writeFileSync(this.sessionsFile, data, 'utf8');
      
      const sessionCount = Object.keys(this.sessions).length;
      console.log(`[Instagram Session Manager] –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${sessionCount} —Å–µ—Å—Å–∏–π –≤ —Ñ–∞–π–ª`);
    } catch (error) {
      console.error('[Instagram Session Manager] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–π:', error.message);
    }
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Å–µ—Å—Å–∏–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
   */
  cleanupExpiredSessions() {
    const sevenDaysAgo = Date.now() - (7 * 24 * 60 * 60 * 1000);
    let removedCount = 0;

    Object.keys(this.sessions).forEach(username => {
      const session = this.sessions[username];
      if (session.createdAt < sevenDaysAgo) {
        delete this.sessions[username];
        removedCount++;
      }
    });

    if (removedCount > 0) {
      console.log(`[Instagram Session Manager] –£–¥–∞–ª–µ–Ω–æ ${removedCount} —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Å–µ—Å—Å–∏–π`);
      this.saveSessions();
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  saveSession(username, sessionData) {
    try {
      const sessionRecord = {
        ...sessionData,
        username: username,
        createdAt: Date.now(),
        lastUsed: Date.now(),
        usageCount: 1
      };

      this.sessions[username] = sessionRecord;
      this.saveSessions();

      console.log(`[Instagram Session Manager] ‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–ª—è ${username}`);
      console.log(`[Instagram Session Manager] User ID: ${sessionRecord.userId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}`);
      console.log(`[Instagram Session Manager] Session ID: ${sessionRecord.sessionId}`);
      console.log(`[Instagram Session Manager] CSRF Token: ${sessionRecord.csrfToken ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
      console.log(`[Instagram Session Manager] Cookies: ${sessionRecord.cookies ? '–µ—Å—Ç—å' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`);

      return true;
    } catch (error) {
      console.error(`[Instagram Session Manager] ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è ${username}:`, error.message);
      return false;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  getSession(username) {
    const session = this.sessions[username];
    
    if (!session) {
      console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      return null;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    session.lastUsed = Date.now();
    session.usageCount = (session.usageCount || 0) + 1;
    this.saveSessions();

    console.log(`[Instagram Session Manager] ‚úÖ –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–∞–π–¥–µ–Ω–∞`);
    console.log(`[Instagram Session Manager] –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${new Date(session.lastUsed).toLocaleString()}`);
    console.log(`[Instagram Session Manager] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ${session.usageCount}`);

    return session;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
   */
  isSessionValid(username) {
    const session = this.sessions[username];
    
    if (!session) {
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç —Å–µ—Å—Å–∏–∏ (–Ω–µ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    const sevenDaysAgo = Date.now() - (7 * 24 * 60 * 60 * 1000);
    if (session.createdAt < sevenDaysAgo) {
      console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} —É—Å—Ç–∞—Ä–µ–ª–∞`);
      delete this.sessions[username];
      this.saveSessions();
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    if (!session.authenticated || !session.csrfToken) {
      console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ–ø–æ–ª–Ω–∞—è`);
      return false;
    }
    
    // –î–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ (manual_input) cookies –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
    if (session.source !== 'manual_input' && !session.cookies) {
      console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ–ø–æ–ª–Ω–∞—è (–Ω–µ—Ç cookies)`);
      return false;
    }

    return true;
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  removeSession(username) {
    if (this.sessions[username]) {
      delete this.sessions[username];
      this.saveSessions();
      console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} —É–¥–∞–ª–µ–Ω–∞`);
      return true;
    }
    
    console.log(`[Instagram Session Manager] –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è`);
    return false;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π
   */
  getAllSessions() {
    const sessionList = Object.keys(this.sessions).map(username => {
      const session = this.sessions[username];
      return {
        username: username,
        userId: session.userId,
        createdAt: new Date(session.createdAt).toLocaleString(),
        lastUsed: new Date(session.lastUsed).toLocaleString(),
        usageCount: session.usageCount || 0,
        isValid: this.isSessionValid(username)
      };
    });

    console.log(`[Instagram Session Manager] –°–ø–∏—Å–æ–∫ —Å–µ—Å—Å–∏–π (${sessionList.length}):`);
    sessionList.forEach(session => {
      console.log(`  - ${session.username}: ${session.isValid ? '‚úÖ –≤–∞–ª–∏–¥–Ω–∞' : '‚ùå –Ω–µ–≤–∞–ª–∏–¥–Ω–∞'}`);
    });

    return sessionList;
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤—Å–µ —Å–µ—Å—Å–∏–∏
   */
  clearAllSessions() {
    const count = Object.keys(this.sessions).length;
    this.sessions = {};
    this.saveSessions();
    
    console.log(`[Instagram Session Manager] –û—á–∏—â–µ–Ω–æ ${count} —Å–µ—Å—Å–∏–π`);
    return count;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏
   */
  hasValidSession(username) {
    console.log(`[Instagram Session Manager] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è ${username}`);
    
    const isValid = this.isSessionValid(username);
    console.log(`[Instagram Session Manager] –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è ${username}: ${isValid ? '‚úÖ –≤–∞–ª–∏–¥–Ω–∞' : '‚ùå –Ω–µ–≤–∞–ª–∏–¥–Ω–∞'}`);
    
    return isValid;
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–µ—Å—Å–∏—é –¥–ª—è Instagram –∫–ª–∏–µ–Ω—Ç–∞ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ API)
   */
  async loadSession(username, igClient) {
    console.log(`[Instagram Session Manager] üì• –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏ –¥–ª—è ${username}`);
    
    const session = this.getSession(username);
    if (!session) {
      console.log(`[Instagram Session Manager] ‚ùå –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
      return null;
    }

    if (!this.isSessionValid(username)) {
      console.log(`[Instagram Session Manager] ‚ùå –°–µ—Å—Å–∏—è –¥–ª—è ${username} –Ω–µ–≤–∞–ª–∏–¥–Ω–∞`);
      return null;
    }

    console.log(`[Instagram Session Manager] ‚úÖ –°–µ—Å—Å–∏—è –¥–ª—è ${username} –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –≤–∞–ª–∏–¥–Ω–∞`);
    return session;
  }
}

const instagramSessionManager = new InstagramSessionManager();
export { instagramSessionManager };