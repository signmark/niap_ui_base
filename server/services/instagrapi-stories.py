#!/usr/bin/env python3
"""
Instagram Stories –ø—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ instagrapi
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–∏–ø—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
"""

import json
import sys
import os
from pathlib import Path
from instagrapi import Client
from instagrapi.types import StoryMention, StoryLocation, StoryLink, StoryHashtag
from instagrapi.types import StoryPoll, StoryQuiz, StorySlider, StoryQuestion

def login_instagram(username, password):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Instagram"""
    cl = Client()
    try:
        cl.login(username, password)
        return cl
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return None

def convert_story_elements(elements, media_width=1080, media_height=1920):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –Ω–∞—à–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ instagrapi —Ñ–æ—Ä–º–∞—Ç"""
    insta_elements = []
    
    for element in elements:
        try:
            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (0-1 –¥–ª—è instagrapi)
            x = element['position']['x'] / 270  # –ù–∞—à canvas 270px
            y = element['position']['y'] / 480  # –ù–∞—à canvas 480px
            
            element_type = element['type']
            content = element.get('content', '')
            
            if element_type == 'poll':
                poll_data = json.loads(content)
                poll = StoryPoll(
                    question=poll_data['question'],
                    options=[poll_data['options'][0], poll_data['options'][1]],  # Instagram –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ 2
                    x=x,
                    y=y,
                    width=0.6,  # 60% —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
                    height=0.15  # 15% –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞
                )
                insta_elements.append(poll)
                
            elif element_type == 'quiz':
                quiz_data = json.loads(content)
                quiz = StoryQuiz(
                    question=quiz_data['question'],
                    options=quiz_data['options'][:4],  # –î–æ 4 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                    correct_option=quiz_data['correctAnswer'],
                    x=x,
                    y=y,
                    width=0.6,
                    height=0.2
                )
                insta_elements.append(quiz)
                
            elif element_type == 'slider':
                slider_data = json.loads(content)
                slider = StorySlider(
                    question=slider_data['question'],
                    emoji='üî•',  # –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
                    x=x,
                    y=y,
                    width=0.6,
                    height=0.1
                )
                insta_elements.append(slider)
                
            elif element_type == 'question':
                question_data = json.loads(content)
                question = StoryQuestion(
                    question=question_data.get('question', '–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å'),
                    x=x,
                    y=y,
                    width=0.6,
                    height=0.15
                )
                insta_elements.append(question)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ {element_type}: {e}")
            continue
    
    return insta_elements

def upload_story_with_elements(cl, media_path, story_elements):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç Stories —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º Stories —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        result = cl.photo_upload_to_story(
            media_path,
            links=[],  # –í–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏
            hashtags=[],  # –•–µ—à—Ç–µ–≥–∏
            locations=[],  # –õ–æ–∫–∞—Ü–∏–∏
            mentions=[],  # –£–ø–æ–º–∏–Ω–∞–Ω–∏—è
            polls=story_elements.get('polls', []),
            quizzes=story_elements.get('quizzes', []),
            sliders=story_elements.get('sliders', []),
            questions=story_elements.get('questions', [])
        )
        
        return {
            'success': True,
            'story_id': str(result.pk),
            'story_url': f"https://instagram.com/stories/{cl.username}/{result.pk}"
        }
        
    except Exception as e:
        return {
            'success': False,
            'error': str(e)
        }

def organize_elements_by_type(elements):
    """–ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —Ç–∏–ø–∞–º –¥–ª—è instagrapi"""
    organized = {
        'polls': [],
        'quizzes': [],
        'sliders': [],
        'questions': []
    }
    
    for element in elements:
        if isinstance(element, StoryPoll):
            organized['polls'].append(element)
        elif isinstance(element, StoryQuiz):
            organized['quizzes'].append(element)
        elif isinstance(element, StorySlider):
            organized['sliders'].append(element)
        elif isinstance(element, StoryQuestion):
            organized['questions'].append(element)
    
    return organized

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Stories"""
    try:
        # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ stdin
        input_data = json.loads(sys.stdin.read())
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        story_data = input_data.get('storyData', {})
        credentials = input_data.get('credentials', {})
        media_path = input_data.get('mediaPath', '')
        
        username = credentials.get('username')
        password = credentials.get('password')
        
        if not username or not password:
            print(json.dumps({
                'success': False,
                'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Instagram'
            }))
            return
            
        if not os.path.exists(media_path):
            print(json.dumps({
                'success': False,
                'error': f'–ú–µ–¥–∏–∞ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {media_path}'
            }))
            return
        
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Instagram
        cl = login_instagram(username, password)
        if not cl:
            print(json.dumps({
                'success': False,
                'error': '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Instagram'
            }))
            return
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ (Instagram Stories = –æ–¥–∏–Ω —Å–ª–∞–π–¥)
        slides = story_data.get('slides', [])
        if not slides:
            print(json.dumps({
                'success': False,
                'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–ª–∞–π–¥—ã –≤ Stories'
            }))
            return
            
        first_slide = slides[0]
        elements = first_slide.get('elements', [])
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        story_elements = convert_story_elements(elements)
        organized_elements = organize_elements_by_type(story_elements)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º Stories
        result = upload_story_with_elements(cl, media_path, organized_elements)
        
        print(json.dumps(result))
        
    except Exception as e:
        print(json.dumps({
            'success': False,
            'error': f'–û–±—â–∞—è –æ—à–∏–±–∫–∞: {str(e)}'
        }))

if __name__ == '__main__':
    main()