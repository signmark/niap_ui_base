import * as falClient from "@fal-ai/serverless-client";
import { log } from '../utils/logger';
import { apiKeyService } from './api-keys';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å fal.ai —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ SDK
 */
export class FalAiSdkService {
  private apiKey: string;
  private client: any | null = null;

  constructor(apiKey: string = '') {
    this.apiKey = apiKey;
    if (apiKey) {
      this.initializeWithKey(apiKey);
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç —Å API –∫–ª—é—á–æ–º
   */
  initializeWithKey(apiKey: string): void {
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (apiKey) {
      console.log(`DEBUG FAL.AI SDK: –ü–æ–ª—É—á–µ–Ω –∫–ª—é—á API –¥–ª–∏–Ω–æ–π ${apiKey.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`DEBUG FAL.AI SDK: –ö–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "Key ": ${apiKey.startsWith('Key ')}`);
      console.log(`DEBUG FAL.AI SDK: –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: "${apiKey.substring(0, 10)}..."`);
      
      if (apiKey.startsWith('Key ')) {
        console.log(`[FAL.AI] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∫–ª—é—á–æ–º, –∏–º–µ—é—â–∏–º –ø—Ä–µ—Ñ–∏–∫—Å "Key" - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç`);
      } else {
        console.log(`[FAL.AI] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –∫–ª—é—á–æ–º –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ "Key"`);
      }
      
      if (!apiKey.includes(':')) {
        console.log(`[FAL.AI] –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –∫–ª—é—á –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª ":", –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å`);
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –ë–ï–ó –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
    this.apiKey = apiKey;
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç falClient –Ω–∞–ø—Ä—è–º—É—é
      this.client = falClient;
      log('FalAiSdkService: –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ', 'fal-ai');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ fal.ai –∫–ª–∏–µ–Ω—Ç–∞:', err);
      log(`FalAiSdkService: –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${err}`, 'fal-ai');
    }
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å —Å API –∫–ª—é—á–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ API –∫–ª—é—á–µ–π
   * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param authToken –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Directus (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns true –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, false –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
   */
  async initializeFromApiKeyService(userId: string, authToken?: string): Promise<boolean> {
    return this.initialize(userId, authToken);
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å —Å API –∫–ª—é—á–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ API –∫–ª—é—á–µ–π
   * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param authToken –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Directus (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns true –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, false –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
   */
  async initialize(userId: string, authToken?: string): Promise<boolean> {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å API –∫–ª—é—á–µ–π
      const apiKey = await apiKeyService.getApiKey(userId, 'fal_ai', authToken);
      
      if (apiKey) {
        this.initializeWithKey(apiKey);
        log('FAL.AI SDK: API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ API Key Service', 'fal-ai');
        console.log('FAL.AI SDK: API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ API Key Service');
        return true;
      } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ –∫–ª—é—á –≤ —Å–µ—Ä–≤–∏—Å–µ
        if (this.apiKey && this.apiKey.length > 0) {
          console.log('FAL.AI SDK: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π API –∫–ª—é—á');
          return true;
        }
        
        log('FAL.AI SDK: API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω', 'fal-ai');
        console.log('FAL.AI SDK: API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return false;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ FAL.AI SDK —Å–µ—Ä–≤–∏—Å–∞:', error);
      
      // –ï—Å–ª–∏ —É –Ω–∞—Å –≤—Å–µ —Ä–∞–≤–Ω–æ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π –∫–ª—é—á - –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
      if (this.apiKey && this.apiKey.length > 0) {
        console.log('FAL.AI SDK: –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π API –∫–ª—é—á');
        return true;
      }
      
      return false;
    }
  }

  /**
   * –û–±–Ω–æ–≤–∏—Ç—å API –∫–ª—é—á
   */
  updateApiKey(newApiKey: string): void {
    this.apiKey = newApiKey;
    this.initializeWithKey(newApiKey);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å API
   */
  async checkApiStatus(): Promise<{ success: boolean; message: string }> {
    if (!this.apiKey || !this.client) {
      return { success: false, message: '–ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á.' };
    }

    try {
      // –ü—Ä–æ–±—É–µ–º –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π HTTP –∑–∞–ø—Ä–æ—Å
      const axios = require('axios');
      // –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ç–æ—á–Ω–æ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –æ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ Directus
      // –¢–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (this.apiKey.startsWith('Key ')) {
        console.log(`[FAL.AI] API –∫–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å "Key" - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`); 
      } else {
        console.log(`[FAL.AI] API –∫–ª—é—á –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ "Key" - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å`);
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –∫–∞–∫ –µ—Å—Ç—å, –±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
      const authHeader = this.apiKey;
        
      const result = await axios({
        url: 'https://queue.fal.run/fal-ai/stable-diffusion-v35-medium',
        method: 'POST',
        headers: {
          'Authorization': authHeader,
          'Content-Type': 'application/json'
        },
        data: {
          prompt: 'test image',
          num_inference_steps: 1,
        }
      });

      return { success: true, message: 'API –¥–æ—Å—Ç—É–ø–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç' };
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API:', error);
      return { 
        success: false, 
        message: `–û—à–∏–±–∫–∞ API: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
      };
    }
  }

  /**
   * –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   * @param modelId ID –º–æ–¥–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'flux/schnell', 'fal-ai/fast-sdxl', 'fal-ai/fooocus')
   * @param input –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
   */
  async generateImage(modelId: string, input: any): Promise<any> {
    if (!this.apiKey || !this.client) {
      throw new Error('–ö–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ù–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á.');
    }

    console.log(`FalAiSdkService: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –º–æ–¥–µ–ª—å—é ${modelId}`);
    console.log('–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(input).substring(0, 200));

    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
      // –í—Å–µ –º–æ–¥–µ–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤–æ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –¥–ª—è Schnell
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π modelId
      let sanitizedModelId;
      if (modelId.includes('fal-ai/')) {
        sanitizedModelId = modelId;
      } else {
        sanitizedModelId = `fal-ai/${modelId}`;
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –≤ —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –æ–Ω —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ Directus
      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–∑–æ–≤–∞ FAL.AI
      console.log(`DEBUG FAL.AI GENERATE IMAGE: –¢–µ–∫—É—â–∏–π API –∫–ª—é—á –¥–ª–∏–Ω–æ–π ${this.apiKey.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`DEBUG FAL.AI GENERATE IMAGE: –ö–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "Key ": ${this.apiKey.startsWith('Key ')}`);
      console.log(`DEBUG FAL.AI GENERATE IMAGE: –ü–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤: "${this.apiKey.substring(0, 10)}..."`);
      
      // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–ª—é—á–∞
      if (this.apiKey.startsWith('Key ')) {
        console.log(`[FAL.AI] API –∫–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å "Key" - –¥–ª—è generateImage`); 
      } else {
        console.log(`[FAL.AI] API –∫–ª—é—á –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞ "Key" - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è generateImage`);
      }
      
      // –í–ê–ñ–ù–û: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "Key" –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      let authHeader = this.apiKey;
      if (!authHeader.startsWith('Key ') && authHeader.includes(':')) {
        console.log(`üîë –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–†–ú–ê–¢–ê –ö–õ–Æ–ß–ê: –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å 'Key '`);
        authHeader = `Key ${authHeader}`;
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        this.apiKey = authHeader;
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ)
      console.log(`üî¥ –ü–û–õ–ù–´–ô –ó–ê–ì–û–õ–û–í–û–ö AUTHORIZATION: "${authHeader}"`);
      console.log(`üî¥ –î–õ–ò–ù–ê: ${authHeader.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`üî¥ –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø –° 'Key ': ${authHeader.startsWith('Key ') ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`üî¥ –°–û–î–ï–†–ñ–ò–¢ ':': ${authHeader.includes(':') ? '–î–ê' : '–ù–ï–¢'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å API
      
      // –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º numImages –≤ num_images –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –æ–¥–∏–Ω–∞–∫–æ–≤–æ
      if (input.numImages && !input.num_images) {
        console.log('üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ numImages –≤ num_images –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å API');
        input.num_images = input.numImages;
        // –£–¥–∞–ª—è–µ–º numImages —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—É—Ç–∞–Ω–∏—Ü—ã
        delete input.numImages;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ num_images - —ç—Ç–æ —á–∏—Å–ª–æ
      if (input.num_images && typeof input.num_images === 'string') {
        input.num_images = parseInt(input.num_images, 10);
      }
      
      // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —É –Ω–∞—Å –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å num_images –∏ –æ–Ω–æ –Ω–µ –º–µ–Ω—å—à–µ 1
      if (!input.num_images || input.num_images < 1) {
        input.num_images = 1;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —à–∏—Ä–∏–Ω—ã –∏ –≤—ã—Å–æ—Ç—ã
      if (input.width && typeof input.width === 'string') {
        input.width = parseInt(input.width, 10);
      }
      
      if (input.height && typeof input.height === 'string') {
        input.height = parseInt(input.height, 10);
      }
      
      // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—ã—Å–æ—Ç–∞ –∏ —à–∏—Ä–∏–Ω–∞ –∏–º–µ—é—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      if (!input.width || input.width < 512) {
        console.log('‚ö†Ô∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —à–∏—Ä–∏–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 512');
        input.width = 512;
      }
      
      if (!input.height || input.height < 512) {
        console.log('‚ö†Ô∏è –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤—ã—Å–æ—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 512');
        input.height = 512;
      }
      
      console.log(`üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞: ${input.num_images || 1} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —Ä–∞–∑–º–µ—Ä ${input.width}x${input.height}`);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–æ–¥–µ–ª–∏ - —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
      let apiUrl;
      if (sanitizedModelId.includes('/')) {
        // –î–ª—è –º–æ–¥–µ–ª–µ–π –≤–∏–¥–∞ 'fal-ai/fast-sdxl' –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å –ø—É—Ç—è–º–∏
        apiUrl = `https://queue.fal.run/${sanitizedModelId}`;
      } else {
        // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å fal-ai
        apiUrl = `https://queue.fal.run/fal-ai/${sanitizedModelId}`;
      }
      
      // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
      console.log(`üåê URL –∑–∞–ø—Ä–æ—Å–∞: ${apiUrl}`);
      console.log(`üì¶ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞: ${JSON.stringify({
        ...input,
        num_images: input.num_images || 1,
        model: sanitizedModelId
      }).substring(0, 200)}...`);
        
      const requestConfig = {
        url: apiUrl,
        method: 'POST',
        headers: {
          'Authorization': authHeader,
          'Content-Type': 'application/json'
        },
        data: input
      };

      // –í—Ä—É—á–Ω—É—é –∏—Å–ø–æ–ª—å–∑—É–µ–º axios –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
      const axios = require('axios');
      const response = await axios(requestConfig);
      
      console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', JSON.stringify(response.data).substring(0, 200));
      
      return response.data;
    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      if (error.response) {
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          status: error.response.status,
          data: error.response.data
        });
      }
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ –∫–ª—é—á–∞, –æ–Ω –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ apiKeyService
export const falAiSdk = new FalAiSdkService();