import axios from 'axios';
import FormData from 'form-data';
import fs from 'fs';

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
export class ImgurAlternativeService {
  private readonly imgurClientId = 'f4c080ac9d02e7c'; // –ü—É–±–ª–∏—á–Ω—ã–π Imgur client ID
  
  async uploadImage(filePath: string): Promise<string | null> {
    try {
      console.log(`üîß [ImgurAlternative] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${filePath}`);
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ imgbb (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π)
      try {
        const imgbbResult = await this.uploadToImgBB(filePath);
        if (imgbbResult) {
          console.log(`‚úÖ [ImgurAlternative] –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —á–µ—Ä–µ–∑ ImgBB: ${imgbbResult}`);
          return imgbbResult;
        }
      } catch (imgbbError) {
        console.log(`‚ö†Ô∏è [ImgurAlternative] ImgBB –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${imgbbError}`);
      }
      
      // –ï—Å–ª–∏ imgbb –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π Imgur
      try {
        const imgurResult = await this.uploadToImgur(filePath);
        if (imgurResult) {
          console.log(`‚úÖ [ImgurAlternative] –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —á–µ—Ä–µ–∑ Imgur: ${imgurResult}`);
          return imgurResult;
        }
      } catch (imgurError) {
        console.log(`‚ö†Ô∏è [ImgurAlternative] Imgur –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${imgurError}`);
      }
      
      // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π URL
      console.log(`‚ö†Ô∏è [ImgurAlternative] –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å`);
      return this.createLocalUrl(filePath);
      
    } catch (error) {
      console.error(`‚ùå [ImgurAlternative] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
      return null;
    }
  }
  
  private async uploadToImgBB(filePath: string): Promise<string | null> {
    const formData = new FormData();
    formData.append('key', '24b7a2b8c7d4563497ca48e07d0c76ba');
    formData.append('image', fs.createReadStream(filePath));
    
    const response = await axios.post('https://api.imgbb.com/1/upload', formData, {
      headers: formData.getHeaders(),
      timeout: 10000
    });
    
    return response.data?.success ? response.data.data.url : null;
  }
  
  private async uploadToImgur(filePath: string): Promise<string | null> {
    const formData = new FormData();
    formData.append('image', fs.createReadStream(filePath));
    
    const response = await axios.post('https://api.imgur.com/3/image', formData, {
      headers: {
        ...formData.getHeaders(),
        'Authorization': `Client-ID ${this.imgurClientId}`
      },
      timeout: 10000
    });
    
    return response.data?.success ? response.data.data.link : null;
  }
  
  private createLocalUrl(filePath: string): string {
    // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É
    const fileName = filePath.split('/').pop();
    return `http://localhost:5000/uploads/images/${fileName}`;
  }
}

export const imgurAlternativeService = new ImgurAlternativeService();