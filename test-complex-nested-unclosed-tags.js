/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤ –≤ Telegram
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-complex-nested-unclosed-tags.js
 */
import axios from 'axios';
import fs from 'fs';
import { fileURLToPath } from 'url';
import { dirname } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const API_URL = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
const USER_ID = '53921f16-f51d-4591-80b9-8caa4fde4d13';

// –°–ª–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏
const TEST_CASES = [
  {
    name: '–í–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ —Å –æ–¥–Ω–∏–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º',
    content: `<b><i><u>–¢—Ä–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–∞</b>`,
    expected: {
      success: true,
      // –û–∂–∏–¥–∞–µ–º—ã–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π HTML: "<b><i><u>–¢—Ä–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–∞</u></i></b>"
    }
  },
  {
    name: '–ó–∞–∫—Ä—ã—Ç–∏–µ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤ –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ',
    content: `<b><i><u>–¢–µ–≥–∏ –∑–∞–∫—Ä—ã—Ç—ã –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</b></u></i>`,
    expected: {
      success: true,
      // –î–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ–≥–æ–≤
    }
  },
  {
    name: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏',
    content: `<b>–í–Ω–µ—à–Ω–∏–π —Ç–µ–≥ <i>–°—Ä–µ–¥–Ω–∏–π —Ç–µ–≥ <s>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π –∑–∞–∫—Ä—ã—Ç—ã–π</s> –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ <u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–π`,
    expected: {
      success: true,
      // –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: –≤—Å–µ —Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã
    }
  },
  {
    name: '–ö–æ–º–±–∏–Ω–∞—Ü–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤ —Å —Å—Å—ã–ª–∫–∞–º–∏',
    content: `<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç —Å <a href="https://example.com">—Å—Å—ã–ª–∫–æ–π –±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è <i>–∏ –∫—É—Ä—Å–∏–≤–æ–º`,
    expected: {
      success: true,
      // –í—Å–µ —Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã
    }
  },
  {
    name: '–ü–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏ –∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏',
    content: `<b>–ü–µ—Ä–≤—ã–π <i>–í—Ç–æ—Ä–æ–π <u>–¢—Ä–µ—Ç–∏–π</b> –û—Å—Ç–∞–ª—Å—è –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π</i> –û—Å—Ç–∞–ª—Å—è —Ç—Ä–µ—Ç–∏–π</u>`,
    expected: {
      success: true,
      // –°–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π —Å –ø–µ—Ä–µ–ø–ª–µ—Ç–µ–Ω–∏–µ–º —Ç–µ–≥–æ–≤
    }
  },
  {
    name: '–õ–∏—à–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏ –±–µ–∑ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö',
    content: `–¢–µ–∫—Å—Ç —Å –ª–∏—à–Ω–∏–º–∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Ç–µ–≥–∞–º–∏ </b></i></u> –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞`,
    expected: {
      success: true,
      // –õ–∏—à–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã
    }
  },
  {
    name: '–í–ª–æ–∂–µ–Ω–Ω—ã–µ –±–ª–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏',
    content: `<div><p><b>–ó–∞–≥–æ–ª–æ–≤–æ–∫</b></p>
<p>–ü–∞—Ä–∞–≥—Ä–∞—Ñ —Å <i>–∫—É—Ä—Å–∏–≤–æ–º</p>
<p>–ï—â–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º</div>`,
    expected: {
      success: true,
      // –ë–ª–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã, –∞ —Ç–µ–≥–∏ –∑–∞–∫—Ä—ã—Ç—ã
    }
  },
  {
    name: '–°–ª–æ–∂–Ω—ã–µ –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Ç–µ–≥–æ–≤',
    content: `<h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫ <b>—Å –≤–∞–∂–Ω–æ–π <i>–∏ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π <s>–Ω–æ –Ω–µ–Ω—É–∂–Ω–æ–π</s></i> –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</h1>
<p>–ê —Ç—É—Ç <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π <b>–∏ –∂–∏—Ä–Ω—ã–π <a href="https://test.com">—Å–æ —Å—Å—ã–ª–∫–æ–π</p>
<div>–ò –µ—â–µ –±–ª–æ–∫ <i>—Å –∫—É—Ä—Å–∏–≤–æ–º <u>–∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º`,
    expected: {
      success: true,
      // –û—á–µ–Ω—å —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
    }
  },
  {
    name: '–ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ —Å —Ä–∞–∑—Ä—ã–≤–∞–º–∏ —Å—Ç—Ä–æ–∫ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏',
    content: `<p><b style="color:red">–¢–µ–∫—Å—Ç —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏</b>
<i class="special">–¢–µ–≥ —Å –∫–ª–∞—Å—Å–æ–º
<u id="unique">–¢–µ–≥ —Å ID
<a href="https://example.com" target="_blank">–°—Å—ã–ª–∫–∞ —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏`,
    expected: {
      success: true,
      // –¢–µ–≥–∏ —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
    }
  }
];

/**
 * –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å —Å –æ—Ç–º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
 * @param {string} message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞
 */
function log(message) {
  const timestamp = new Date().toISOString().substring(11, 19);
  console.log(`[${timestamp}] ${message}`);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ API
 * @param {object} testCase –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */
async function publishContent(testCase) {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const publishRequest = {
      content: {
        id: `test-complex-${Date.now()}-${Math.floor(Math.random() * 1000)}`,
        title: `–¢–µ—Å—Ç —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–≥–æ–≤: ${testCase.name}`,
        content: testCase.content,
        contentType: 'html',
        status: 'ready',
        userId: USER_ID,
        campaignId: CAMPAIGN_ID,
        socialPlatforms: ['telegram'],
        createdAt: new Date(),
        hashtags: [],
        links: []
      },
      userId: USER_ID,
      force: true,
      platforms: ['telegram']
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ª–æ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: "${testCase.name}"`);
    const response = await axios.post(`${API_URL}/publish/content`, publishRequest, {
      headers: { 'Content-Type': 'application/json' },
      timeout: 60000 // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    });

    if (response.status === 200 && response.data) {
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
      const telegramPublication = response.data.publications?.find(p => p.platform === 'telegram');
      
      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      if (telegramPublication) {
        log(`‚úÖ –¢–µ—Å—Ç "${testCase.name}" —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Telegram`);
        if (telegramPublication.url) {
          log(`üîó URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${telegramPublication.url}`);
        }
        return {
          success: true,
          result: response.data,
          publication: telegramPublication
        };
      } else {
        log(`‚ùå –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç–µ API`);
        return {
          success: false,
          result: response.data,
          error: 'Telegram publication not found in API response'
        };
      }
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${response.status} ${response.statusText}`);
      return {
        success: false,
        result: response.data,
        error: `HTTP ${response.status}: ${response.statusText}`
      };
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`);
    if (error.response) {
      log(`–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data || {})}`);
    }
    return {
      success: false,
      error: error.message,
      details: error.response?.data || {}
    };
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
 */
async function runTests() {
  log('üìä –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏');
  log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${TEST_CASES.length}`);
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
  const results = [];
  let succeeded = 0;
  let failed = 0;

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
  for (let i = 0; i < TEST_CASES.length; i++) {
    const testCase = TEST_CASES[i];
    log(`\nüîÑ [${i + 1}/${TEST_CASES.length}] –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞: "${testCase.name}"`);
    
    try {
      // –í—ã–≤–æ–¥–∏–º —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–π HTML
      log(`üìù –ò—Å—Ö–æ–¥–Ω—ã–π HTML:\n${testCase.content}`);
      
      // –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      const result = await publishContent(testCase);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞
      const isSuccess = result.success && 
                        result.publication?.status === 'published';
      
      if (isSuccess) {
        succeeded++;
        log(`‚úÖ –¢–µ—Å—Ç "${testCase.name}" –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ`);
      } else {
        failed++;
        log(`‚ùå –¢–µ—Å—Ç "${testCase.name}" –Ω–µ –ø—Ä–æ–π–¥–µ–Ω`);
        log(`–ü—Ä–∏—á–∏–Ω–∞: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      results.push({
        name: testCase.name,
        success: isSuccess,
        content: testCase.content,
        result: result
      });
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏ (10 —Å–µ–∫—É–Ω–¥)
      if (i < TEST_CASES.length - 1) {
        log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...');
        await new Promise(resolve => setTimeout(resolve, 10000));
      }
    } catch (error) {
      failed++;
      log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞ "${testCase.name}": ${error.message}`);
      results.push({
        name: testCase.name,
        success: false,
        content: testCase.content,
        error: error.message
      });
    }
  }

  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  log('\nüìã === –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===');
  log(`–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${TEST_CASES.length}`);
  log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${succeeded}`);
  log(`‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: ${failed}`);
  log('=====================');

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª
  const report = {
    timestamp: new Date().toISOString(),
    totalTests: TEST_CASES.length,
    succeeded,
    failed,
    results
  };
  
  fs.writeFileSync('complex-tags-test-report.json', JSON.stringify(report, null, 2));
  log('üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ complex-tags-test-report.json');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests().catch(error => {
  log(`üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
  process.exit(1);
});