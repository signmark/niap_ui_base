/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç YouTube token refresh —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ credentials
 * –û–±—Ö–æ–¥–∏–º N8N –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é —Å Google OAuth API
 */

const YOUTUBE_CLIENT_ID = '267968960436-f1fcdat2q3hrn029ine955v5d3t71b2k.apps.googleusercontent.com';
const YOUTUBE_CLIENT_SECRET = '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';

// –¢–µ—Å—Ç–æ–≤—ã–π refresh_token (–Ω—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞)
const TEST_REFRESH_TOKEN = 'your_real_refresh_token_here';

async function testYouTubeTokenRefreshDirect() {
  console.log('=== –ü–†–Ø–ú–û–ô –¢–ï–°–¢ YOUTUBE TOKEN REFRESH ===\n');

  try {
    console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ credentials:');
    console.log(`   Client ID: ${YOUTUBE_CLIENT_ID}`);
    console.log(`   Client Secret: ${YOUTUBE_CLIENT_SECRET}`);
    console.log(`   Refresh Token: ${TEST_REFRESH_TOKEN}`);

    console.log('\nüß™ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Google OAuth API...');
    
    const response = await fetch('https://oauth2.googleapis.com/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams({
        client_id: YOUTUBE_CLIENT_ID,
        client_secret: YOUTUBE_CLIENT_SECRET,
        refresh_token: TEST_REFRESH_TOKEN,
        grant_type: 'refresh_token'
      })
    });

    const result = await response.json();
    
    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log('üìÑ –û—Ç–≤–µ—Ç Google OAuth API:');
    console.log(JSON.stringify(result, null, 2));

    if (response.ok && result.access_token) {
      console.log('\n‚úÖ –£–°–ü–ï–•: –ù–æ–≤—ã–π access_token –ø–æ–ª—É—á–µ–Ω!');
      console.log(`üîë Access Token: ${result.access_token.substring(0, 50)}...`);
      console.log(`‚è∞ Expires in: ${result.expires_in} —Å–µ–∫—É–Ω–¥`);
    } else if (result.error === 'invalid_client') {
      console.log('\n‚ùå –û–®–ò–ë–ö–ê: invalid_client - credentials –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ');
    } else if (result.error === 'invalid_grant') {
      console.log('\n‚ö†Ô∏è –û–®–ò–ë–ö–ê: invalid_grant - refresh_token –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫');
      console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–µ–Ω –Ω–æ–≤—ã–π refresh_token —á–µ—Ä–µ–∑ OAuth flow');
    } else {
      console.log('\n‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç Google OAuth API');
    }

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å credentials validation
async function validateCredentialsOnly() {
  console.log('\n=== –í–ê–õ–ò–î–ê–¶–ò–Ø CREDENTIALS (–ë–ï–ó REFRESH_TOKEN) ===\n');

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∑–∞–≤–µ–¥–æ–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º refresh_token –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ credentials
    const response = await fetch('https://oauth2.googleapis.com/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams({
        client_id: YOUTUBE_CLIENT_ID,
        client_secret: YOUTUBE_CLIENT_SECRET,
        refresh_token: 'invalid_test_token',
        grant_type: 'refresh_token'
      })
    });

    const result = await response.json();
    
    if (result.error === 'invalid_client') {
      console.log('‚ùå CREDENTIALS –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ï (invalid_client)');
      return false;
    } else if (result.error === 'invalid_grant') {
      console.log('‚úÖ CREDENTIALS –ü–†–ê–í–ò–õ–¨–ù–´–ï (invalid_grant –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ refresh_token)');
      return true;
    } else {
      console.log('‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:', result);
      return false;
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ YouTube credentials...\n');
validateCredentialsOnly().then(isValid => {
  if (isValid) {
    console.log('\nüéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: YouTube credentials –†–ê–ë–û–¢–ê–Æ–¢ –ü–†–ê–í–ò–õ–¨–ù–û');
    console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞ invalid_client –≤ N8N —Å–≤—è–∑–∞–Ω–∞ —Å:');
    console.log('   1. N8N –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥—Ä—É–≥—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–¥–∞–∫—à–µ–Ω)');
    console.log('   2. N8N –∫—ç—à–∏—Ä—É–µ—Ç —Å—Ç–∞—Ä—ã–µ credentials');
    console.log('   3. N8N workflow –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∞–Ω–Ω—ã—Ö');
  } else {
    console.log('\n‚ùå –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ –≤ credentials');
  }
});

// –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ:
// testYouTubeTokenRefreshDirect();