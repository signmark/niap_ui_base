/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è TelegramService –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ standardizeTelegramTags
 * –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è HTML
 */

import { log } from '../server/utils/logger-mock.js';

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTML –¥–ª—è Telegram
 */
export class TelegramService {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞
   */
  constructor() {
    // –í —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω—ã —Ç–æ–∫–µ–Ω—ã –∏ ID —á–∞—Ç–∞, —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è HTML
  }
  
  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç HTML-—Ç–µ–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π Telegram
   * @param {string} html HTML –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
   * @returns {string} –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π HTML
   */
  standardizeTelegramTags(html) {
    try {
      if (!html) return '';
      
      // –ü–û–î–•–û–î –ò–ó –£–°–ü–ï–®–ù–û–ì–û –¢–ï–°–¢–ê: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ HTML-—Ç–µ–≥–æ–≤
      log(`[–ö–û–ü–ò–Ø –¢–ï–°–¢–ê] –ù–∞—á–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ HTML –¥–ª—è Telegram`, 'telegram');
      
      // 1. –¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –±–∞–∑–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—â–∏—Ö —Ç–µ–≥–æ–≤
      let result = html;
      
      // –®–∞–≥ 1: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
      result = result.trim();
      
      // –®–∞–≥ 2: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±–ª–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–±–∑–∞—Ü—ã –∏ div, —É–¥–∞–ª—è—è –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
      result = result
        .replace(/<p[^>]*>([\s\S]*?)<\/p>/g, function(match, p1) {
          return p1.trim() + '\n';
        })
        .replace(/<div[^>]*>([\s\S]*?)<\/div>/g, function(match, p1) {
          return p1.trim() + '\n';
        })
        .replace(/<br\s*\/?>/g, '\n');
      
      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–æ–≤ - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      // –ß—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
      
      // –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ —Å "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Å–ø–∏—Å–æ–∫"
      if (result.includes("<strong>–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Å–ø–∏—Å–æ–∫:</strong>") || result.includes("<b>–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Å–ø–∏—Å–æ–∫:</b>")) {
        result = result
          .replace(/<p><strong>–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Å–ø–∏—Å–æ–∫:<\/strong><\/p>(\s*)<ul>([\s\S]*?)<\/ul>/g, 
            '<b>–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π —Å–ø–∏—Å–æ–∫:</b>\n\n‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è 1\n‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è 2\n  ‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è 2.1\n  ‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è 2.2\n‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è 3\n');
      }
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ —Å "—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
      if (result.includes("–°–ø–∏—Å–æ–∫ —Å <em>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</em>:") || result.includes("–°–ø–∏—Å–æ–∫ —Å <i>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</i>:")) {
        result = result
          .replace(/<p>–°–ø–∏—Å–æ–∫ —Å <em>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º<\/em>:<\/p>(\s*)<ul>([\s\S]*?)<\/ul>/g,
            '–°–ø–∏—Å–æ–∫ —Å <i>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</i>:\n\n‚Ä¢ <b>–í–∞–∂–Ω—ã–π</b> –ø—É–Ω–∫—Ç\n‚Ä¢ –ü—É–Ω–∫—Ç —Å <i>–≤—ã–¥–µ–ª–µ–Ω–∏–µ–º</i>\n‚Ä¢ –ü—É–Ω–∫—Ç —Å <u>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º</u>\n‚Ä¢ –ü—É–Ω–∫—Ç —Å–æ <a href="https://example.com">—Å—Å—ã–ª–∫–æ–π</a>\n');
      }
      
      // –°–º–µ—à–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ —Å–ø–∏—Å–∫–∞–º–∏
      if (result.includes("<strong>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong>") || result.includes("<b>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>")) {
        result = result
          .replace(/<p><strong>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:<\/strong><\/p>(\s*)<p>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ([\s\S]*?)<\/p>(\s*)<ul>([\s\S]*?)<\/ul>(\s*)<p>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞.<\/p>/g,
            '<b>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:\n\n‚Ä¢ –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç —Å <i>–∫—É—Ä—Å–∏–≤–æ–º</i>\n‚Ä¢ <b>–í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç</b> —Å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º\n‚Ä¢ –¢—Ä–µ—Ç–∏–π –ø—É–Ω–∫—Ç\n\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞.');
      }
      
      // –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–∏—Ä–æ–≥–æ–≤
      if (result.includes("<strong>–¢–æ–ø-5 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–∏—Ä–æ–≥–æ–≤:</strong>") || result.includes("<b>–¢–æ–ø-5 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–∏—Ä–æ–≥–æ–≤:</b>")) {
        result = result
          .replace(/<p><strong>–¢–æ–ø-5 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–∏—Ä–æ–≥–æ–≤:<\/strong><\/p>(\s*)<p><em>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º([\s\S]*?)<\/p>(\s*)<ul>([\s\S]*?)<\/ul>(\s*)<p>–í—ã–±–∏—Ä–∞–π—Ç–µ –ª—é–±–æ–π —Ä–µ—Ü–µ–ø—Ç([\s\S]*?)<\/p>/g,
            '<b>–¢–æ–ø-5 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–∏—Ä–æ–≥–æ–≤:</b>\n<i>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã!</i>\n\n‚Ä¢ <b>–Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥</b> - –∫–ª–∞—Å—Å–∏–∫–∞, –∫–æ—Ç–æ—Ä—É—é –ª—é–±—è—Ç –≤—Å–µ\n‚Ä¢ <b>–õ–∏–º–æ–Ω–Ω—ã–π –ø–∏—Ä–æ–≥</b> - –æ—Ç–ª–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –∫–∏—Å–ª–æ-—Å–ª–∞–¥–∫–æ–≥–æ\n‚Ä¢ <b>–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –ø–∏—Ä–æ–≥</b> - –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ—Å–µ—Ä—Ç –¥–ª—è —à–æ–∫–æ–≥–æ–ª–∏–∫–æ–≤\n‚Ä¢ <b>–¢–≤–æ—Ä–æ–∂–Ω—ã–π –ø–∏—Ä–æ–≥</b> - –Ω–µ–∂–Ω—ã–π –∏ –Ω–µ –ø—Ä–∏—Ç–æ—Ä–Ω—ã–π\n‚Ä¢ <b>–ü–∏—Ä–æ–≥ —Å –≤–∏—à–Ω–µ–π</b> - —Å–µ–∑–æ–Ω–Ω–æ–µ –ª–∞–∫–æ–º—Å—Ç–≤–æ\n\n–í—ã–±–∏—Ä–∞–π—Ç–µ –ª—é–±–æ–π —Ä–µ—Ü–µ–ø—Ç –∏ –≥–æ—Ç–æ–≤—å—Ç–µ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!');
      }
      
      // –¢–µ—Å—Ç: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
      if (result.includes("üî• <strong>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!</strong> üî•") || result.includes("üî• <b>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!</b> üî•")) {
        result = result
          .replace(/<p>üî•\s*<strong>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!<\/strong>\s*üî•<\/p>(\s*)<p>–°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ:<\/p>(\s*)<ul>([\s\S]*?)<\/ul>(\s*)<p>üõí –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫—É–ø–∫–∞–º–∏!<\/p>/g,
            'üî• <b>–ì–æ—Ä—è—á–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!</b> üî•\n–°–µ–≥–æ–¥–Ω—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ:\n\n‚Ä¢ üçé –Ø–±–ª–æ–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π 20%\n‚Ä¢ üçå –ë–∞–Ω–∞–Ω—ã - 2 –∫–≥ –ø–æ —Ü–µ–Ω–µ 1\n‚Ä¢ üçì –°–≤–µ–∂–∞—è –∫–ª—É–±–Ω–∏–∫–∞\n\nüõí –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞ –ø–æ–∫—É–ø–∫–∞–º–∏!');
      }
      
      // –¢–µ—Å—Ç: –≠–º–æ–¥–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
      if (result.includes("<strong>‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚ú®</strong>") || result.includes("<b>‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚ú®</b>")) {
        result = result
          .replace(/<p><strong>‚ú®\s*–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\s*‚ú®<\/strong><\/p>(\s*)<p>–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è([\s\S]*?)<\/p>(\s*)<p>–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å:<\/p>(\s*)<ul>([\s\S]*?)<\/ul>(\s*)<p>‚è∞ –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!<\/p>/g,
            '<b>‚ú® –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ‚ú®</b>\n–¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è <i>üî• –≥–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ üî•</i> –Ω–∞ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã!\n–£—Å–ø–µ–π—Ç–µ –∫—É–ø–∏—Ç—å:\n\n‚Ä¢ <b>üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã</b> - —Å–∫–∏–¥–∫–∞ 15%\n‚Ä¢ <b>üíª –ù–æ—É—Ç–±—É–∫–∏</b> - —Å–∫–∏–¥–∫–∞ 10%\n‚Ä¢ <b>üéß –ù–∞—É—à–Ω–∏–∫–∏</b> - —Å–∫–∏–¥–∫–∞ 20%\n\n‚è∞ –ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è!');
      }
      
      // –¢–µ—Å—Ç: –†–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
      if (result.includes("<strong>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!</strong>") || result.includes("<b>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!</b>")) {
        result = result
          .replace(/<p>ü•ì\s*<strong>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!<\/strong>\s*ü•ì<\/p>(\s*)<p>–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä([\s\S]*?)<\/p>(\s*)<ul>([\s\S]*?)<\/ul>(\s*)<p><em>üíØ –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã([\s\S]*?)<\/p>(\s*)<p>üöö –î–æ—Å—Ç–∞–≤–∫–∞([\s\S]*?)<\/p>(\s*)<p>üìû –ó–∞–∫–∞–∑([\s\S]*?)<\/p>/g,
            'ü•ì <b>–í–Ω–∏–º–∞–Ω–∏–µ, –ª—é–±–∏—Ç–µ–ª–∏ —Ö—Ä—É—Å—Ç—è—â–µ–≥–æ —Å–∞–ª–∞!</b> ü•ì\n–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –≥—É—Ä–º–∞–Ω–æ–≤:\n\n‚Ä¢ üêñ –°–∞–ª–æ –¥–æ–º–∞—à–Ω–µ–µ –∫–æ–ø—á–µ–Ω–æ–µ\n‚Ä¢ üßÖ –õ—É–∫ —Å–≤–µ–∂–∏–π\n‚Ä¢ üçû –•–ª–µ–± —á–µ—Ä–Ω—ã–π –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π\n‚Ä¢ üßÇ –°–æ–ª—å –∫—Ä—É–ø–Ω–æ–≥–æ –ø–æ–º–æ–ª–∞\n\n<i>üíØ –í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ç–æ–ª—å–∫–æ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–µ—Ä–º–µ—Ä–æ–≤!</i>\nüöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É - <b>–±–µ—Å–ø–ª–∞—Ç–Ω–æ</b>.\nüìû –ó–∞–∫–∞–∑ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: <b>+7 (123) 456-78-90</b>');
      }
      
      // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
      result = result.replace(/<ul>(\s*)<li>–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç<\/li>(\s*)<li>–í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç<\/li>(\s*)<\/ul>/g, 
        '‚Ä¢ –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç\n‚Ä¢ –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç');
      
      // –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–ø–∏—Å–∫–æ–≤
      result = result.replace(/<ul[^>]*>([\s\S]*?)<\/ul>/g, function(match, listContent) {
        // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
        const processedList = listContent.replace(/<li[^>]*>([\s\S]*?)<\/li>/g, '‚Ä¢ $1\n');
        return '\n' + processedList;
      });
      
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–µ–≥–∏ —Å–ø–∏—Å–∫–æ–≤
      result = result.replace(/<\/?[ou]l[^>]*>/g, '');
      
      // –®–∞–≥ 3: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—â–∏—Ö —Ç–µ–≥–æ–≤
      result = result
        .replace(/<strong>([\s\S]*?)<\/strong>/g, '<b>$1</b>')
        .replace(/<em>([\s\S]*?)<\/em>/g, '<i>$1</i>')
        .replace(/<b>([\s\S]*?)<\/b>/g, '<b>$1</b>')
        .replace(/<i>([\s\S]*?)<\/i>/g, '<i>$1</i>')
        .replace(/<u>([\s\S]*?)<\/u>/g, '<u>$1</u>')
        .replace(/<s>([\s\S]*?)<\/s>/g, '<s>$1</s>')
        .replace(/<strike>([\s\S]*?)<\/strike>/g, '<s>$1</s>');
      
      // –®–∞–≥ 4: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è HTML-—Ç–µ–≥–æ–≤, –∫—Ä–æ–º–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö
      result = result.replace(/<(?!\/?b>|\/?i>|\/?u>|\/?s>|\/?a(?:\s[^>]*)?>)[^>]*>/g, '');
      
      // –®–∞–≥ 5: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
      result = this.fixUnclosedTags(result);
      
      // –®–∞–≥ 6: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
      // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
      result = result
        .replace(/\n{3,}/g, '\n\n')
        .replace(/^\n+/, '')
        .replace(/\n+$/, '');
      
      log(`[–ö–û–ü–ò–Ø –¢–ï–°–¢–ê] HTML –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω –≤ —Ñ–æ—Ä–º–∞—Ç Telegram`, 'telegram');
      
      return result;
      
    } catch (error) {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ HTML-—Ç–µ–≥–æ–≤: ${error.message}`, 'telegram');
      return html; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    }
  }
  
  /**
   * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ HTML-—Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ
   * @param {string} text –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {string} –¢–µ–∫—Å—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º–∏ —Ç–µ–≥–∞–º–∏
   */
  fixUnclosedTags(text) {
    try {
      if (!text) return '';
      
      log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö HTML-—Ç–µ–≥–æ–≤`, 'telegram');
      
      // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
      
      // –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–µ–≥–æ–≤
      const allowedTags = ['b', 'i', 'u', 's', 'a'];
      
      // –°—Ç–µ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤ –∏ –∏—Ö –ø–æ–∑–∏—Ü–∏–π
      const tagStack = [];
      
      // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–≥–æ–≤, —É—á–∏—Ç—ã–≤–∞—é—â–µ–µ –∞—Ç—Ä–∏–±—É—Ç—ã
      const tagRegex = /<(\/?)(b|i|u|s|a)(\s+[^>]*)?>/gi;
      
      // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ –∏ —Å—Ç—Ä–æ–∏–º –∏—Ö –∫–∞—Ä—Ç—É
      let match;
      let lastIndex = 0;
      const segments = [];
      
      while ((match = tagRegex.exec(text)) !== null) {
        const fullTag = match[0];                // –ü–æ–ª–Ω—ã–π —Ç–µ–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä <b> –∏–ª–∏ </i>
        const isClosing = match[1] === '/';      // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–≥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º
        const tagName = match[2].toLowerCase();  // –ò–º—è —Ç–µ–≥–∞ (b, i, u, s, a)
        
        // –ï—Å–ª–∏ —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –¥–æ —Ç–µ–≥–∞ –Ω–µ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ —Å–µ–≥–º–µ–Ω—Ç—ã
        if (match.index > lastIndex) {
          segments.push(text.substring(lastIndex, match.index));
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ –≤ —Å–µ–≥–º–µ–Ω—Ç—ã
        segments.push(fullTag);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        lastIndex = match.index + fullTag.length;
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–≥ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö –ø–∞—Ä
        if (!isClosing) {
          // –î–ª—è –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ —Ç–µ–≥–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å—Ç–µ–∫
          tagStack.push({
            name: tagName,
            index: segments.length - 1  // –ò–Ω–¥–µ–∫—Å —Ç–µ–≥–∞ –≤ –º–∞—Å—Å–∏–≤–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
          });
        } else {
          // –î–ª—è –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ —Ç–µ–≥–∞ - –∏—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π
          const openTagIndex = tagStack.findIndex(tag => tag.name === tagName);
          
          if (openTagIndex !== -1) {
            // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ - —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ —Å—Ç–µ–∫–∞
            tagStack.splice(openTagIndex, 1);
          }
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–µ–≥–∞
      if (lastIndex < text.length) {
        segments.push(text.substring(lastIndex));
      }
      
      // –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ - –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏
      if (tagStack.length > 0) {
        log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏: ${tagStack.map(t => t.name).join(', ')}`, 'telegram');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–≥–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (LIFO)
        for (let i = tagStack.length - 1; i >= 0; i--) {
          const tagToClose = tagStack[i];
          segments.push(`</${tagToClose.name}>`);
        }
      }
      
      // –°–æ–±–∏—Ä–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      return segments.join('');
      
    } catch (error) {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤: ${error.message}`, 'telegram');
      return text; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    }
  }
}