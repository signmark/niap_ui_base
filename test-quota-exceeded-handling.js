/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ quota_exceeded —Å—Ç–∞—Ç—É—Å–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */

async function testQuotaExceededHandling() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É quota_exceeded —Å—Ç–∞—Ç—É—Å–∞...');
    
    const testContentId = 'test-quota-exceeded-content';
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å quota_exceeded —Å—Ç–∞—Ç—É—Å–æ–º
    const mockContent = {
      id: testContentId,
      title: '–¢–µ—Å—Ç quota exceeded',
      content: '–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –∫–≤–æ—Ç—ã',
      status: 'pending',
      social_platforms: {
        youtube: {
          status: 'quota_exceeded',
          platform: 'youtube',
          error: 'YouTube quota exceeded',
          updatedAt: new Date().toISOString()
        }
      },
      user_id: 'test-user',
      campaign_id: 'test-campaign'
    };
    
    console.log('üìä –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:');
    console.log('- –°—Ç–∞—Ç—É—Å:', mockContent.status);
    console.log('- YouTube —Å—Ç–∞—Ç—É—Å:', mockContent.social_platforms.youtube.status);
    console.log('- YouTube –æ—à–∏–±–∫–∞:', mockContent.social_platforms.youtube.error);
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å
    const { SocialPublishingService } = await import('./server/services/social/index.js');
    const socialPublishingService = new SocialPublishingService();
    
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...');
    
    // –ü–æ–ø—ã—Ç–∫–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ YouTube (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)
    const result = await socialPublishingService.publishToPlatform(
      mockContent,
      'youtube',
      { youtube: { apiKey: 'test' } },
      'test-token'
    );
    
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ø—ã—Ç–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
    console.log('- Platform:', result.platform);
    console.log('- Status:', result.status);
    console.log('- Error:', result.error);
    console.log('- Blocked:', result.status === 'quota_exceeded' ? '–î–ê' : '–ù–ï–¢');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if (result.status === 'quota_exceeded') {
      console.log('‚úÖ –£–°–ü–ï–•: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è quota_exceeded');
    } else {
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ù–ï –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è quota_exceeded');
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
    
    const { getPublishScheduler } = await import('./server/services/publish-scheduler.js');
    const scheduler = getPublishScheduler();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π quota_exceeded
    const contentWithQuota = {
      id: 'test-content-quota',
      status: 'pending',
      social_platforms: {
        youtube: {
          status: 'quota_exceeded'
        }
      }
    };
    
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ quota_exceeded –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
    
    return {
      success: true,
      blockingWorks: result.status === 'quota_exceeded',
      message: '–¢–µ—Å—Ç quota_exceeded –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω'
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ quota_exceeded:', error.message);
    return {
      success: false,
      error: error.message
    };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testQuotaExceededHandling()
  .then(result => {
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ quota_exceeded:');
    console.log(result);
  })
  .catch(error => {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
  });