/**
 * –¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ë–ï–ó –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */

const axios = require('axios');

async function testNoImageContent() {
  console.log('\nüîç === –¢–ï–°–¢ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –ë–ï–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø (–ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–û–ò–°–ö–ê) ===\n');

  try {
    console.log('üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ë–ï–ó –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const testContent = {
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞–º–ø–∞–Ω–∏—é
      contentType: 'text',
      content: '–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º —Å–æ–∑–¥–∞–µ—Ç —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –ø—Ä–∏—Ä–æ–¥—ã! üåÖ #–∑–∞–∫–∞—Ç #–º–æ—Ä–µ #–ø—Ä–∏—Ä–æ–¥–∞',
      keywords: '–∑–∞–∫–∞—Ç, –º–æ—Ä–µ, –ø—Ä–∏—Ä–æ–¥–∞, –∫—Ä–∞—Å–æ—Ç–∞, –ø–µ–π–∑–∞–∂',
      status: 'partial',
      socialPlatforms: {
        instagram: {
          status: 'pending',
          platform: 'instagram'
        }
      }
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    
    const createResponse = await axios.post('http://localhost:5000/api/campaign-content', testContent, {
      headers: {
        'Authorization': 'Bearer admin-test-token', // –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω
        'Content-Type': 'application/json'
      }
    });

    if (createResponse.data && createResponse.data.id) {
      const contentId = createResponse.data.id;
      console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å ID: ${contentId}`);
      
      console.log('\nüöÄ –ü—Ä–æ–±—É–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ Instagram...');
      
      // –ü—Ä–æ–±—É–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
      const publishResponse = await axios.post('http://localhost:5000/api/social-publish/instagram', {
        contentId: contentId
      });

      if (publishResponse.data.success) {
        console.log('üéâ –£–°–ü–ï–•! –ö–æ–Ω—Ç–µ–Ω—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
        console.log(`   üîó URL: ${publishResponse.data.result.postUrl}`);
        console.log(`   üÜî ID: ${publishResponse.data.result.postId}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        const contentResponse = await axios.get(`http://localhost:5000/api/campaign-content/${contentId}`, {
          headers: {
            'Authorization': 'Bearer admin-test-token'
          }
        });
        
        if (contentResponse.data && contentResponse.data.socialPlatforms) {
          console.log('üì± Instagram —Å—Ç–∞—Ç—É—Å:', contentResponse.data.socialPlatforms.instagram?.status);
          console.log('üîó Instagram URL:', contentResponse.data.socialPlatforms.instagram?.postUrl);
        }
        
        return {
          success: true,
          contentId,
          publishResult: publishResponse.data
        };
        
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', publishResponse.data.error);
        
        return {
          success: false,
          contentId,
          error: publishResponse.data.error
        };
      }
      
    } else {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç - –Ω–µ—Ç ID –≤ –æ—Ç–≤–µ—Ç–µ');
    }
    
  } catch (error) {
    console.error('üí• –û–®–ò–ë–ö–ê:', error.message);
    
    if (error.response) {
      console.error('   üìÑ Status:', error.response.status);
      console.error('   üìù Response:', JSON.stringify(error.response.data, null, 2));
    }
    
    return {
      success: false,
      error: error.message
    };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testNoImageContent()
  .then(result => {
    console.log('\nüèÅ === –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê ===');
    
    if (result.success) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å: –£–°–ü–ï–•');
      console.log('üìä –ö–æ–Ω—Ç–µ–Ω—Ç ID:', result.contentId);
      console.log('üéØ –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å—Ä–∞–±–æ—Ç–∞–ª –∏ –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
    } else {
      console.log('‚ùå –°—Ç–∞—Ç—É—Å: –û–®–ò–ë–ö–ê');
      console.log('üí¨ –û—à–∏–±–∫–∞:', result.error);
      
      if (result.contentId) {
        console.log('üìä –ö–æ–Ω—Ç–µ–Ω—Ç ID:', result.contentId);
      }
    }
    
    console.log('\n=== –ö–û–ù–ï–¶ –¢–ï–°–¢–ê ===\n');
    process.exit(result.success ? 0 : 1);
  })
  .catch(error => {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    process.exit(1);
  });