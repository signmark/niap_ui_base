#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Directus API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 */

import axios from 'axios';

const DIRECTUS_URL = 'https://directus.roboflow.space';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
const USER_ID = '53921f16-f51d-4591-80b9-8caa4fde4d13';

console.log('üéØ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Directus');

const posts = [
  {
    title: "–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Nplanner.ru",
    content: "üè• –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Nplanner.ru –ø–æ–º–æ–≥–∞–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤—Ä–∞—á–µ–π –∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤.\n\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–ø–∏—Å—å –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤—Ä–∞—á–µ–π\n‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n\n–£–º–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –∑–∞–ª–æ–≥ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã!\n\n#–º–µ–¥–∏—Ü–∏–Ω–∞ #–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #nplanner #—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å #–∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ",
    topic: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –º–µ–¥–∏—Ü–∏–Ω–µ"
  },
  {
    title: "–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥",
    content: "üíª –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ü–∏—Ñ—Ä–æ–≤—ã–º —Ä–µ—à–µ–Ω–∏—è–º –≤ –º–µ–¥–∏—Ü–∏–Ω–µ ‚Äî –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.\n\nüéØ Nplanner.ru —É—Å–∫–æ—Ä—è–µ—Ç —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—é:\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è\n‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—Ä–∞—á–µ–π\n‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\n\n–ë—É–¥—É—â–µ–µ –º–µ–¥–∏—Ü–∏–Ω—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è!\n\n#—Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è #–º–µ–¥–∏—Ü–∏–Ω–∞ #–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ #nplanner #—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    topic: "–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—ã"
  },
  {
    title: "–ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤",
    content: "üë®‚Äç‚öïÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –∫–ª—é—á –∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ.\n\nüèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è Nplanner.ru:\n‚Üí –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è\n‚Üí –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n‚Üí –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ –º–µ–¥–ø–µ—Ä—Å–æ–Ω–∞–ª–∞\n‚Üí –†–æ—Å—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n\n–ö–∞—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!\n\n#–∫–∞—á–µ—Å—Ç–≤–æ #–º–µ–¥—É—Å–ª—É–≥–∏ #–ø–∞—Ü–∏–µ–Ω—Ç—ã #nplanner #—Å–µ—Ä–≤–∏—Å",
    topic: "–ö–∞—á–µ—Å—Ç–≤–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥"
  }
];

async function createContentDirectly() {
  const headers = {
    'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
    'Content-Type': 'application/json'
  };

  console.log(`\nüë§ –¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${USER_ID}`);
  console.log(`üìù –°–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${posts.length}`);

  const results = [];

  for (let i = 0; i < posts.length; i++) {
    const post = posts[i];
    
    console.log(`\nüìÑ –°–æ–∑–¥–∞—é –ø–æ—Å—Ç ${i + 1}/${posts.length}: ${post.title}`);
    
    try {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ campaign_content
      const contentData = {
        campaign_id: CAMPAIGN_ID,
        user_id: USER_ID,
        title: post.title,
        content: post.content,
        content_type: 'text',
        status: 'draft',
        hashtags: post.content.match(/#\w+/g) || [],
        metadata: {
          source: 'nplanner_direct_generator',
          company: 'Nplanner.ru',
          topic: post.topic,
          createdAt: new Date().toISOString(),
          directlyCreated: true
        },
        created_at: new Date().toISOString(),
        social_platforms: {}
      };

      const response = await axios.post(
        `${DIRECTUS_URL}/items/campaign_content`,
        contentData,
        { headers }
      );

      if (response.status === 200 || response.status === 201) {
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${response.data?.data?.id || 'ID –Ω–µ –ø–æ–ª—É—á–µ–Ω'}`);
        results.push({
          id: response.data?.data?.id,
          title: post.title,
          user_id: USER_ID
        });
      } else {
        console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }

      await new Promise(resolve => setTimeout(resolve, 500));

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è "${post.title}":`, error.response?.data || error.message);
    }
  }

  return results;
}

async function verifyCreatedContent() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...');
  
  const headers = {
    'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
    'Content-Type': 'application/json'
  };

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Directus API
    const response = await axios.get(
      `${DIRECTUS_URL}/items/campaign_content?filter[campaign_id][_eq]=${CAMPAIGN_ID}&filter[user_id][_eq]=${USER_ID}&sort=-date_created&limit=10`,
      { headers }
    );

    if (response.data?.data) {
      const userContent = response.data.data.filter(item => 
        item.metadata?.source === 'nplanner_direct_generator'
      );

      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_ID}: ${userContent.length}`);
      
      if (userContent.length > 0) {
        console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:');
        userContent.forEach((item, index) => {
          console.log(`   ${index + 1}. ${item.title}`);
          console.log(`      ID: ${item.id}`);
          console.log(`      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${item.user_id}`);
          console.log(`      –°—Ç–∞—Ç—É—Å: ${item.status}`);
        });
      }

      return userContent.length;
    }

    return 0;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.response?.data || error.message);
    return 0;
  }
}

async function main() {
  try {
    const created = await createContentDirectly();
    
    console.log('\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...');
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const verified = await verifyCreatedContent();
    
    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log(`üìä –°–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ Directus: ${created.length} –ø–æ—Å—Ç–æ–≤`);
    console.log(`‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –≤ —Å–∏—Å—Ç–µ–º–µ: ${verified} –ø–æ—Å—Ç–æ–≤`);
    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${USER_ID}`);
    console.log(`üìù –°—Ç–∞—Ç—É—Å: draft (—á–µ—Ä–Ω–æ–≤–∏–∫–∏)`);
    
    if (verified > 0) {
      console.log('\n‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!');
      console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      console.log('üéØ –ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    } else {
      console.log('\n‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ');
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

main().catch(console.error);