/**
 * –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê YOUTUBE –ü–£–ë–õ–ò–ö–ê–¶–ò–ô - –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø
 * –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π YouTube –≤–∏–¥–µ–æ
 */

import axios from 'axios';

async function emergencyStopYouTubePublishing() {
  console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê YOUTUBE –ü–£–ë–õ–ò–ö–ê–¶–ò–ô');
  
  const directusUrl = process.env.DIRECTUS_URL || 'https://directus.roboflow.tech';
  const token = process.env.DIRECTUS_TOKEN;
  
  if (!token) {
    console.error('‚ùå DIRECTUS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ YouTube –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º pending/scheduled
    console.log('üìã –ü–æ–ª—É—á–∞–µ–º YouTube –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º pending/scheduled...');
    const contentResponse = await axios.get(`${directusUrl}/items/campaign_content`, {
      headers: { Authorization: `Bearer ${token}` },
      params: {
        'filter[content_type][_eq]': 'video',
        'filter[social_platforms][_contains]': 'youtube',
        limit: -1
      }
    });
    
    const youtubeContent = contentResponse.data.data.filter(item => {
      if (!item.social_platforms || !item.social_platforms.youtube) return false;
      const status = item.social_platforms.youtube.status;
      return status === 'pending' || status === 'scheduled';
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${youtubeContent.length} YouTube –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏`);
    
    // 2. –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ pending/scheduled YouTube –∫–æ–Ω—Ç–µ–Ω—Ç
    for (const content of youtubeContent) {
      console.log(`üîí –ë–ª–æ–∫–∏—Ä—É–µ–º YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—é –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${content.id}`);
      
      const updateData = {
        social_platforms: {
          ...content.social_platforms,
          youtube: {
            ...content.social_platforms.youtube,
            status: 'emergency_blocked',
            error: '–ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏–∑-–∑–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è',
            blockedAt: new Date().toISOString()
          }
        }
      };
      
      await axios.patch(`${directusUrl}/items/campaign_content/${content.id}`, updateData, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç ${content.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
    }
    
    console.log('üõ°Ô∏è –í–°–ï YOUTUBE –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –≠–ö–°–¢–†–ï–ù–ù–û –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´');
    console.log('‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–ò–ö–ò –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø –ü–ï–†–ï–î –í–û–ó–û–ë–ù–û–í–õ–ï–ù–ò–ï–ú');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É
emergencyStopYouTubePublishing();