/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram
 * –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ–¥ server/api/test-routes.ts
 * 
 * –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞ telegram-emoji-html
 */

/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä—è–º–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML –∏ —ç–º–æ–¥–∑–∏ –≤ Telegram
 * POST /api/test/telegram-emoji-html
 * 
 * 1. –Ø–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º DEFAULT_CAMPAIGN_ID –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –∫–∞–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
 * 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram
 * 3. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ —Ç–æ–∫–µ–Ω –∏ chatId, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –∫–∞–º–ø–∞–Ω–∏–∏
 * 4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 * 
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
 * POST /api/test/telegram-emoji-html
 * Body: {
 *   "text": "<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>, <i>–∫—É—Ä—Å–∏–≤</i> –∏ —ç–º–æ–¥–∑–∏ üéâ",
 *   "campaignId": "46868c44-c6a4-4bed-accf-9ad07bba790e"
 * }
 */

/*
testRouter.post('/telegram-emoji-html', async (req: Request, res: Response) => {
  try {
    const { text, campaignId } = req.body;
    
    // ID –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é
    const DEFAULT_CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
    
    // –†–µ–∑–µ—Ä–≤–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram (–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∫–∞–º–ø–∞–Ω–∏–∏)
    const FALLBACK_TELEGRAM_TOKEN = '7529101043:AAG298h0iubyeKPuZ-WRtEFbNEnEyqy_XJU';
    const FALLBACK_TELEGRAM_CHAT_ID = '-1002302366310';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if (!text) {
      return res.status(400).json({
        success: false,
        error: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: text'
      });
    }
    
    log(`[Test API] –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É HTML –∏ —ç–º–æ–¥–∑–∏ –≤ Telegram`, 'test');
    log(`[Test API] –¢–µ–∫—Å—Ç: ${text.substring(0, 100)}${text.length > 100 ? '...' : ''}`, 'test');
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
    let campaignToUse = campaignId || DEFAULT_CAMPAIGN_ID;
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
    const adminToken = await storage.getAdminToken();
    console.log(`[Test API] –ê–¥–º–∏–Ω—Å–∫–∏–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${adminToken ? '–¥–∞' : '–Ω–µ—Ç'}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
    console.log(`[Test API] –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–º–ø–∞–Ω–∏—é ${campaignToUse}`);
    let campaign = await storage.getCampaignById(campaignToUse);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
    let token = FALLBACK_TELEGRAM_TOKEN;
    let chatId = FALLBACK_TELEGRAM_CHAT_ID;
    
    // –ï—Å–ª–∏ –∫–∞–º–ø–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ –∏–º–µ–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (campaign && campaign.settings && campaign.settings.telegram) {
      console.log(`[Test API] –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∏–∑ –∫–∞–º–ø–∞–Ω–∏–∏`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–∞–º–ø–∞–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
      if (campaign.settings.telegram.token) {
        token = campaign.settings.telegram.token;
      }
      
      if (campaign.settings.telegram.chatId) {
        chatId = campaign.settings.telegram.chatId;
      }
    } else {
      console.log(`[Test API] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ chatId
    if (!token || !chatId) {
      return res.status(400).json({
        success: false,
        error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram (—Ç–æ–∫–µ–Ω –∏–ª–∏ ID —á–∞—Ç–∞)'
      });
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const testContent = {
      id: `test-${Date.now()}`,
      title: '–¢–µ—Å—Ç HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
      content: text,
      contentType: 'text',
      imageUrl: '',
      additionalImages: [],
      status: 'draft',
      userId: 'test-user',
      campaignId: campaignToUse,
      socialPlatforms: ['telegram'],
      createdAt: new Date(),
      hashtags: [],
      links: [],
      metadata: {}
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const originalText = text;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ TelegramService
    const formattedText = telegramService.formatTextForTelegram(text);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const result = await telegramService.publishToTelegram(testContent, {
      token,
      chatId
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log(`[Test API] –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:`, result);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return res.json({
      success: true,
      message_id: result.messageId,
      message_url: result.postUrl,
      platform: result.platform,
      status: result.status,
      original_text: originalText,
      formatted_text: formattedText,
      used_campaign_id: campaignToUse,
      used_fallback_settings: !campaign || !campaign.settings || !campaign.settings.telegram
    });
  } catch (error: any) {
    console.error('[Test API] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ HTML –∏ —ç–º–æ–¥–∑–∏ –≤ Telegram:', error);
    return res.status(500).json({
      success: false,
      error: error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      stack: process.env.NODE_ENV === 'development' ? error.stack : undefined
    });
  }
});
*/