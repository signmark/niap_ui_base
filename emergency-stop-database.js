/**
 * –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å—ã –Ω–∞ production —Å–µ—Ä–≤–µ—Ä–µ directus.nplanner.ru
 */

import axios from 'axios';

const PRODUCTION_DIRECTUS_URL = 'https://directus.nplanner.ru';
const ADMIN_EMAIL = 'lbrspb@gmail.com';

async function emergencyStopDatabase() {
  console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê: –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ production –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
  
  try {
    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Directus
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ production Directus...');
    const authResponse = await axios.post(`${PRODUCTION_DIRECTUS_URL}/auth/login`, {
      email: ADMIN_EMAIL,
      password: process.env.DIRECTUS_ADMIN_PASSWORD || 'your_password_here'
    });
    
    const token = authResponse.data.data.access_token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
    
    const headers = {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    };
    
    // 2. –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    console.log('2. –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    const contentResponse = await axios.get(`${PRODUCTION_DIRECTUS_URL}/items/campaign_content?filter[status][_eq]=scheduled&limit=50`, {
      headers
    });
    
    const scheduledContent = contentResponse.data.data;
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${scheduledContent.length} –∫–æ–Ω—Ç–µ–Ω—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'scheduled'`);
    
    // 3. –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PATCH
    if (scheduledContent.length > 0) {
      console.log('3. –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ draft...');
      
      const contentIds = scheduledContent.map(item => item.id);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö scheduled –∫–æ–Ω—Ç–µ–Ω—Ç–æ–≤ –Ω–∞ draft
      const updateResponse = await axios.patch(`${PRODUCTION_DIRECTUS_URL}/items/campaign_content`, {
        keys: contentIds,
        data: {
          status: 'draft'
        }
      }, { headers });
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${contentIds.length} –∫–æ–Ω—Ç–µ–Ω—Ç–æ–≤: scheduled ‚Üí draft`);
    }
    
    // 4. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö Facebook –ø—É–±–ª–∏–∫–∞—Ü–∏–π
    console.log('4. –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö Facebook –ø—É–±–ª–∏–∫–∞—Ü–∏–π...');
    const facebookResponse = await axios.get(`${PRODUCTION_DIRECTUS_URL}/items/campaign_content?limit=100`, {
      headers
    });
    
    let fixedFacebook = 0;
    for (const content of facebookResponse.data.data) {
      if (content.social_platforms?.facebook?.status === 'published' && 
          (!content.social_platforms?.facebook?.postUrl || content.social_platforms?.facebook?.postUrl === '')) {
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é –∑–∞–ø–∏—Å—å
        const updatedPlatforms = {
          ...content.social_platforms,
          facebook: {
            ...content.social_platforms.facebook,
            status: 'not_selected',
            selected: false
          }
        };
        
        await axios.patch(`${PRODUCTION_DIRECTUS_URL}/items/campaign_content/${content.id}`, {
          social_platforms: updatedPlatforms
        }, { headers });
        
        fixedFacebook++;
      }
    }
    
    if (fixedFacebook > 0) {
      console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixedFacebook} –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö Facebook –∑–∞–ø–∏—Å–µ–π`);
    }
    
    // 5. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–ª–∞–≥–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    console.log('5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
    try {
      await axios.post(`${PRODUCTION_DIRECTUS_URL}/items/directus_settings`, {
        project: 'default',
        key: 'emergency_stop_scheduler',
        value: 'true'
      }, { headers });
      console.log('‚úÖ –§–ª–∞–≥ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (flagError) {
      console.log('‚ö†Ô∏è  –§–ª–∞–≥ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)');
    }
    
    // 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è...');
    const finalCheck = await axios.get(`${PRODUCTION_DIRECTUS_URL}/items/campaign_content?filter[status][_eq]=scheduled&limit=1`, {
      headers
    });
    
    console.log(`–û—Å—Ç–∞–ª–æ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'scheduled': ${finalCheck.data.data.length}`);
    
    if (finalCheck.data.data.length === 0) {
      console.log('üéØ –£–°–ü–ï–•: –í—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    } else {
      console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Å—Ç–∞–ª–∏—Å—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    }
    
    return {
      success: true,
      stopped_content: scheduledContent.length,
      fixed_facebook: fixedFacebook,
      timestamp: new Date().toISOString()
    };
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    if (error.response?.data) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return {
      success: false,
      error: error.message,
      timestamp: new Date().toISOString()
    };
  }
}

// –ó–∞–ø—É—Å–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
emergencyStopDatabase()
  .then(result => {
    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –≠–ö–°–¢–†–ï–ù–ù–û–ô –û–°–¢–ê–ù–û–í–ö–ò:', JSON.stringify(result, null, 2));
    
    if (result.success) {
      console.log('\n‚úÖ –ú–ê–°–°–û–í–´–ï –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –û–°–¢–ê–ù–û–í–õ–ï–ù–´');
      console.log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
      console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ production —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π');
      console.log('3. –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º');
    } else {
      console.log('\n‚ùå –û–°–¢–ê–ù–û–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨ - –¢–†–ï–ë–£–ï–¢–°–Ø –†–£–ß–ù–û–ï –í–ú–ï–®–ê–¢–ï–õ–¨–°–¢–í–û');
    }
    
    process.exit(result.success ? 0 : 1);
  })
  .catch(error => {
    console.error('\nüí• –§–ê–¢–ê–õ–¨–ù–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.log('\nüÜò –¢–†–ï–ë–£–ï–¢–°–Ø –≠–ö–°–¢–†–ï–ù–ù–û–ï –†–£–ß–ù–û–ï –í–ú–ï–®–ê–¢–ï–õ–¨–°–¢–í–û –ù–ê –°–ï–†–í–ï–†–ï');
    process.exit(1);
  });