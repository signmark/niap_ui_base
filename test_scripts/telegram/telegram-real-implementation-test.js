/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
 * –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º message_id
 */

import axios from 'axios';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
function log(message) {
  const timestamp = new Date().toLocaleTimeString();
  console.log(`[${timestamp}] ${message}`);
}

/**
 * –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ messageId
 */
async function testTextOnlyMessage() {
  try {
    log('üß™ –¢–ï–°–¢ 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testContent = {
      id: 'test-id-1',
      title: '<b>–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</b>',
      content: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
      contentType: 'text',
      imageUrl: '', // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      additionalImages: [], // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      status: 'draft',
      userId: 'test-user',
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e',
      socialPlatforms: ['telegram'],
      createdAt: new Date(),
      hashtags: [],
      links: [],
      metadata: {}
    };

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º test API, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ
    const response = await axios.post('http://localhost:5000/api/test/telegram-post', {
      content: testContent,
      chatId: '-1002302366310'
    });

    if (response.data.success) {
      log('‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ —Ä–µ–∞–ª—å–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ messageId –≤ –æ—Ç–≤–µ—Ç–µ
      if (response.data.messageId) {
        log(`üîç ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.messageId}`);
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: messageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API!');
        return { success: false, error: 'messageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API' };
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ postUrl –≤ –æ—Ç–≤–µ—Ç–µ
      if (response.data.postUrl) {
        log(`üîç URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.postUrl}`);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç message_id
        if (!response.data.postUrl.includes('/' + response.data.messageId)) {
          log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
          return { success: false, error: 'URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id' };
        }
        
        log('‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id');
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: postUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API!');
        return { success: false, error: 'postUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API' };
      }
      
      return { success: true, data: response.data };
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      return { success: false, error: response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' };
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    return { success: false, error: error.message };
  }
}

/**
 * –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTML –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL —Å messageId
 */
async function testHtmlFormattedMessage() {
  try {
    log('üß™ –¢–ï–°–¢ 2: –û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const testContent = {
      id: 'test-id-2',
      title: '–¢–µ—Å—Ç–æ–≤—ã–π HTML',
      content: '<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>, <i>–∫—É—Ä—Å–∏–≤</i> –∏ <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u> —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã.',
      contentType: 'text',
      imageUrl: '',
      additionalImages: [],
      status: 'draft',
      userId: 'test-user',
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e',
      socialPlatforms: ['telegram'],
      createdAt: new Date(),
      hashtags: [],
      links: [],
      metadata: {}
    };

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º test API, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
    const response = await axios.post('http://localhost:5000/api/test/telegram-post', {
      content: testContent,
      chatId: '-1002302366310'
    });

    if (response.data.success) {
      log('‚úÖ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ messageId –≤ –æ—Ç–≤–µ—Ç–µ
      if (response.data.messageId) {
        log(`üîç ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.messageId}`);
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: messageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API!');
        return { success: false, error: 'messageId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API' };
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ postUrl –≤ –æ—Ç–≤–µ—Ç–µ
      if (response.data.postUrl) {
        log(`üîç URL —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.postUrl}`);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç message_id
        if (!response.data.postUrl.includes('/' + response.data.messageId)) {
          log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
          return { success: false, error: 'URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id' };
        }
        
        log('‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id');
      } else {
        log('‚ùå –û–®–ò–ë–ö–ê: postUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API!');
        return { success: false, error: 'postUrl –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API' };
      }
      
      return { success: true, data: response.data };
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      return { success: false, error: response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' };
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    return { success: false, error: error.message };
  }
}

/**
 * –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL —á–µ—Ä–µ–∑ API
 */
async function testUrlFormatting() {
  try {
    log('üß™ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL');
    
    const chatId = '-1002302366310';
    const messageId = '1234'; // –¢–µ—Å—Ç–æ–≤—ã–π ID —Å–æ–æ–±—â–µ–Ω–∏—è
    
    // –û–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç–æ–≤–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL
    const response = await axios.get('http://localhost:5000/api/test/telegram-url', {
      params: {
        chatId,
        messageId
      }
    });

    if (response.data.success) {
      log('‚úÖ –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
      
      const formattedUrl = response.data.data.url;
      log(`üîç –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL: ${formattedUrl}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç messageId
      if (!formattedUrl.includes('/' + messageId)) {
        log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id!');
        return { success: false, error: 'URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id' };
      }
      
      log('‚úÖ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç message_id');
      return { success: true, data: response.data };
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ URL: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      return { success: false, error: response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' };
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    return { success: false, error: error.message };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
async function runAllTests() {
  log('üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL –≤ Telegram');
  
  // –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞
  const test1Result = await testTextOnlyMessage();
  log(`\n–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 1: ${test1Result.success ? '‚úÖ –£–°–ü–ï–®–ù–û' : '‚ùå –ù–ï–£–°–ü–ï–®–ù–û'}`);
  if (!test1Result.success) {
    log(`–û—à–∏–±–∫–∞: ${test1Result.error}`);
  }
  
  // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  const test2Result = await testHtmlFormattedMessage();
  log(`\n–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 2: ${test2Result.success ? '‚úÖ –£–°–ü–ï–®–ù–û' : '‚ùå –ù–ï–£–°–ü–ï–®–ù–û'}`);
  if (!test2Result.success) {
    log(`–û—à–∏–±–∫–∞: ${test2Result.error}`);
  }
  
  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è URL
  const test3Result = await testUrlFormatting();
  log(`\n–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ 3: ${test3Result.success ? '‚úÖ –£–°–ü–ï–®–ù–û' : '‚ùå –ù–ï–£–°–ü–ï–®–ù–û'}`);
  if (!test3Result.success) {
    log(`–û—à–∏–±–∫–∞: ${test3Result.error}`);
  }
  
  // –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const allSuccess = test1Result.success && test2Result.success && test3Result.success;
  log(`\n=== –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: ${allSuccess ? '‚úÖ –í–°–ï –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–´' : '‚ùå –ï–°–¢–¨ –û–®–ò–ë–ö–ò'} ===`);
  
  return allSuccess;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
runAllTests()
  .then(success => {
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    log(`\n–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: ${error}`);
    process.exit(1);
  });