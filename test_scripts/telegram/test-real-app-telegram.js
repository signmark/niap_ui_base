/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –≠—Ç–æ—Ç —Ç–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ –ø—É—Ç—å, —á—Ç–æ –∏ —Ä–µ–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * 
 * –ó–∞–ø—É—Å–∫: node test-real-app-telegram.js
 */

const axios = require('axios');
const { v4: uuidv4 } = require('uuid');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
const config = {
  // URL API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  apiUrl: 'http://localhost:5000',
  // ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞–º–ø–∞–Ω–∏–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Telegram
  campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e',
  // ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userId: '53921f16-f51d-4591-80b9-8caa4fde4d13',
  // –¢–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–º—Å)
  requestDelay: 1000
};

// –¢–µ—Å—Ç–æ–≤—ã–µ –∫–µ–π—Å—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ HTML-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
const testCases = [
  {
    name: '–ë–∞–∑–æ–≤—ã–µ HTML-—Ç–µ–≥–∏',
    content: '<p>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å <b>–∂–∏—Ä–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º</b>, <i>–∫—É—Ä—Å–∏–≤–æ–º</i> –∏ <u>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º</u>.</p>',
    platforms: ['telegram']
  },
  {
    name: '–≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–µ HTML-—Ç–µ–≥–∏',
    content: '<p>–¢–µ–∫—Å—Ç —Å <strong>–∂–∏—Ä–Ω—ã–º —á–µ—Ä–µ–∑ strong</strong>, <em>–∫—É—Ä—Å–∏–≤–æ–º —á–µ—Ä–µ–∑ em</em> –∏ <del>–∑–∞—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º</del>.</p>',
    platforms: ['telegram']
  },
  {
    name: '–ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–ø–∏—Å–∫–∏',
    content: '<h2>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h2><ul><li>–ü—É–Ω–∫—Ç 1</li><li>–ü—É–Ω–∫—Ç 2</li><li>–ü—É–Ω–∫—Ç 3</li></ul>',
    platforms: ['telegram']
  },
  {
    name: '–°–º–∞–π–ª—ã –∏ —ç–º–æ–¥–∑–∏',
    content: '<p>–¢–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏ üòÄ üëç üéâ –∏ <b>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</b></p>',
    platforms: ['telegram']
  },
  {
    name: '–°—Å—ã–ª–∫–∏',
    content: '<p>–¢–µ–∫—Å—Ç —Å–æ <a href="https://example.com">—Å—Å—ã–ª–∫–æ–π</a> –Ω–∞ —Å–∞–π—Ç.</p>',
    platforms: ['telegram']
  },
  {
    name: '–ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏',
    content: '<p>–¢–µ–∫—Å—Ç —Å <b>–Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º –∂–∏—Ä–Ω—ã–º <i>–∏ –∫—É—Ä—Å–∏–≤–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.</p>',
    platforms: ['telegram']
  },
  {
    name: '–î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
    content: '<p>–ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <b>–∂–∏—Ä–Ω—ã–º</b> –∏ <i>–∫—É—Ä—Å–∏–≤–Ω—ã–º</i> —Ç–µ–∫—Å—Ç–æ–º.</p><p>–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º</u> —Ç–µ–∫—Å—Ç–æ–º –∏ —ç–º–æ–¥–∑–∏ üéâ.</p><p>–¢—Ä–µ—Ç–∏–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <a href="https://example.com">—Å—Å—ã–ª–∫–æ–π</a> –Ω–∞ —Å–∞–π—Ç.</p>',
    platforms: ['telegram']
  }
];

/**
 * –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
 * @param {number} ms –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
 * @returns {Promise<void>}
 */
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å–∏—Å—Ç–µ–º–µ —á–µ—Ä–µ–∑ API
 * @param {object} testCase –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
async function createContent(testCase) {
  try {
    const content = {
      id: uuidv4(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      title: `–¢–µ—Å—Ç: ${testCase.name} [${new Date().toISOString()}]`,
      content: testCase.content,
      contentType: 'text',
      status: 'draft',
      userId: config.userId,
      campaignId: config.campaignId,
      socialPlatforms: testCase.platforms,
      // –£—Å—Ç–∞–Ω–æ–≤–∏–º empty arrays –¥–ª—è –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç—Å—è –≤ —Å—Ö–µ–º–µ
      hashtags: [],
      links: [],
      imageUrl: null,
      additionalImages: []
    };

    console.log(`[${testCase.name}] –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...`);
    const response = await axios.post(`${config.apiUrl}/api/content`, content);
    return response.data;
  } catch (error) {
    console.error(`[${testCase.name}] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`, error.response?.data || error.message);
    throw error;
  }
}

/**
 * –ü—É–±–ª–∏–∫—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ API
 * @param {string} contentId ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * @param {object} testCase –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */
async function publishContent(contentId, testCase) {
  try {
    console.log(`[${testCase.name}] –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}...`);
    const response = await axios.post(`${config.apiUrl}/api/content/${contentId}/publish`, {
      platforms: testCase.platforms
    });
    return response.data;
  } catch (error) {
    console.error(`[${testCase.name}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`, error.response?.data || error.message);
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 * @param {string} contentId ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * @param {object} testCase –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª—É—á–∞–π
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
 */
async function checkPublicationStatus(contentId, testCase) {
  try {
    console.log(`[${testCase.name}] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ${contentId}...`);
    const response = await axios.get(`${config.apiUrl}/api/content/${contentId}`);
    return response.data;
  } catch (error) {
    console.error(`[${testCase.name}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:`, error.response?.data || error.message);
    throw error;
  }
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
 */
async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log(`üìã –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${testCases.length}`);
  console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');

  const results = [];

  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    console.log(`\n‚è≥ –¢–µ—Å—Ç ${i + 1}/${testCases.length}: ${testCase.name}`);
    
    try {
      // 1. –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      const content = await createContent(testCase);
      console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å ID: ${content.id}`);
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await sleep(config.requestDelay);
      
      // 2. –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
      const publication = await publishContent(content.id, testCase);
      console.log(`üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∞: ${JSON.stringify(publication.results)}`);
      
      // –û–∂–∏–¥–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å
      console.log(`‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (5 —Å–µ–∫—É–Ω–¥)...`);
      await sleep(5000);
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      const status = await checkPublicationStatus(content.id, testCase);
      console.log(`üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${status.status}`);
      
      // 4. –ü–æ–ª—É—á–∞–µ–º URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
      let publicationUrl = '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
      if (status.publications && status.publications.length > 0) {
        const telegramPub = status.publications.find(pub => pub.platform === 'telegram');
        if (telegramPub && telegramPub.postUrl) {
          publicationUrl = telegramPub.postUrl;
        }
      }
      
      // 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
      const testResult = {
        name: testCase.name,
        content: testCase.content,
        contentId: content.id,
        status: status.status,
        success: status.status === 'published',
        publicationUrl
      };
      
      results.push(testResult);
      
      console.log(`${testResult.success ? '‚úÖ –£–°–ü–ï–•' : '‚ùå –û–®–ò–ë–ö–ê'}: ${testCase.name}`);
      if (publicationUrl !== '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ') {
        console.log(`üîó URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${publicationUrl}`);
      }
    } catch (error) {
      console.error(`‚ùå –¢–µ—Å—Ç "${testCase.name}" –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:`, error.message);
      results.push({
        name: testCase.name,
        content: testCase.content,
        error: error.message,
        success: false
      });
    }
    
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    await sleep(config.requestDelay * 2);
  }
  
  // –í—ã–≤–æ–¥–∏–º –æ–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const successCount = results.filter(r => r.success).length;
  console.log(`\nüìà –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
  console.log(`   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${results.length}`);
  console.log(`   –£—Å–ø–µ—à–Ω—ã—Ö: ${successCount}`);
  console.log(`   –ù–µ—É–¥–∞—á–Ω—ã—Ö: ${results.length - successCount}`);
  
  console.log('\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–µ—Å—Ç—É:');
  results.forEach((result, index) => {
    console.log(`   ${index + 1}. ${result.name}: ${result.success ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);
    if (result.publicationUrl && result.publicationUrl !== '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ') {
      console.log(`      URL: ${result.publicationUrl}`);
    }
    if (!result.success && result.error) {
      console.log(`      –û—à–∏–±–∫–∞: ${result.error}`);
    }
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runAllTests().catch(error => {
  console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
});