#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –≤ Facebook —á–µ—Ä–µ–∑ webhook v3
 * —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º API –æ—Ç–≤–µ—Ç–∞ (postUrl –≤–º–µ—Å—Ç–æ permalink)
 * 
 * –ó–∞–ø—É—Å–∫: node test-facebook-video-webhook-v3.mjs
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
function log(message) {
  const now = new Date();
  console.log(`[${now.toISOString()}] ${message}`);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Directus
 * @returns {Promise<string>} –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
async function getAdminToken() {
  try {
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (process.env.DIRECTUS_ADMIN_TOKEN) {
      return process.env.DIRECTUS_ADMIN_TOKEN;
    }
    
    // –ò–Ω–∞—á–µ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    const directusUrl = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
    const email = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
    const password = process.env.DIRECTUS_ADMIN_PASSWORD || 'QtpZ3dh7';
    
    const response = await fetch(`${directusUrl}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ email, password })
    });
    
    const data = await response.json();
    
    if (!data.data?.access_token) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Directus');
    }
    
    return data.data.access_token;
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${error.message}`);
    throw error;
  }
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {string} token –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Directus
 * @returns {Promise<string>} ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –≤–∏–¥–µ–æ
 */
async function findContentWithVideo(token) {
  try {
    log('–ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
    
    const directusUrl = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
    const response = await fetch(`${directusUrl}/items/campaign_content?filter[video_url][_nnull]=true&limit=5`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    const data = await response.json();
    
    if (!data.data || data.data.length === 0) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å video_url');
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å video_url
    const content = data.data.find(item => item.video_url);
    
    if (!content) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å video_url');
    }
    
    log(`‚úì –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç —Å ID: ${content.id}`);
    log(`‚úì –í–∏–¥–µ–æ URL: ${content.video_url}`);
    
    return content.id;
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`);
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è social_platforms.facebook –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å
 * @param {string} contentId ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @param {string} token –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∫ Directus API
 * @returns {Promise<object>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ Facebook
 */
async function checkFacebookStatus(contentId, token) {
  try {
    const directusUrl = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
    const response = await fetch(`${directusUrl}/items/campaign_content/${contentId}`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    const data = await response.json();
    const content = data.data;
    
    if (!content) {
      throw new Error(`–ö–æ–Ω—Ç–µ–Ω—Ç —Å ID ${contentId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
    
    let socialPlatforms = content.social_platforms || {};
    
    // –ï—Å–ª–∏ socialPlatforms - —Å—Ç—Ä–æ–∫–∞, –ø–∞—Ä—Å–∏–º JSON
    if (typeof socialPlatforms === 'string') {
      try {
        socialPlatforms = JSON.parse(socialPlatforms);
      } catch (e) {
        log(`‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ social_platforms: ${e}`);
        socialPlatforms = {};
      }
    }
    
    const facebookStatus = socialPlatforms.facebook || null;
    
    log(`üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Facebook –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}:`);
    log(JSON.stringify(facebookStatus, null, 2));
    
    return facebookStatus;
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ Facebook: ${error.message}`);
    return null;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
 */
async function runTest() {
  try {
    log('–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞ Facebook webhook v3 —Å –≤–∏–¥–µ–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminToken = await getAdminToken();
    log('‚úì –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –≤–∏–¥–µ–æ
    const contentId = await findContentWithVideo(adminToken);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Facebook
    const initialStatus = await checkFacebookStatus(contentId, adminToken);
    
    if (initialStatus?.status === 'published') {
      log('‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –∫–æ–Ω—Ç–µ–Ω—Ç —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ Facebook');
      log('‚ö†Ô∏è –¢–µ—Å—Ç –≤—Å–µ —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å');
    }
    
    // URL –≤–∞—à–µ–≥–æ Facebook webhook v3
    const webhookUrl = 'http://localhost:5000/api/facebook-webhook-v3';
    
    log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ ${webhookUrl} —Å contentId: ${contentId}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ webhook
    const response = await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ contentId })
    });
    
    const responseData = await response.json();
    
    log(`üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    log(`üì• –û—Ç–≤–µ—Ç: ${JSON.stringify(responseData, null, 2)}`);
    
    if (response.ok && responseData.success) {
      log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω: –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ postUrl –≤ –æ—Ç–≤–µ—Ç–µ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ –Ω–∞—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π)
      if (responseData.postUrl) {
        log(`‚úì –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç postUrl: ${responseData.postUrl}`);
      } else if (responseData.permalink) {
        log(`‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–ª–µ permalink: ${responseData.permalink}`);
      } else {
        log('‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –Ω–∏ postUrl, –Ω–∏ permalink');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...');
      const updatedStatus = await checkFacebookStatus(contentId, adminToken);
      
      if (updatedStatus?.status === 'published') {
        log('‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–ª–µ postUrl
        if (updatedStatus.postUrl) {
          log(`‚úì –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–æ–¥–µ—Ä–∂–∏—Ç postUrl: ${updatedStatus.postUrl}`);
        } else if (updatedStatus.permalink) {
          log(`‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤—Å–µ –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–µ permalink: ${updatedStatus.permalink}`);
        } else {
          log('‚ö†Ô∏è –í –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Å—Ç–∞—Ç—É—Å–µ –Ω–µ—Ç –Ω–∏ postUrl, –Ω–∏ permalink');
        }
      } else {
        log('‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      }
    } else {
      log(`‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: ${responseData.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest();