// –¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
import imageSearchService from './server/services/image-search-service.js';

async function testImageSearch() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');
  
  const testCases = [
    {
      text: '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ –±—É–¥—É—â–µ–µ',
      keywords: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '–±—É–¥—É—â–µ–µ']
    },
    {
      text: '–µ–¥–∞ –∫—É–ª–∏–Ω–∞—Ä–∏—è —Ä–µ—Ü–µ–ø—Ç—ã',
      keywords: ['–µ–¥–∞', '–∫—É–ª–∏–Ω–∞—Ä–∏—è', '—Ä–µ—Ü–µ–ø—Ç—ã']
    },
    {
      text: '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø—Ä–∏—Ä–æ–¥–∞ –≥–æ—Ä—ã',
      keywords: ['–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ø—Ä–∏—Ä–æ–¥–∞', '–≥–æ—Ä—ã']
    }
  ];

  for (const testCase of testCases) {
    try {
      console.log(`üîé –ü–æ–∏—Å–∫ –¥–ª—è: "${testCase.text}"`);
      console.log(`üè∑Ô∏è –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${JSON.stringify(testCase.keywords)}`);
      
      const result = await imageSearchService.findAndPrepareImage(testCase.text, testCase.keywords);
      
      console.log(`‚úÖ –£—Å–ø–µ—Ö: ${result.success}`);
      console.log(`üìè –†–∞–∑–º–µ—Ä: ${result.size} –±–∞–π—Ç`);
      console.log(`üåê –ò—Å—Ç–æ—á–Ω–∏–∫: ${result.source || 'fallback'}`);
      console.log(`üîó URL: ${result.originalUrl || '–Ω–µ—Ç URL'}`);
      console.log('---\n');
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}\n`);
    }
  }
}

testImageSearch();