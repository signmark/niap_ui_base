/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å pending —Å—Ç–∞—Ç—É—Å–æ–º
 */

import axios from 'axios';

async function testPendingStatus() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å pending —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...');
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        const testContentId = '3304dbb2-0174-401a-999c-54976b34a865'; // –ò–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        const testPlatforms = {
            vk: { content: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è VK" },
            facebook: { content: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è Facebook" },
            instagram: { content: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è Instagram" },
            telegram: { content: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è Telegram" },
            youtube: { content: "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è YouTube" }
        };

        console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${testContentId}`);
        console.log(`üì± –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${Object.keys(testPlatforms).join(', ')}`);

        // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω (–Ω—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        const token = process.env.DIRECTUS_TOKEN || process.env.DIRECTUS_ADMIN_TOKEN;
        if (!token) {
            throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é
        const response = await axios.post(`http://localhost:5000/api/content/${testContentId}/adapt`, {
            socialPlatforms: testPlatforms
        }, {
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç—Ñ–æ—Ä–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        
        const contentResponse = await axios.get(`http://localhost:5000/api/campaign-content/${testContentId}`, {
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        const content = contentResponse.data.data;
        const socialPlatforms = content.social_platforms || {};

        console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
        console.log('=' * 50);
        
        let allPending = true;
        
        Object.keys(testPlatforms).forEach(platform => {
            const platformData = socialPlatforms[platform];
            const status = platformData?.status || '–ù–ï–¢ –î–ê–ù–ù–´–•';
            const hasPending = status === 'pending';
            
            console.log(`üì± ${platform.toUpperCase()}: ${status} ${hasPending ? '‚úÖ' : '‚ùå'}`);
            
            if (!hasPending) {
                allPending = false;
            }
        });

        console.log('=' * 50);
        
        if (allPending) {
            console.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏–º–µ—é—Ç pending —Å—Ç–∞—Ç—É—Å!');
        } else {
            console.log('‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏–º–µ—é—Ç pending —Å—Ç–∞—Ç—É—Å');
        }

        console.log('\nüìÑ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ social_platforms:');
        console.log(JSON.stringify(socialPlatforms, null, 2));

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
        
        if (error.response?.status === 404) {
            console.log('üí° –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        }
    }
}

testPendingStatus();