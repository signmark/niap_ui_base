/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ Telegram —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: —Ç–µ–∫—Å—Ç, HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —ç–º–æ–¥–∑–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * 
 * –ó–∞–ø—É—Å–∫: node telegram-complete-post-test.js
 */
require('dotenv').config();
const axios = require('axios');
const fs = require('fs');
const { processHtmlForTelegram } = require('./shared/telegram-html-processor');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∏–∑ .env
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
function log(message) {
  const timestamp = new Date().toLocaleTimeString('ru-RU');
  console.log(`[${timestamp}] ${message}`);
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å HTML-–ø–æ–¥–ø–∏—Å—å—é –≤ Telegram
 * @param {string} imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É
 * @param {string} caption HTML-—Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å < 1024 —Å–∏–º–≤–æ–ª–æ–≤)
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendImageWithHtmlCaption(imageUrl, caption) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    log('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram (TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID)');
    return { success: false, error: 'Missing Telegram settings' };
  }

  log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å HTML-–ø–æ–¥–ø–∏—Å—å—é (${caption.length} —Å–∏–º–≤–æ–ª–æ–≤) –≤ Telegram`);
  
  try {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ URL
    let imageData;
    let isLocalFile = false;
    
    if (imageUrl.startsWith('http')) {
      // –í–Ω–µ—à–Ω–∏–π URL - —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
      log(`–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å URL: ${imageUrl}`);
      const response = await axios.get(imageUrl, { responseType: 'arraybuffer' });
      imageData = Buffer.from(response.data, 'binary');
    } else {
      // –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª - —á–∏—Ç–∞–µ–º
      log(`–ß—Ç–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: ${imageUrl}`);
      isLocalFile = true;
      imageData = fs.readFileSync(imageUrl);
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const formData = new FormData();
    formData.append('chat_id', TELEGRAM_CHAT_ID);
    formData.append('parse_mode', 'HTML');
    formData.append('caption', caption);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
    const fileName = isLocalFile ? imageUrl.split('/').pop() : 'image.jpg';
    formData.append('photo', new Blob([imageData]), fileName);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram
    const apiUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendPhoto`;
    const response = await axios.post(apiUrl, formData, {
      headers: {
        ...formData.getHeaders(),
        'Content-Type': 'multipart/form-data',
      },
    });
    
    if (response.data && response.data.ok) {
      const messageId = response.data.result.message_id;
      log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, message_id: ${messageId}`);
      
      return {
        success: true,
        messageId,
        result: response.data.result
      };
    } else {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${JSON.stringify(response.data)}`);
      return {
        success: false,
        error: response.data?.description || 'Unknown error',
        data: response.data
      };
    }
  } catch (error) {
    log(`–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`);
    if (error.response) {
      log(`–°—Ç–∞—Ç—É—Å: ${error.response.status}, –¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(error.response.data)}`);
    }
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º HTML-—Ç–µ–∫—Å—Ç–æ–º –≤ Telegram
 * –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –±–æ–ª—å—à–µ MAX_CAPTION_LENGTH, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 * @param {string} imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendImageWithLongText(imageUrl, html) {
  const MAX_CAPTION_LENGTH = 1024; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–æ–¥–ø–∏—Å–∏ –≤ Telegram
  
  try {
    if (html.length <= MAX_CAPTION_LENGTH) {
      log(`–¢–µ–∫—Å—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (${html.length} <= ${MAX_CAPTION_LENGTH}), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º`);
      return await sendImageWithHtmlCaption(imageUrl, html);
    } else {
      log(`–¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ (${html.length} > ${MAX_CAPTION_LENGTH}), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª—å–Ω–æ`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
      const title = html.match(/<b>(.*?)<\/b>/i);
      const shortCaption = title ? title[0] : '';
      
      log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º: "${shortCaption}"`);
      const imageResult = await sendImageWithHtmlCaption(imageUrl, shortCaption);
      
      if (!imageResult.success) {
        return imageResult;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
      log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º`);
      const textResult = await sendHtmlMessage(html);
      
      return {
        success: true,
        imageMessageId: imageResult.messageId,
        textMessageId: textResult.messageId,
        result: [imageResult.result, textResult.result]
      };
    }
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º: ${error.message}`);
    return { success: false, error: error.message };
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendHtmlMessage(html) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    log('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram (TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID)');
    return { success: false, error: 'Missing Telegram settings' };
  }
  
  try {
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ HTML-—Ç–µ–≥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
    const processedHtml = processHtmlForTelegram(html, { debug: true });
    
    log(`–û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (${processedHtml.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
    log(`–ù–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞: ${processedHtml.substring(0, Math.min(50, processedHtml.length))}...`);
    
    const response = await axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      chat_id: TELEGRAM_CHAT_ID,
      text: processedHtml,
      parse_mode: 'HTML'
    });
    
    if (response.data && response.data.ok) {
      const messageId = response.data.result.message_id;
      log(`–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, message_id: ${messageId}`);
      
      return {
        success: true,
        messageId,
        result: response.data.result
      };
    } else {
      log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${JSON.stringify(response.data)}`);
      return {
        success: false,
        error: response.data?.description || 'Unknown error',
        data: response.data
      };
    }
  } catch (error) {
    log(`–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
    if (error.response) {
      log(`–°—Ç–∞—Ç—É—Å: ${error.response.status}, –¥–∞–Ω–Ω—ã–µ: ${JSON.stringify(error.response.data)}`);
    }
    
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
 */
async function testCompletePost() {
  log('–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ Telegram');
  
  // HTML-—Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
  const postHTML = `<b>–ü–µ—Ä–µ–∫—É—Å–∏—Ç—å</b>

–í —Ö–æ–¥–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∑–∞–≤—Ç—Ä–∞–∫ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º –ø—Ä–∏–µ–º–æ–º –ø–∏—â–∏, –∏ –µ–≥–æ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏, –º–µ—Ç–∞–±–æ–ª–∏–∑–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∞–ø–ø–µ—Ç–∏—Ç–∞. üòä –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–ª—å –ø–µ—Ä–µ–∫—É—Å–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –º–æ–≥—É—Ç –∫–∞–∫ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è üå±, —Ç–∞–∫ –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç—å –≤—Ä–µ–¥ —Ñ–∏–≥—É—Ä–µ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é. üçï

–ü–µ—Ä–µ–∫—É—Å—ã –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–∑–∫–∏—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π —É—Ä–æ–≤–Ω—è —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç —á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ –≥–æ–ª–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞—á–∞—Å—Ç—É—é –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏. üçë –°–ª–µ–¥—É–µ—Ç, –æ–¥–Ω–∞–∫–æ, –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–∫—É—Å—ã –æ–¥–∏–Ω–∞–∫–æ–≤–æ –ø–æ–ª–µ–∑–Ω—ã. ‚ö†Ô∏è –ö –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–º –ø–µ—Ä–µ–∫—É—Å–∞–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è —Å–ª–∞–¥–æ—Å—Ç–∏, –±—É–ª–æ—á–∫–∏, –ø–µ—á–µ–Ω—å–µ, —á–∏–ø—Å—ã –∏ –ø—Ä–æ—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ñ–∞—Å—Ç—Ñ—É–¥–∞. üçî –û–Ω–∏ –≤—ã–∑—ã–≤–∞—é—Ç –±—ã—Å—Ç—Ä–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–∏–ª–∏–≤ —ç–Ω–µ—Ä–≥–∏–∏, –Ω–æ —Å—Ç–æ–ª—å –∂–µ —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —É—Å—Ç–∞–ª–æ—Å—Ç–∏, —É—Å–∏–ª–µ–Ω–∏—é –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—é –∂–∏—Ä–æ–≤—ã—Ö –æ—Ç–ª–æ–∂–µ–Ω–∏–π. üò´

–ü–æ–ª–µ–∑–Ω—ã–º–∏ –ø–µ—Ä–µ–∫—É—Å–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —á—É–≤—Å—Ç–≤–æ —Å—ã—Ç–æ—Å—Ç–∏, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è. üçè`;

  // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  const imageUrl = './attached_assets/image_1740326731298.png';
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
  const result = await sendImageWithLongText(imageUrl, postHTML);
  
  if (result.success) {
    log('–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
  } else {
    log(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π: ${result.error}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testCompletePost();