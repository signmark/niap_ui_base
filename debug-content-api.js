#!/usr/bin/env node

/**
 * –û—Ç–ª–∞–¥–∫–∞ API –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –ø–æ—á–µ–º—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –≤–∏–¥–∏—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';

async function debugContentAPI() {
  try {
    const headers = {
      'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
      'Content-Type': 'application/json'
    };

    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ API –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    
    // –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –∫–∞–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (limit=-1)
    console.log('\nüì± –¢–ï–°–¢ 1: –ó–∞–ø—Ä–æ—Å –∫–∞–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (limit=-1)');
    const frontendResponse = await axios.get(`${API_BASE}/campaign-content`, {
      headers,
      params: {
        campaignId: CAMPAIGN_ID,
        limit: -1,
        page: 1
      }
    });
    
    console.log(`   –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${frontendResponse.data.data?.length || 0}`);
    console.log(`   –í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: ${frontendResponse.data.meta?.total || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    
    const frontendNplanner = frontendResponse.data.data?.filter(item => {
      return (item.title || '').toLowerCase().includes('nplanner') ||
             (item.content || '').toLowerCase().includes('nplanner');
    }) || [];
    
    console.log(`   Nplanner –ø–æ—Å—Ç–æ–≤: ${frontendNplanner.length}`);
    
    // –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ
    console.log('\nüìÖ –¢–ï–°–¢ 2: –ó–∞–ø—Ä–æ—Å —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è');
    const sortedResponse = await axios.get(`${API_BASE}/campaign-content`, {
      headers,
      params: {
        campaignId: CAMPAIGN_ID,
        limit: 50,
        page: 1,
        sort: '-created_at'
      }
    });
    
    const sortedNplanner = sortedResponse.data.data?.filter(item => {
      return (item.title || '').toLowerCase().includes('nplanner') ||
             (item.content || '').toLowerCase().includes('nplanner');
    }) || [];
    
    console.log(`   Nplanner –ø–æ—Å—Ç–æ–≤ –≤ –ø–µ—Ä–≤—ã—Ö 50: ${sortedNplanner.length}`);
    
    if (sortedNplanner.length > 0) {
      console.log('   –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø–æ—Å—Ç–∞:');
      sortedNplanner.slice(0, 3).forEach((post, i) => {
        const date = new Date(post.createdAt || post.created_at).toLocaleString('ru-RU');
        console.log(`      ${i + 1}. ${post.title} (${date})`);
      });
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –ø–æ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
    console.log('\nüéØ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ –ø–æ ID');
    const testId = '0a3ea329-579d-4047-9da5-0fbe1c44b681'; // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π
    
    try {
      const specificResponse = await axios.get(`${API_BASE}/campaign-content/${testId}`, { headers });
      if (specificResponse.data?.success) {
        console.log(`   ‚úÖ –ü–æ—Å—Ç –Ω–∞–π–¥–µ–Ω: ${specificResponse.data.data.title}`);
        console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${new Date(specificResponse.data.data.createdAt).toLocaleString('ru-RU')}`);
      }
    } catch (error) {
      console.log(`   ‚ùå –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${error.response?.status} ${error.response?.statusText}`);
    }
    
    // –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π
    console.log('\nüìä –¢–ï–°–¢ 4: –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π');
    console.log(`   –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≤–∏–¥–∏—Ç: ${frontendResponse.data.data?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    console.log(`   API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ–≥–æ: ${frontendResponse.data.meta?.total || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    console.log(`   Nplanner –≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ: ${frontendNplanner.length}`);
    console.log(`   Nplanner –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º: ${sortedNplanner.length}`);
    
    if (frontendNplanner.length < sortedNplanner.length) {
      console.log('\n‚ùó –ü–†–û–ë–õ–ï–ú–ê: –§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ–ª—É—á–∞–µ—Ç –Ω–µ–ø–æ–ª–Ω—É—é –≤—ã–±–æ—Ä–∫—É!');
      console.log('üîß –†–ï–®–ï–ù–ò–ï: –ù—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç –∏–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    } else {
      console.log('\n‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –ø–æ–ª—É—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –≤—ã–±–æ—Ä–∫—É');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error.response?.data || error.message);
  }
}

debugContentAPI();