/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ—Ç–≤–µ—Ç–∞ API, —á—Ç–æ–±—ã –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
 * 
 * –ó–∞–ø—É—Å–∫: node debug-api-response.js
 */

import axios from 'axios';
import fs from 'fs';
import 'dotenv/config';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_URL = 'http://localhost:5000';
const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
const DIRECTUS_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
const DIRECTUS_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD || '123456789';

// ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TEST_CONTENT_ID = '02bc0dc0-4a3d-4926-adbc-260f8ac2f3fd';

// –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
const directusApi = axios.create({
  baseURL: DIRECTUS_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

/**
 * –ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω
 * @returns {Promise<string|null>} –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
async function authenticate() {
  try {
    console.log(`üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${DIRECTUS_EMAIL}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ Directus
    const response = await directusApi.post('/auth/login', {
      email: DIRECTUS_EMAIL,
      password: DIRECTUS_PASSWORD
    });
    
    if (!response.data || !response.data.data || !response.data.data.access_token) {
      console.error('‚ùå –û—Ç–≤–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω:', response.data);
      return null;
    }
    
    const token = response.data.data.access_token;
    console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –¥–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${token.length}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    directusApi.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    
    return token;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {string} id ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * @returns {Promise<object|null>} –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
async function getContentFromApi(id) {
  try {
    console.log(`\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ API –ø–æ ID: ${id}`);
    const response = await api.get(`/api/campaign-content/${id}`);
    
    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞ API:');
    console.log(`  –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: ${typeof response.data}`);
    
    // –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –∫–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –∏—Ö —Ç–∏–ø—ã
    if (typeof response.data === 'object' && response.data !== null) {
      console.log('  –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:');
      Object.keys(response.data).forEach(key => {
        const value = response.data[key];
        console.log(`    - ${key}: ${typeof value} ${value === null ? '(null)' : ''}`);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (typeof value === 'object' && value !== null) {
          console.log(`      –°—Ç—Ä—É–∫—Ç—É—Ä–∞ ${key}:`);
          Object.keys(value).forEach(subKey => {
            console.log(`        - ${subKey}: ${typeof value[subKey]} ${value[subKey] === null ? '(null)' : ''}`);
          });
        }
      });
    }
    
    // –ò—â–µ–º –≤—Å–µ –ø–æ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞–º–∏
    console.log('\nüîé –ü–æ–∏—Å–∫ –ø–æ–ª–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º:');
    const fieldsToCheck = [
      'socialPlatforms', 'social_platforms', 'socialplatforms', 
      'SocialPlatforms', 'SOCIAL_PLATFORMS'
    ];
    
    fieldsToCheck.forEach(field => {
      const hasPlatforms = checkNestedProperty(response.data, field);
      console.log(`  - ${field}: ${hasPlatforms ? '–ù–∞–π–¥–µ–Ω–æ ‚úì' : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ ‚úó'}`);
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    console.log('\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ —Ñ–∞–π–ª...');
    const filename = `api-response-${new Date().toISOString().replace(/:/g, '-')}.json`;
    fs.writeFileSync(filename, JSON.stringify(response.data, null, 2));
    console.log(`  –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${filename}`);
    
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Directus
 * @param {string} id ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * @returns {Promise<object|null>} –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
async function getContentFromDirectus(id) {
  try {
    console.log(`\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Directus –ø–æ ID: ${id}`);
    const response = await directusApi.get(`/items/campaign_content/${id}`);
    
    console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞ Directus:');
    console.log(`  –¢–∏–ø –æ—Ç–≤–µ—Ç–∞: ${typeof response.data}`);
    
    // –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –∫–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è –∏ –∏—Ö —Ç–∏–ø—ã
    if (typeof response.data === 'object' && response.data !== null && response.data.data) {
      console.log('  –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:');
      Object.keys(response.data.data).forEach(key => {
        const value = response.data.data[key];
        console.log(`    - ${key}: ${typeof value} ${value === null ? '(null)' : ''}`);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–µ —Å–≤—è–∑–∞–Ω–æ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (key === 'social_platforms' && typeof value === 'object' && value !== null) {
          console.log(`      –°—Ç—Ä—É–∫—Ç—É—Ä–∞ social_platforms (Directus):`);
          Object.keys(value).forEach(platform => {
            console.log(`        - ${platform}: ${typeof value[platform]}`);
            if (typeof value[platform] === 'object') {
              Object.keys(value[platform]).forEach(prop => {
                console.log(`          - ${prop}: ${typeof value[platform][prop]} = ${value[platform][prop]}`);
              });
            }
          });
        }
      });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    console.log('\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ Directus –≤ —Ñ–∞–π–ª...');
    const filename = `directus-response-${new Date().toISOString().replace(/:/g, '-')}.json`;
    fs.writeFileSync(filename, JSON.stringify(response.data, null, 2));
    console.log(`  –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${filename}`);
    
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ Directus: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –æ–±—ä–µ–∫—Ç–µ
 * @param {object} obj –û–±—ä–µ–∫—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @param {string} propertyPath –ü—É—Ç—å –∫ —Å–≤–æ–π—Å—Ç–≤—É, –Ω–∞–ø—Ä–∏–º–µ—Ä 'a.b.c'
 * @returns {boolean} true, –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */
function checkNestedProperty(obj, propertyPath) {
  if (!obj || typeof obj !== 'object') {
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
  if (obj.hasOwnProperty(propertyPath)) {
    return true;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
  const parts = propertyPath.split('.');
  let current = obj;
  
  for (let i = 0; i < parts.length; i++) {
    if (!current || typeof current !== 'object') {
      return false;
    }
    
    if (!current.hasOwnProperty(parts[i])) {
      return false;
    }
    
    current = current[parts[i]];
  }
  
  return true;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('========================================');
  console.log('üß™ –û–¢–õ–ê–î–ö–ê –û–¢–í–ï–¢–ê API üß™');
  console.log('========================================');
  
  try {
    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const token = await authenticate();
    if (!token) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const apiContent = await getContentFromApi(TEST_CONTENT_ID);
    
    // 3. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Directus
    const directusContent = await getContentFromDirectus(TEST_CONTENT_ID);
    
    // 4. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ API –∏ Directus:');
    if (directusContent && directusContent.data && directusContent.data.social_platforms) {
      console.log('  ‚úì Directus —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ social_platforms');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º –≤ –æ—Ç–≤–µ—Ç–µ API
      let apiHasPlatforms = false;
      if (apiContent && apiContent.socialPlatforms) {
        console.log('  ‚úì API —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ socialPlatforms (camelCase)');
        apiHasPlatforms = true;
      } else if (apiContent && apiContent.social_platforms) {
        console.log('  ‚úì API —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ social_platforms (snake_case)');
        apiHasPlatforms = true;
      } else {
        console.log('  ‚úó API –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–∏ –≤ –æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ');
      }
      
      if (!apiHasPlatforms) {
        console.log('\n‚ùå –í–´–Ø–í–õ–ï–ù–ê –ü–†–û–ë–õ–ï–ú–ê: –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º –µ—Å—Ç—å –≤ Directus, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ—Ç–≤–µ—Ç–µ API');
        console.log('  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('  1. –û—à–∏–±–∫–∞ –≤ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏–º–µ–Ω –ø–æ–ª–µ–π –º–µ–∂–¥—É snake_case –∏ camelCase');
        console.log('  2. –î–∞–Ω–Ω—ã–µ –Ω–µ –≤–∫–ª—é—á–∞—é—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç API');
        console.log('  3. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π/–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π JSON');
      }
    } else {
      console.log('  ‚úó Directus –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö social_platforms');
    }
    
    console.log('\n========================================');
    console.log('‚úÖ –¢–ï–°–¢ –û–¢–õ–ê–î–ö–ò –ó–ê–í–ï–†–®–ï–ù');
    console.log('========================================');
    
  } catch (error) {
    console.error(`\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    if (error.stack) {
      console.error(error.stack);
    }
  }
}

main();