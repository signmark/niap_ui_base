/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML –¥–ª—è Telegram
 * –ó–∞–ø—É—Å–∫: node format-telegram-html-test.js
 */

import { formatHtmlForTelegram } from './server/utils/telegram-content-processor.js';

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testCases = [
  {
    name: '–ü—Ä–æ—Å—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
    html: '<p>–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç</p><p>–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ</p>',
    expected: '–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ'
  },
  {
    name: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞',
    html: '<p><strong>–ñ–∏—Ä–Ω—ã–π</strong> –∏ <em>–∫—É—Ä—Å–∏–≤–Ω—ã–π</em> —Ç–µ–∫—Å—Ç —Å <u>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º</u></p>',
    expected: '<b>–ñ–∏—Ä–Ω—ã–π</b> –∏ <i>–∫—É—Ä—Å–∏–≤–Ω—ã–π</i> —Ç–µ–∫—Å—Ç —Å <u>–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º</u>'
  },
  {
    name: '–ó–∞–≥–æ–ª–æ–≤–∫–∏',
    html: '<h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è</h1><h2>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è</h2>',
    expected: '<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è</b>\n\n<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è</b>'
  },
  {
    name: '–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫',
    html: '<ul><li>–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç</li><li>–í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç</li></ul>',
    expected: '‚Ä¢ –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç\n‚Ä¢ –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç'
  },
  {
    name: '–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫',
    html: '<ol><li>–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç</li><li>–í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç</li></ol>',
    expected: '1. –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç\n2. –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç'
  },
  {
    name: '–°—Å—ã–ª–∫–∏',
    html: '<p>–¢–µ–∫—Å—Ç —Å <a href="https://telegram.org">—Å—Å—ã–ª–∫–æ–π</a></p>',
    expected: '–¢–µ–∫—Å—Ç —Å <a href="https://telegram.org">—Å—Å—ã–ª–∫–æ–π</a>'
  },
  {
    name: 'C–ª–æ–∂–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
    html: `<h1>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏</h1>
<p>–ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <strong>–∂–∏—Ä–Ω—ã–º</strong> –∏ <em>–∫—É—Ä—Å–∏–≤–Ω—ã–º</em> —Ç–µ–∫—Å—Ç–æ–º.</p>
<p>–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å–æ–¥–µ—Ä–∂–∏—Ç <a href="https://example.com">—Å—Å—ã–ª–∫—É</a>.</p>
<h2>–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</h2>
<ul>
  <li>–ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 1 —Å <strong>–≤—ã–¥–µ–ª–µ–Ω–∏–µ–º</strong></li>
  <li>–ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 2 —Å <em>–∫—É—Ä—Å–∏–≤–æ–º</em></li>
</ul>
<p>–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º</u> —Ç–µ–∫—Å—Ç–æ–º.</p>`,
    expected: `<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏</b>

–ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <b>–∂–∏—Ä–Ω—ã–º</b> –∏ <i>–∫—É—Ä—Å–∏–≤–Ω—ã–º</i> —Ç–µ–∫—Å—Ç–æ–º.

–í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å–æ–¥–µ—Ä–∂–∏—Ç <a href="https://example.com">—Å—Å—ã–ª–∫—É</a>.

<b>–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</b>

‚Ä¢ –ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 1 —Å <b>–≤—ã–¥–µ–ª–µ–Ω–∏–µ–º</b>
‚Ä¢ –ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 2 —Å <i>–∫—É—Ä—Å–∏–≤–æ–º</i>

–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º</u> —Ç–µ–∫—Å—Ç–æ–º.`
  },
  {
    name: '–í–ª–æ–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
    html: '<p>–¢–µ–∫—Å—Ç —Å <strong>–∂–∏—Ä–Ω—ã–º <em>–∏ –∫—É—Ä—Å–∏–≤–Ω—ã–º</em></strong> —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º</p>',
    expected: '–¢–µ–∫—Å—Ç —Å <b>–∂–∏—Ä–Ω—ã–º <i>–∏ –∫—É—Ä—Å–∏–≤–Ω—ã–º</i></b> —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º'
  }
];

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
 */
function runTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HTML –¥–ª—è Telegram\n');
  
  let passedCount = 0;
  
  for (const test of testCases) {
    console.log(`üìù –¢–µ—Å—Ç: ${test.name}`);
    console.log(`–ò—Å—Ö–æ–¥–Ω—ã–π HTML:\n${test.html}`);
    
    const formatted = formatHtmlForTelegram(test.html);
    console.log(`\n–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML:\n${formatted}`);
    
    const passed = formatted === test.expected;
    if (passed) {
      console.log('‚úÖ –£–°–ü–ï–®–ù–û: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É\n');
      passedCount++;
    } else {
      console.log('‚ùå –û–®–ò–ë–ö–ê: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É');
      console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å:\n${test.expected}\n`);
    }
    
    console.log('-'.repeat(80) + '\n');
  }
  
  console.log(`üèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${passedCount} –∏–∑ ${testCases.length} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);
  console.log(`–£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${Math.round(passedCount / testCases.length * 100)}%`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests();