const axios = require('axios');

const BASE_URL = 'http://0.0.0.0:5000';
const N8N_URL = 'https://n8n.roboflow.space';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Instagram OAuth
const testData = {
  appId: '1234567890123456',
  appSecret: 'test_app_secret_12345',
  instagramId: '17841400000000000',
  redirectUri: 'https://worf.replit.dev/instagram-callback',
  webhookUrl: 'https://n8n.roboflow.space/webhook/instagram-auth',
  campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e' // Test campaign ID
};

// –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ OAuth –æ—Ç–≤–µ—Ç–∞ –æ—Ç Facebook
const mockOAuthData = {
  success: true,
  appId: testData.appId,
  longLivedToken: 'EAABwzLixnjYBO123456789...',
  expiresIn: 5183944,
  user: {
    id: '123456789',
    name: 'Test User',
    email: 'test@example.com'
  },
  pages: [
    {
      id: '987654321',
      name: 'Test Business Page',
      access_token: 'EAABwzLixnjYBO987654321...',
      instagram_business_account: {
        id: '17841400000000000',
        name: 'Test Instagram Account',
        username: 'test_instagram',
        profile_picture_url: 'https://example.com/profile.jpg'
      }
    }
  ],
  instagramAccounts: [
    {
      instagramId: '17841400000000000',
      username: 'test_instagram',
      name: 'Test Instagram Account',
      pageId: '987654321',
      pageName: 'Test Business Page',
      pageAccessToken: 'EAABwzLixnjYBO987654321...'
    }
  ],
  timestamp: new Date().toISOString()
};

async function testInstagramOAuthStart() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ Instagram OAuth flow...');
  
  try {
    const response = await axios.post(`${BASE_URL}/api/instagram/auth/start`, {
      appId: testData.appId,
      appSecret: testData.appSecret,
      redirectUri: testData.redirectUri,
      webhookUrl: testData.webhookUrl,
      instagramId: testData.instagramId,
      campaignId: testData.campaignId
    });

    console.log('‚úÖ OAuth start —É—Å–ø–µ—à–µ–Ω:', {
      authUrl: response.data.authUrl?.substring(0, 100) + '...',
      state: response.data.state
    });

    return response.data.state;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OAuth start:', error.response?.data || error.message);
    return null;
  }
}

async function testN8NWebhook() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º N8N webhook –æ–±—Ä–∞–±–æ—Ç–∫—É...');
  
  try {
    const response = await axios.post(`${N8N_URL}/webhook/instagram-auth`, mockOAuthData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 10000
    });

    console.log('‚úÖ N8N webhook —É—Å–ø–µ—à–µ–Ω:', {
      status: response.status,
      data: response.data
    });

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ N8N webhook:', {
      status: error.response?.status,
      data: error.response?.data,
      message: error.message
    });
    return false;
  }
}

async function testInstagramOAuthCallback(state) {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Instagram OAuth callback...');
  
  if (!state) {
    console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º callback —Ç–µ—Å—Ç - –Ω–µ—Ç state –æ—Ç OAuth start');
    return;
  }

  const mockCode = 'AQBvMz12345abcdef...';
  
  try {
    const response = await axios.get(`${BASE_URL}/api/instagram/auth/callback`, {
      params: {
        code: mockCode,
        state: state
      }
    });

    console.log('‚úÖ OAuth callback —É—Å–ø–µ—à–µ–Ω:', {
      success: response.data.success,
      message: response.data.message,
      accounts: response.data.data?.instagramAccounts?.length || 0
    });

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OAuth callback:', error.response?.data || error.message);
    return false;
  }
}

async function testOAuthStatusCheck(state) {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ OAuth —Å–µ—Å—Å–∏–∏...');
  
  if (!state) {
    console.log('‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º status —Ç–µ—Å—Ç - –Ω–µ—Ç state');
    return;
  }

  try {
    const response = await axios.get(`${BASE_URL}/api/instagram/auth/status/${state}`);

    console.log('‚úÖ OAuth status —É—Å–ø–µ—à–µ–Ω:', response.data);
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ OAuth status:', error.response?.data || error.message);
    return false;
  }
}

async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Instagram OAuth —Å–∏—Å—Ç–µ–º—ã...');
  console.log('=' .repeat(50));

  // –¢–µ—Å—Ç 1: –ó–∞–ø—É—Å–∫ OAuth flow
  const state = await testInstagramOAuthStart();
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Å—Å–∏–∏
  if (state) {
    await testOAuthStatusCheck(state);
  }

  // –¢–µ—Å—Ç 3: N8N webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞
  await testN8NWebhook();

  // –¢–µ—Å—Ç 4: OAuth callback (—Å mock –¥–∞–Ω–Ω—ã–º–∏)
  // await testInstagramOAuthCallback(state);

  console.log('\n' + '=' .repeat(50));
  console.log('üèÅ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  console.log('1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ workflow: scripts/instagram/instagram-oauth-workflow.json');
  console.log('2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Directus credentials –≤ N8N');
  console.log('3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É instagram_oauth_tokens –≤ Directus');
  console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–ª–Ω—ã–π OAuth flow —á–µ—Ä–µ–∑ UI');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runAllTests().catch(console.error);