/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–∞—Ç—á–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Directus —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
 */
require('dotenv').config();
const axios = require('axios');
const path = require('path');
const fs = require('fs');
const os = require('os');
const FormData = require('form-data');

// –ü—É—Ç—å –∫ Directus
const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
const DIRECTUS_EMAIL = process.env.DIRECTUS_EMAIL;
const DIRECTUS_PASSWORD = process.env.DIRECTUS_PASSWORD;

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è Telegram
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Directus –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const IMAGE_URL = 'https://directus.nplanner.ru/assets/3b34be64-9579-4b1d-b4e2-98d3de5c2a14';

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus
async function getDirectusToken() {
  console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus...');
  
  try {
    const response = await axios.post(`${DIRECTUS_URL}/auth/login`, {
      email: DIRECTUS_EMAIL,
      password: DIRECTUS_PASSWORD
    });
    
    if (response.data && response.data.data && response.data.data.access_token) {
      console.log('‚úÖ –¢–æ–∫–µ–Ω Directus —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω');
      return response.data.data.access_token;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ Directus: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞');
      console.log(response.data);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Directus:', error.message);
    if (error.response) {
      console.error('–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
    return null;
  }
}

// –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
async function downloadImage(imageUrl, token) {
  console.log(`üîÑ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imageUrl.substring(0, 50)}...`);
  
  try {
    const headers = {
      'Accept': 'image/*',
      'User-Agent': 'Mozilla/5.0 SMM Planner Bot',
      'Cache-Control': 'no-cache'
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (token) {
      headers['Authorization'] = `Bearer ${token}`;
    }
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    const response = await axios.get(imageUrl, {
      responseType: 'arraybuffer',
      timeout: 30000,
      headers: headers
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ
    if (!response.data || response.data.length === 0) {
      throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
    }
    
    const contentType = response.headers['content-type'] || 'image/jpeg';
    console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${response.data.length} –±–∞–π—Ç, —Ç–∏–ø: ${contentType}`);
    
    return {
      buffer: Buffer.from(response.data),
      contentType: contentType
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
    if (error.response) {
      console.error('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', error.response.status);
    }
    throw error;
  }
}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram
async function sendImageToTelegram(imageBuffer, contentType, caption) {
  console.log('üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram...');
  
  if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID');
    return null;
  }
  
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
  const tempDir = path.join(os.tmpdir(), 'telegram_test');
  if (!fs.existsSync(tempDir)) {
    fs.mkdirSync(tempDir, { recursive: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  const timestamp = Date.now();
  const fileExtension = contentType.includes('png') ? 'png' : 'jpg';
  const tempFilePath = path.join(tempDir, `test_${timestamp}.${fileExtension}`);
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—É—Ñ–µ—Ä –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(tempFilePath, imageBuffer);
    console.log(`üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${tempFilePath} (${fs.statSync(tempFilePath).size} –±–∞–π—Ç)`);
    
    // –°–æ–∑–¥–∞–µ–º FormData
    const formData = new FormData();
    formData.append('chat_id', TELEGRAM_CHAT_ID);
    
    if (caption) {
      formData.append('caption', caption);
      formData.append('parse_mode', 'HTML');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    const fileStream = fs.createReadStream(tempFilePath);
    formData.append('photo', fileStream, { 
      filename: `image_${timestamp}.${fileExtension}`,
      contentType: contentType
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram...');
    const baseUrl = 'https://api.telegram.org/bot';
    const response = await axios.post(`${baseUrl}${TELEGRAM_TOKEN}/sendPhoto`, formData, {
      headers: {
        ...formData.getHeaders(),
        'Accept': 'application/json'
      },
      maxContentLength: Infinity,
      maxBodyLength: Infinity
    });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫
    fileStream.destroy();
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.unlinkSync(tempFilePath);
    console.log('üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (response.data && response.data.ok) {
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: message_id=${response.data.result.message_id}`);
      return response.data;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', response.data);
      return null;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error.message);
    
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    if (fs.existsSync(tempFilePath)) {
      fs.unlinkSync(tempFilePath);
      console.log('üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏');
    }
    
    if (error.response) {
      console.error('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', error.response.status);
      console.error('–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', error.response.data);
    }
    
    return null;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
async function runTest() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Directus —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
  
  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus
    const directusToken = await getDirectusToken();
    
    if (!directusToken) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω Directus, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
    
    // –®–∞–≥ 2: –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
    const { buffer, contentType } = await downloadImage(IMAGE_URL, directusToken);
    
    // –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram
    const result = await sendImageToTelegram(buffer, contentType, '–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å <b>–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π</b> Directus üöÄ');
    
    if (result) {
      console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    } else {
      console.error('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest();