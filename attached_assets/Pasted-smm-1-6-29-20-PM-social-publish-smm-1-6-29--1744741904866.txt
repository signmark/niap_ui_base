smm-1  | 6:29:20 PM [social-publish] Получены настройки социальных сетей из кампании
smm-1  | 6:29:20 PM [social-publish] Публикация контента в telegram
smm-1  | 6:29:20 PM [social-publishing] Публикация контента "Как автоматизировать составление рационов?" в telegram
smm-1  | 6:29:20 PM [social-publishing] Отключен флаг forceImageTextSeparation для Telegram публикации. Длина текста: 294 символов
smm-1  | 6:29:20 PM [telegram-debug] publishToTelegram вызван для контента: 06cd2327-66b7-4113-b53b-e4f37b20f787, title: "Как автоматизировать составление рационов?"
smm-1  | Ошибка записи логов: ReferenceError: require is not defined
smm-1  | 6:29:20 PM [telegram-debug] Telegram настройки: {"hasSettings":true,"hasToken":true,"hasChatId":true,"token":"752910...","chatId":"-1002302366310","campaignId":"46868c44-c6a4-4bed-accf-9ad07bba790e"}
smm-1  | Ошибка записи логов: ReferenceError: require is not defined
smm-1  | 6:29:20 PM [social-publishing] publishToTelegram вызван для контента ID: 06cd2327-66b7-4113-b53b-e4f37b20f787, Title: "Как автоматизировать составление рационов?"
smm-1  | 6:29:20 PM [social-publishing] Параметры Telegram: {"settingsProvided":true,"tokenProvided":true,"chatIdProvided":true,"tokenLength":46,"chatIdValue":"-1002302366310"}
smm-1  | 6:29:20 PM [social-publishing] Используем токен Telegram: 752910... и ID чата: -1002302366310
smm-1  | 6:29:20 PM [social-publishing] Публикация в Telegram. Контент: 06cd2327-66b7-4113-b53b-e4f37b20f787, тип: video-text
smm-1  | 6:29:20 PM [social-publishing] Обработка дополнительных изображений для Telegram. Тип: object, значение: []...
smm-1  | 6:29:20 PM [social-publishing] Telegram: Найдено 0 корректных дополнительных изображений
smm-1  | 6:29:20 PM [social-publishing] Начинаем загрузку изображений на Imgur для контента: 06cd2327-66b7-4113-b53b-e4f37b20f787
smm-1  | 6:29:20 PM [social-publishing] Обработка ID чата для Telegram: "-1002302366310"
smm-1  | 6:29:20 PM [social-publishing] Проверка чата через API Telegram: -1002302366310
smm-1  | 6:29:20 PM [social-publishing] Чат найден через API: {"id":-1002302366310,"title":"Подсознание наизнанку","username":"ya_delayu_moschno","type":"channel","active_usernames":["ya_delayu_moschno"],"invite_link":"https://t.me/+d6nOPp7tWkwzODI6","can_send_gift":true,"has_visible_history":true,"can_send_paid_media":true,"accepted_gift_types":{"unlimited_gifts":true,"limited_gifts":true,"unique_gifts":true,"premium_subscription":false},"photo":{"small_file_id":"AQADAgADIO0xG0EFuUgACAIAA5qdH6IW____cZSCZmeDSMA2BA","small_file_unique_id":"AQADIO0xG0EFuUgAAQ","big_file_id":"AQADAgADIO0xG0EFuUgACAMAA5qdH6IW____cZSCZmeDSMA2BA","big_file_unique_id":"AQADIO0xG0EFuUgB"},"available_reactions":[],"max_reaction_count":11,"accent_color_id":6}
smm-1  | 6:29:20 PM [social-publishing] Используем username из API: @ya_delayu_moschno
smm-1  | 6:29:20 PM [social-publishing] Используем ID чата для Telegram: @ya_delayu_moschno
smm-1  | 6:29:20 PM [social-publishing] Обработка HTML для Telegram: исходный текст 252 символов, обработанный 240 символов
smm-1  | 6:29:20 PM [social-publishing] Первые 100 символов обработанного текста: Узнайте, как НИАП помогает специалистам по питанию экономить до 80% времени при создании индивидуаль
smm-1  | 6:29:20 PM [social-publishing] Telegram: наличие видео: true, изображений: false, принудительное разделение: false
smm-1  | 6:29:20 PM [social-publishing] Telegram: публикация с видео. URL видео: https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/5bb96d71-9a3f-401c-99f2-0787a615a034.mp4
smm-1  | 6:29:20 PM [social-publishing] Подготовлена подпись для видео, длина: 291 символов
smm-1  | 6:29:20 PM [social-publishing] Отправка видео в Telegram: https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/5bb96d71-9a3f-401c-99f2-0787a...
smm-1  | 6:29:21 PM [telegram-debug] Ответ от Telegram API (sendVideo): код 400, data: {"ok":false,"error_code":400,"description":"Bad Request: failed to get HTTP URL content"}
smm-1  | Ошибка записи логов: ReferenceError: require is not defined
smm-1  | 6:29:21 PM [social-publishing] Ошибка при отправке видео в Telegram: Bad Request: failed to get HTTP URL content
smm-1  | 6:29:21 PM [social-publishing] Ошибка при отправке видео в Telegram: Bad Request: failed to get HTTP URL content
smm-1  | 6:29:21 PM [social-publishing] Попытка отправки текста после неудачной отправки видео
smm-1  | 6:29:21 PM [social-publishing] Отправка текстового сообщения в Telegram, длина: 291 символов
smm-1  | 6:29:21 PM [social-publishing] Форматирование chat ID: исходный "@ya_delayu_moschno" -> форматированный "@ya_delayu_moschno"
smm-1  | 6:29:21 PM [social-publishing] Подготовка текста для Telegram, исходная длина: 291 символов
smm-1  | 6:29:21 PM [social-publishing] Внимание: количество открывающих (1) и закрывающих (0) HTML-тегов не совпадает. Это может вызвать ошибку при отправке в Telegram.
smm-1  | 6:29:21 PM [social-publishing] Форматирование текста для Telegram: было 291 символов, стало 287
smm-1  | 6:29:21 PM [social-publishing] Отправка текстового сообщения в Telegram, длина: 287 символов, первые 100 символов: "<b>Как автоматизировать составление рационов?
smm-1  |
smm-1  | Узнайте, как НИАП помогает специалистам по питанию эк..."
smm-1  | 6:29:21 PM [social-publishing] Ответ от Telegram API: {"ok":false,"error_code":400,"description":"Bad Request: can't parse entities: Can't find end tag corresponding to start tag \"b\""}
smm-1  | 6:29:21 PM [social-publishing] Ошибка при отправке HTML-форматированного текста: код 400, Bad Request: can't parse entities: Can't find end tag corresponding to start tag "b"
smm-1  | 6:29:21 PM [social-publishing] Отправка обычного текста в Telegram (без HTML), длина: 284 символов
smm-1  | 6:29:21 PM [social-publishing] Успешная отправка обычного текста: message_id 1379
smm-1  | 6:29:21 PM [social-publishing] Текст успешно отправлен в Telegram: {"success":true,"data":{"ok":true,"result":{"message_id":1379,"sender_chat":{"id":-1002302366310,"title":"Подсознание наизнанку","username":"ya_delayu_moschno","type":"channel"},"chat":{"id":-1002302366310,"title":"Подсознание наизнанку","username":"ya_delayu_moschno","type":"channel"},"date":1744741761,"text":"Как автоматизировать составление рационов?\n\nУзнайте, как НИАП помогает специалистам по питанию экономить до 80% времени при создании индивидуальных рационов. Наш сервис автоматически рассчитывает нутриенты и формирует сбалансированное меню с учетом 85 факторов.\nПопробуйте бесплатно!"}}}
smm-1  | 6:29:21 PM [social-publishing] Получен message_id из textResponse для обычного сообщения: 1379
smm-1  | 6:29:21 PM [social-publishing] Форматирование Telegram URL: полный числовой ID -1002302366310 преобразован в https://t.me/c/2302366310
smm-1  | 6:29:21 PM [social-publishing] Сформирован URL с обязательным message ID: https://t.me/c/2302366310/1379
smm-1  | 6:29:21 PM [social-publish] Результат публикации в telegram: published
smm-1  | 6:29:22 PM [express] POST /api/content/06cd2327-66b7-4113-b53b-e4f37b20f787/publish-social 200 in 14…
smm-1  | Fetching content for campaign ID: 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Found 100 content items for campaign 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Sample keywords being sent to client: array length: 3 ["пп рецепты","здоровое питание","вкусно и полезно"]
smm-1  | 6:29:22 PM [express] GET /api/campaign-content 200 in 58ms :: {"data":[{"id":"59eb189a-584d-46b8-840…
smm-1  | Fetching content for campaign ID: 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Found 100 content items for campaign 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Sample keywords being sent to client: array length: 3 ["пп рецепты","здоровое питание","вкусно и полезно"]
smm-1  | 6:29:23 PM [express] GET /api/campaign-content 304 in 60ms :: {"data":[{"id":"59eb189a-584d-46b8-840…
smm-1  | Fetching keywords for campaign: 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Directus keywords API response: {
smm-1  |   status: 200,
smm-1  |   dataLength: 33,
smm-1  |   firstKeyword: {
smm-1  |     id: '19f4317a-90e7-4852-b374-1ba5c88398d4',
smm-1  |     keyword: 'вайб',
smm-1  |     trend_score: 62837,
smm-1  |     mentions_count: 100,
smm-1  |     campaign_id: '46868c44-c6a4-4bed-accf-9ad07bba790e',
smm-1  |     last_checked: '2025-04-01T08:11:09.831Z',
smm-1  |     date_created: '2025-03-31T13:53:44.984Z'
smm-1  |   }
smm-1  | }
smm-1  | 6:29:24 PM [express] GET /api/keywords 304 in 31ms :: {"data":[{"id":"19f4317a-90e7-4852-b374-1ba5c8…
smm-1  | 6:29:34 PM [scheduler] Проверка запланированных публикаций
smm-1  | 6:29:34 PM [scheduler] Попытка авторизации администратора с учетными данными из env
smm-1  | 6:29:34 PM [scheduler] Авторизация администратора успешна через прямой API запрос
smm-1  | 6:29:34 PM [directus] Токен авторизации для пользователя 53921f16-f51d-4591-80b9-8caa4fde4d13 сохранен в кэше
smm-1  | 6:29:34 PM [directus-auth] Attempting to log in user: lbrspb@gmail.com
smm-1  | 6:29:34 PM [directus-crud] Попытка авторизации пользователя lbrspb@gmail.com
smm-1  | 6:29:34 PM [scheduler] Прямой запрос axios к https://directus.nplanner.ru/items/campaign_content с фильтром по статусу scheduled
smm-1  | 6:29:35 PM [scheduler] Получено 0 запланированных публикаций через API
smm-1  | 6:29:35 PM [scheduler] Запланированные публикации не найдены
smm-1  | 6:29:35 PM [directus-crud] Пользователь lbrspb@gmail.com успешно авторизован
smm-1  | 6:29:35 PM [directus-crud] Выполнение операции read для коллекции users/me
smm-1  | 6:29:35 PM [directus-crud] Операция read для коллекции users/me выполнена успешно
smm-1  | 6:29:35 PM [directus] Токен авторизации для пользователя 53921f16-f51d-4591-80b9-8caa4fde4d13 сохранен в кэше
smm-1  | 6:29:35 PM [directus-auth] User lbrspb@gmail.com (53921f16-f51d-4591-80b9-8caa4fde4d13) successfully logged in
smm-1  | 6:29:35 PM [scheduler] Сессия администратора добавлена в DirectusAuthManager
smm-1  | Fetching content for campaign ID: 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Fetching keywords for campaign: 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Directus keywords API response: {
smm-1  |   status: 200,
smm-1  |   dataLength: 33,
smm-1  |   firstKeyword: {
smm-1  |     id: '19f4317a-90e7-4852-b374-1ba5c88398d4',
smm-1  |     keyword: 'вайб',
smm-1  |     trend_score: 62837,
smm-1  |     mentions_count: 100,
smm-1  |     campaign_id: '46868c44-c6a4-4bed-accf-9ad07bba790e',
smm-1  |     last_checked: '2025-04-01T08:11:09.831Z',
smm-1  |     date_created: '2025-03-31T13:53:44.984Z'
smm-1  |   }
smm-1  | }
smm-1  | 6:29:35 PM [express] GET /api/keywords 304 in 29ms :: {"data":[{"id":"19f4317a-90e7-4852-b374-1ba5c8…
smm-1  | Found 100 content items for campaign 46868c44-c6a4-4bed-accf-9ad07bba790e
smm-1  | Sample keywords being sent to client: array length: 3 ["пп рецепты","здоровое питание","вкусно и полезно"]
smm-1  | 6:29:35 PM [express] GET /api/campaign-content 304 in 95ms :: {"data":[{"id":"59eb189a-584d-46b8-840…
smm-1  | 6:30:34 PM [scheduler] Проверка запланированных публикаций
smm-1  | 6:30:34 PM [scheduler] Попытка авторизации администратора с учетными данными из env
smm-1  | 6:30:34 PM [scheduler] Авторизация администратора успешна через прямой API запрос
smm-1  | 6:30:34 PM [directus] Токен авторизации для пользователя 53921f16-f51d-4591-80b9-8caa4fde4d13 сохранен в кэше
smm-1  | 6:30:34 PM [directus-auth] Attempting to log in user: lbrspb@gmail.com
smm-1  | 6:30:34 PM [directus-crud] Попытка авторизации пользователя lbrspb@gmail.com
smm-1  | 6:30:34 PM [scheduler] Прямой запрос axios к https://directus.nplanner.ru/items/campaign_content с фильтром по статусу scheduled
smm-1  | 6:30:34 PM [scheduler] Получено 0 запланированных публикаций через API
smm-1  | 6:30:34 PM [scheduler] Запланированные публикации не найдены
smm-1  | 6:30:35 PM [directus-crud] Пользователь lbrspb@gmail.com успешно авторизован
smm-1  | 6:30:35 PM [directus-crud] Выполнение операции read для коллекции users/me
smm-1  | 6:30:35 PM [directus-crud] Операция read для коллекции users/me выполнена успешно
smm-1  | 6:30:35 PM [directus] Токен авторизации для пользователя 53921f16-f51d-4591-80b9-8caa4fde4d13 сохранен в кэше
smm-1  | 6:30:35 PM [directus-auth] User lbrspb@gmail.com (53921f16-f51d-4591-80b9-8caa4fde4d13) successfully logged in
smm-1  | 6:30:35 PM [scheduler] Сессия администратора добавлена в DirectusAuthManager
smm-1  | 6:31:26 PM [express] POST /api/auth/refresh 200 in 24ms
smm-1  | 6:31:26 PM [express] GET /api/auth/me 200 in 21ms
smm-1  | Fetching content for campaign ID: 7aba8a40-d4d8-48b8-a992-f1b5b0627a63
smm-1  | Directus API Error: {
smm-1  |   status: 403,
smm-1  |   data: { errors: [ [Object] ] },
smm-1  |   config: { url: '/users/me', method: 'get', params: undefined }
smm-1  | }
smm-1  | Auth error: AxiosError: Request failed with status code 403
smm-1  |     at settle (file:///app/node_modules/axios/lib/core/settle.js:19:12)
smm-1  |     at IncomingMessage.handleStreamEnd (file:///app/node_modules/axios/lib/adapters/http.js:599:11)
smm-1  |     at IncomingMessage.emit (node:events:529:35)
smm-1  |     at endReadableNT (node:internal/streams/readable:1400:12)
smm-1  |     at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
smm-1  |     at Axios.request (file:///app/node_modules/axios/lib/core/Axios.js:45:41)
smm-1  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
smm-1  |     at async authenticateUser (file:///app/server/routes.ts:39:2567) {
smm-1  |   code: 'ERR_BAD_REQUEST',
smm-1  |   config: {
smm-1  |     transitional: {
smm-1  |       silentJSONParsing: true,
smm-1  |       forcedJSONParsing: true,
smm-1  |       clarifyTimeoutError: false
smm-1  |     },
smm-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
smm-1  |     transformRequest: [ [Function: transformRequest] ],
smm-1  |     transformResponse: [ [Function: transformResponse] ],
smm-1  |     timeout: 0,
smm-1  |     xsrfCookieName: 'XSRF-TOKEN',
smm-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
smm-1  |     maxContentLength: -1,
smm-1  |     maxBodyLength: -1,
smm-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
smm-1  |     validateStatus: [Function: validateStatus],
smm-1  |     headers: Object [AxiosHeaders] {
smm-1  |       Accept: 'application/json, text/plain, */*',
smm-1  |       'Content-Type': 'application/json',
smm-1  |       Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M',
smm-1  |       'User-Agent': 'axios/1.8.4',
smm-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
smm-1  |     },
smm-1  |     baseURL: 'https://directus.nplanner.ru',
smm-1  |     method: 'get',
smm-1  |     url: '/users/me',
smm-1  |     allowAbsoluteUrls: true,
smm-1  |     data: undefined
smm-1  |   },
smm-1  |   request: <ref *1> ClientRequest {
smm-1  |     _events: [Object: null prototype] {
smm-1  |       abort: [Function (anonymous)],
smm-1  |       aborted: [Function (anonymous)],
smm-1  |       connect: [Function (anonymous)],
smm-1  |       error: [Function (anonymous)],
smm-1  |       socket: [Function (anonymous)],
smm-1  |       timeout: [Function (anonymous)],
smm-1  |       finish: [Function: requestOnFinish]
smm-1  |     },
smm-1  |     _eventsCount: 7,
smm-1  |     _maxListeners: undefined,
smm-1  |     outputData: [],
smm-1  |     outputSize: 0,
smm-1  |     writable: true,
smm-1  |     destroyed: false,
smm-1  |     _last: true,
smm-1  |     chunkedEncoding: false,
smm-1  |     shouldKeepAlive: false,
smm-1  |     maxRequestsOnConnectionReached: false,
smm-1  |     _defaultKeepAlive: true,
smm-1  |     useChunkedEncodingByDefault: false,
smm-1  |     sendDate: false,
smm-1  |     _removedConnection: false,
smm-1  |     _removedContLen: false,
smm-1  |     _removedTE: false,
smm-1  |     strictContentLength: false,
smm-1  |     _contentLength: 0,
smm-1  |     _hasBody: true,
smm-1  |     _trailer: '',
smm-1  |     finished: true,
smm-1  |     _headerSent: true,
smm-1  |     _closed: false,
smm-1  |     socket: TLSSocket {
smm-1  |       _tlsOptions: [Object],
smm-1  |       _secureEstablished: true,
smm-1  |       _securePending: false,
smm-1  |       _newSessionPending: false,
smm-1  |       _controlReleased: true,
smm-1  |       secureConnecting: false,
smm-1  |       _SNICallback: null,
smm-1  |       servername: 'directus.nplanner.ru',
smm-1  |       alpnProtocol: false,
smm-1  |       authorized: true,
smm-1  |       authorizationError: null,
smm-1  |       encrypted: true,
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 10,
smm-1  |       connecting: false,
smm-1  |       _hadError: false,
smm-1  |       _parent: null,
smm-1  |       _host: 'directus.nplanner.ru',
smm-1  |       _closeAfterHandlingError: false,
smm-1  |       _readableState: [ReadableState],
smm-1  |       _maxListeners: undefined,
smm-1  |       _writableState: [WritableState],
smm-1  |       allowHalfOpen: false,
smm-1  |       _sockname: null,
smm-1  |       _pendingData: null,
smm-1  |       _pendingEncoding: '',
smm-1  |       server: undefined,
smm-1  |       _server: null,
smm-1  |       ssl: [TLSWrap],
smm-1  |       _requestCert: true,
smm-1  |       _rejectUnauthorized: true,
smm-1  |       parser: null,
smm-1  |       _httpMessage: [Circular *1],
smm-1  |       [Symbol(alpncallback)]: null,
smm-1  |       [Symbol(res)]: [TLSWrap],
smm-1  |       [Symbol(verified)]: true,
smm-1  |       [Symbol(pendingSession)]: null,
smm-1  |       [Symbol(async_id_symbol)]: 24630,
smm-1  |       [Symbol(kHandle)]: [TLSWrap],
smm-1  |       [Symbol(lastWriteQueueSize)]: 0,
smm-1  |       [Symbol(timeout)]: null,
smm-1  |       [Symbol(kBuffer)]: null,
smm-1  |       [Symbol(kBufferCb)]: null,
smm-1  |       [Symbol(kBufferGen)]: null,
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kSetNoDelay)]: false,
smm-1  |       [Symbol(kSetKeepAlive)]: true,
smm-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
smm-1  |       [Symbol(kBytesRead)]: 0,
smm-1  |       [Symbol(kBytesWritten)]: 0,
smm-1  |       [Symbol(connect-options)]: [Object]
smm-1  |     },
smm-1  |     _header: 'GET /users/me HTTP/1.1\r\n' +
smm-1  |       'Accept: application/json, text/plain, */*\r\n' +
smm-1  |       'Content-Type: application/json\r\n' +
smm-1  |       'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M\r\n' +
smm-1  |       'User-Agent: axios/1.8.4\r\n' +
smm-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
smm-1  |       'Host: directus.nplanner.ru\r\n' +
smm-1  |       'Connection: close\r\n' +
smm-1  |       '\r\n',
smm-1  |     _keepAliveTimeout: 0,
smm-1  |     _onPendingData: [Function: nop],
smm-1  |     agent: Agent {
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 2,
smm-1  |       _maxListeners: undefined,
smm-1  |       defaultPort: 443,
smm-1  |       protocol: 'https:',
smm-1  |       options: [Object: null prototype],
smm-1  |       requests: [Object: null prototype] {},
smm-1  |       sockets: [Object: null prototype],
smm-1  |       freeSockets: [Object: null prototype] {},
smm-1  |       keepAliveMsecs: 1000,
smm-1  |       keepAlive: false,
smm-1  |       maxSockets: Infinity,
smm-1  |       maxFreeSockets: 256,
smm-1  |       scheduling: 'lifo',
smm-1  |       maxTotalSockets: Infinity,
smm-1  |       totalSocketCount: 2,
smm-1  |       maxCachedSessions: 100,
smm-1  |       _sessionCache: [Object],
smm-1  |       [Symbol(kCapture)]: false
smm-1  |     },
smm-1  |     socketPath: undefined,
smm-1  |     method: 'GET',
smm-1  |     maxHeaderSize: undefined,
smm-1  |     insecureHTTPParser: undefined,
smm-1  |     joinDuplicateHeaders: undefined,
smm-1  |     path: '/users/me',
smm-1  |     _ended: true,
smm-1  |     res: IncomingMessage {
smm-1  |       _readableState: [ReadableState],
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 4,
smm-1  |       _maxListeners: undefined,
smm-1  |       socket: [TLSSocket],
smm-1  |       httpVersionMajor: 1,
smm-1  |       httpVersionMinor: 1,
smm-1  |       httpVersion: '1.1',
smm-1  |       complete: true,
smm-1  |       rawHeaders: [Array],
smm-1  |       rawTrailers: [],
smm-1  |       joinDuplicateHeaders: undefined,
smm-1  |       aborted: false,
smm-1  |       upgrade: false,
smm-1  |       url: '',
smm-1  |       method: null,
smm-1  |       statusCode: 403,
smm-1  |       statusMessage: 'Forbidden',
smm-1  |       client: [TLSSocket],
smm-1  |       _consuming: false,
smm-1  |       _dumped: false,
smm-1  |       req: [Circular *1],
smm-1  |       responseUrl: 'https://directus.nplanner.ru/users/me',
smm-1  |       redirects: [],
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kHeaders)]: [Object],
smm-1  |       [Symbol(kHeadersCount)]: 20,
smm-1  |       [Symbol(kTrailers)]: null,
smm-1  |       [Symbol(kTrailersCount)]: 0
smm-1  |     },
smm-1  |     aborted: false,
smm-1  |     timeoutCb: null,
smm-1  |     upgradeOrConnect: false,
smm-1  |     parser: null,
smm-1  |     maxHeadersCount: null,
smm-1  |     reusedSocket: false,
smm-1  |     host: 'directus.nplanner.ru',
smm-1  |     protocol: 'https:',
smm-1  |     _redirectable: Writable {
smm-1  |       _writableState: [WritableState],
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 3,
smm-1  |       _maxListeners: undefined,
smm-1  |       _options: [Object],
smm-1  |       _ended: true,
smm-1  |       _ending: true,
smm-1  |       _redirectCount: 0,
smm-1  |       _redirects: [],
smm-1  |       _requestBodyLength: 0,
smm-1  |       _requestBodyBuffers: [],
smm-1  |       _onNativeResponse: [Function (anonymous)],
smm-1  |       _currentRequest: [Circular *1],
smm-1  |       _currentUrl: 'https://directus.nplanner.ru/users/me',
smm-1  |       [Symbol(kCapture)]: false
smm-1  |     },
smm-1  |     [Symbol(kCapture)]: false,
smm-1  |     [Symbol(kBytesWritten)]: 0,
smm-1  |     [Symbol(kNeedDrain)]: false,
smm-1  |     [Symbol(corked)]: 0,
smm-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
smm-1  |       accept: [Array],
smm-1  |       'content-type': [Array],
smm-1  |       authorization: [Array],
smm-1  |       'user-agent': [Array],
smm-1  |       'accept-encoding': [Array],
smm-1  |       host: [Array]
smm-1  |     },
smm-1  |     [Symbol(errored)]: null,
smm-1  |     [Symbol(kHighWaterMark)]: 16384,
smm-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
smm-1  |     [Symbol(kUniqueHeaders)]: null
smm-1  |   },
smm-1  |   response: {
smm-1  |     status: 403,
smm-1  |     statusText: 'Forbidden',
smm-1  |     headers: Object [AxiosHeaders] {
smm-1  |       'access-control-allow-credentials': 'true',
smm-1  |       'access-control-expose-headers': 'Content-Range',
smm-1  |       'content-length': '79',
smm-1  |       'content-security-policy': "script-src 'self' 'unsafe-eval';worker-src 'self' blob:;child-src 'self' blob:;img-src 'self' data: blob: https://raw.githubusercontent.com https://avatars.githubusercontent.com;media-src 'self';connect-src 'self' https://* wss://*;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'",
smm-1  |       'content-type': 'application/json; charset=utf-8',
smm-1  |       date: 'Tue, 15 Apr 2025 18:31:26 GMT',
smm-1  |       etag: 'W/"4f-0LmwG39pbR0EZ0RxPEfEFFSA4Pc"',
smm-1  |       vary: 'Origin',
smm-1  |       'x-powered-by': 'Directus',
smm-1  |       connection: 'close'
smm-1  |     },
smm-1  |     config: {
smm-1  |       transitional: [Object],
smm-1  |       adapter: [Array],
smm-1  |       transformRequest: [Array],
smm-1  |       transformResponse: [Array],
smm-1  |       timeout: 0,
smm-1  |       xsrfCookieName: 'XSRF-TOKEN',
smm-1  |       xsrfHeaderName: 'X-XSRF-TOKEN',
smm-1  |       maxContentLength: -1,
smm-1  |       maxBodyLength: -1,
smm-1  |       env: [Object],
smm-1  |       validateStatus: [Function: validateStatus],
smm-1  |       headers: [Object [AxiosHeaders]],
smm-1  |       baseURL: 'https://directus.nplanner.ru',
smm-1  |       method: 'get',
smm-1  |       url: '/users/me',
smm-1  |       allowAbsoluteUrls: true,
smm-1  |       data: undefined
smm-1  |     },
smm-1  |     request: <ref *1> ClientRequest {
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 7,
smm-1  |       _maxListeners: undefined,
smm-1  |       outputData: [],
smm-1  |       outputSize: 0,
smm-1  |       writable: true,
smm-1  |       destroyed: false,
smm-1  |       _last: true,
smm-1  |       chunkedEncoding: false,
smm-1  |       shouldKeepAlive: false,
smm-1  |       maxRequestsOnConnectionReached: false,
smm-1  |       _defaultKeepAlive: true,
smm-1  |       useChunkedEncodingByDefault: false,
smm-1  |       sendDate: false,
smm-1  |       _removedConnection: false,
smm-1  |       _removedContLen: false,
smm-1  |       _removedTE: false,
smm-1  |       strictContentLength: false,
smm-1  |       _contentLength: 0,
smm-1  |       _hasBody: true,
smm-1  |       _trailer: '',
smm-1  |       finished: true,
smm-1  |       _headerSent: true,
smm-1  |       _closed: false,
smm-1  |       socket: [TLSSocket],
smm-1  |       _header: 'GET /users/me HTTP/1.1\r\n' +
smm-1  |         'Accept: application/json, text/plain, */*\r\n' +
smm-1  |         'Content-Type: application/json\r\n' +
smm-1  |         'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M\r\n' +
smm-1  |         'User-Agent: axios/1.8.4\r\n' +
smm-1  |         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
smm-1  |         'Host: directus.nplanner.ru\r\n' +
smm-1  |         'Connection: close\r\n' +
smm-1  |         '\r\n',
smm-1  |       _keepAliveTimeout: 0,
smm-1  |       _onPendingData: [Function: nop],
smm-1  |       agent: [Agent],
smm-1  |       socketPath: undefined,
smm-1  |       method: 'GET',
smm-1  |       maxHeaderSize: undefined,
smm-1  |       insecureHTTPParser: undefined,
smm-1  |       joinDuplicateHeaders: undefined,
smm-1  |       path: '/users/me',
smm-1  |       _ended: true,
smm-1  |       res: [IncomingMessage],
smm-1  |       aborted: false,
smm-1  |       timeoutCb: null,
smm-1  |       upgradeOrConnect: false,
smm-1  |       parser: null,
smm-1  |       maxHeadersCount: null,
smm-1  |       reusedSocket: false,
smm-1  |       host: 'directus.nplanner.ru',
smm-1  |       protocol: 'https:',
smm-1  |       _redirectable: [Writable],
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kBytesWritten)]: 0,
smm-1  |       [Symbol(kNeedDrain)]: false,
smm-1  |       [Symbol(corked)]: 0,
smm-1  |       [Symbol(kOutHeaders)]: [Object: null prototype],
smm-1  |       [Symbol(errored)]: null,
smm-1  |       [Symbol(kHighWaterMark)]: 16384,
smm-1  |       [Symbol(kRejectNonStandardBodyWrites)]: false,
smm-1  |       [Symbol(kUniqueHeaders)]: null
smm-1  |     },
smm-1  |     data: { errors: [Array] }
smm-1  |   },
smm-1  |   status: 403
smm-1  | }
smm-1  | 6:31:26 PM [express] GET /api/campaigns 401 in 52ms :: {"error":"Не авторизован: Ошибка проверки ток…
smm-1  | Directus API Error: {
smm-1  |   status: 403,
smm-1  |   data: { errors: [ [Object] ] },
smm-1  |   config: { url: '/users/me', method: 'get', params: undefined }
smm-1  | }
smm-1  | Error getting campaign content: AxiosError: Request failed with status code 403
smm-1  |     at settle (file:///app/node_modules/axios/lib/core/settle.js:19:12)
smm-1  |     at IncomingMessage.handleStreamEnd (file:///app/node_modules/axios/lib/adapters/http.js:599:11)
smm-1  |     at IncomingMessage.emit (node:events:529:35)
smm-1  |     at endReadableNT (node:internal/streams/readable:1400:12)
smm-1  |     at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
smm-1  |     at Axios.request (file:///app/node_modules/axios/lib/core/Axios.js:45:41)
smm-1  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
smm-1  |     at async file:///app/server/routes.ts:239:30450 {
smm-1  |   code: 'ERR_BAD_REQUEST',
smm-1  |   config: {
smm-1  |     transitional: {
smm-1  |       silentJSONParsing: true,
smm-1  |       forcedJSONParsing: true,
smm-1  |       clarifyTimeoutError: false
smm-1  |     },
smm-1  |     adapter: [ 'xhr', 'http', 'fetch' ],
smm-1  |     transformRequest: [ [Function: transformRequest] ],
smm-1  |     transformResponse: [ [Function: transformResponse] ],
smm-1  |     timeout: 0,
smm-1  |     xsrfCookieName: 'XSRF-TOKEN',
smm-1  |     xsrfHeaderName: 'X-XSRF-TOKEN',
smm-1  |     maxContentLength: -1,
smm-1  |     maxBodyLength: -1,
smm-1  |     env: { FormData: [Function [FormData]], Blob: [class Blob] },
smm-1  |     validateStatus: [Function: validateStatus],
smm-1  |     headers: Object [AxiosHeaders] {
smm-1  |       Accept: 'application/json, text/plain, */*',
smm-1  |       'Content-Type': 'application/json',
smm-1  |       Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M',
smm-1  |       'User-Agent': 'axios/1.8.4',
smm-1  |       'Accept-Encoding': 'gzip, compress, deflate, br'
smm-1  |     },
smm-1  |     baseURL: 'https://directus.nplanner.ru',
smm-1  |     method: 'get',
smm-1  |     url: '/users/me',
smm-1  |     allowAbsoluteUrls: true,
smm-1  |     data: undefined
smm-1  |   },
smm-1  |   request: <ref *1> ClientRequest {
smm-1  |     _events: [Object: null prototype] {
smm-1  |       abort: [Function (anonymous)],
smm-1  |       aborted: [Function (anonymous)],
smm-1  |       connect: [Function (anonymous)],
smm-1  |       error: [Function (anonymous)],
smm-1  |       socket: [Function (anonymous)],
smm-1  |       timeout: [Function (anonymous)],
smm-1  |       finish: [Function: requestOnFinish]
smm-1  |     },
smm-1  |     _eventsCount: 7,
smm-1  |     _maxListeners: undefined,
smm-1  |     outputData: [],
smm-1  |     outputSize: 0,
smm-1  |     writable: true,
smm-1  |     destroyed: false,
smm-1  |     _last: true,
smm-1  |     chunkedEncoding: false,
smm-1  |     shouldKeepAlive: false,
smm-1  |     maxRequestsOnConnectionReached: false,
smm-1  |     _defaultKeepAlive: true,
smm-1  |     useChunkedEncodingByDefault: false,
smm-1  |     sendDate: false,
smm-1  |     _removedConnection: false,
smm-1  |     _removedContLen: false,
smm-1  |     _removedTE: false,
smm-1  |     strictContentLength: false,
smm-1  |     _contentLength: 0,
smm-1  |     _hasBody: true,
smm-1  |     _trailer: '',
smm-1  |     finished: true,
smm-1  |     _headerSent: true,
smm-1  |     _closed: false,
smm-1  |     socket: TLSSocket {
smm-1  |       _tlsOptions: [Object],
smm-1  |       _secureEstablished: true,
smm-1  |       _securePending: false,
smm-1  |       _newSessionPending: false,
smm-1  |       _controlReleased: true,
smm-1  |       secureConnecting: false,
smm-1  |       _SNICallback: null,
smm-1  |       servername: 'directus.nplanner.ru',
smm-1  |       alpnProtocol: false,
smm-1  |       authorized: true,
smm-1  |       authorizationError: null,
smm-1  |       encrypted: true,
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 10,
smm-1  |       connecting: false,
smm-1  |       _hadError: false,
smm-1  |       _parent: null,
smm-1  |       _host: 'directus.nplanner.ru',
smm-1  |       _closeAfterHandlingError: false,
smm-1  |       _readableState: [ReadableState],
smm-1  |       _maxListeners: undefined,
smm-1  |       _writableState: [WritableState],
smm-1  |       allowHalfOpen: false,
smm-1  |       _sockname: null,
smm-1  |       _pendingData: null,
smm-1  |       _pendingEncoding: '',
smm-1  |       server: undefined,
smm-1  |       _server: null,
smm-1  |       ssl: [TLSWrap],
smm-1  |       _requestCert: true,
smm-1  |       _rejectUnauthorized: true,
smm-1  |       parser: null,
smm-1  |       _httpMessage: [Circular *1],
smm-1  |       [Symbol(alpncallback)]: null,
smm-1  |       [Symbol(res)]: [TLSWrap],
smm-1  |       [Symbol(verified)]: true,
smm-1  |       [Symbol(pendingSession)]: null,
smm-1  |       [Symbol(async_id_symbol)]: 24639,
smm-1  |       [Symbol(kHandle)]: [TLSWrap],
smm-1  |       [Symbol(lastWriteQueueSize)]: 0,
smm-1  |       [Symbol(timeout)]: null,
smm-1  |       [Symbol(kBuffer)]: null,
smm-1  |       [Symbol(kBufferCb)]: null,
smm-1  |       [Symbol(kBufferGen)]: null,
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kSetNoDelay)]: false,
smm-1  |       [Symbol(kSetKeepAlive)]: true,
smm-1  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
smm-1  |       [Symbol(kBytesRead)]: 0,
smm-1  |       [Symbol(kBytesWritten)]: 0,
smm-1  |       [Symbol(connect-options)]: [Object]
smm-1  |     },
smm-1  |     _header: 'GET /users/me HTTP/1.1\r\n' +
smm-1  |       'Accept: application/json, text/plain, */*\r\n' +
smm-1  |       'Content-Type: application/json\r\n' +
smm-1  |       'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M\r\n' +
smm-1  |       'User-Agent: axios/1.8.4\r\n' +
smm-1  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
smm-1  |       'Host: directus.nplanner.ru\r\n' +
smm-1  |       'Connection: close\r\n' +
smm-1  |       '\r\n',
smm-1  |     _keepAliveTimeout: 0,
smm-1  |     _onPendingData: [Function: nop],
smm-1  |     agent: Agent {
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 2,
smm-1  |       _maxListeners: undefined,
smm-1  |       defaultPort: 443,
smm-1  |       protocol: 'https:',
smm-1  |       options: [Object: null prototype],
smm-1  |       requests: [Object: null prototype] {},
smm-1  |       sockets: [Object: null prototype],
smm-1  |       freeSockets: [Object: null prototype] {},
smm-1  |       keepAliveMsecs: 1000,
smm-1  |       keepAlive: false,
smm-1  |       maxSockets: Infinity,
smm-1  |       maxFreeSockets: 256,
smm-1  |       scheduling: 'lifo',
smm-1  |       maxTotalSockets: Infinity,
smm-1  |       totalSocketCount: 1,
smm-1  |       maxCachedSessions: 100,
smm-1  |       _sessionCache: [Object],
smm-1  |       [Symbol(kCapture)]: false
smm-1  |     },
smm-1  |     socketPath: undefined,
smm-1  |     method: 'GET',
smm-1  |     maxHeaderSize: undefined,
smm-1  | 6:31:26 PM [express] GET /api/campaign-content 401 in 52ms :: {"error":"Invalid token or failed to f…
smm-1  |     insecureHTTPParser: undefined,
smm-1  |     joinDuplicateHeaders: undefined,
smm-1  |     path: '/users/me',
smm-1  |     _ended: true,
smm-1  |     res: IncomingMessage {
smm-1  |       _readableState: [ReadableState],
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 4,
smm-1  |       _maxListeners: undefined,
smm-1  |       socket: [TLSSocket],
smm-1  |       httpVersionMajor: 1,
smm-1  |       httpVersionMinor: 1,
smm-1  |       httpVersion: '1.1',
smm-1  |       complete: true,
smm-1  |       rawHeaders: [Array],
smm-1  |       rawTrailers: [],
smm-1  |       joinDuplicateHeaders: undefined,
smm-1  |       aborted: false,
smm-1  |       upgrade: false,
smm-1  |       url: '',
smm-1  |       method: null,
smm-1  |       statusCode: 403,
smm-1  |       statusMessage: 'Forbidden',
smm-1  |       client: [TLSSocket],
smm-1  |       _consuming: false,
smm-1  |       _dumped: false,
smm-1  |       req: [Circular *1],
smm-1  |       responseUrl: 'https://directus.nplanner.ru/users/me',
smm-1  |       redirects: [],
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kHeaders)]: [Object],
smm-1  |       [Symbol(kHeadersCount)]: 20,
smm-1  |       [Symbol(kTrailers)]: null,
smm-1  |       [Symbol(kTrailersCount)]: 0
smm-1  |     },
smm-1  |     aborted: false,
smm-1  |     timeoutCb: null,
smm-1  |     upgradeOrConnect: false,
smm-1  |     parser: null,
smm-1  |     maxHeadersCount: null,
smm-1  |     reusedSocket: false,
smm-1  |     host: 'directus.nplanner.ru',
smm-1  |     protocol: 'https:',
smm-1  |     _redirectable: Writable {
smm-1  |       _writableState: [WritableState],
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 3,
smm-1  |       _maxListeners: undefined,
smm-1  |       _options: [Object],
smm-1  |       _ended: true,
smm-1  |       _ending: true,
smm-1  |       _redirectCount: 0,
smm-1  |       _redirects: [],
smm-1  |       _requestBodyLength: 0,
smm-1  |       _requestBodyBuffers: [],
smm-1  |       _onNativeResponse: [Function (anonymous)],
smm-1  |       _currentRequest: [Circular *1],
smm-1  |       _currentUrl: 'https://directus.nplanner.ru/users/me',
smm-1  |       [Symbol(kCapture)]: false
smm-1  |     },
smm-1  |     [Symbol(kCapture)]: false,
smm-1  |     [Symbol(kBytesWritten)]: 0,
smm-1  |     [Symbol(kNeedDrain)]: false,
smm-1  |     [Symbol(corked)]: 0,
smm-1  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
smm-1  |       accept: [Array],
smm-1  |       'content-type': [Array],
smm-1  |       authorization: [Array],
smm-1  |       'user-agent': [Array],
smm-1  |       'accept-encoding': [Array],
smm-1  |       host: [Array]
smm-1  |     },
smm-1  |     [Symbol(errored)]: null,
smm-1  |     [Symbol(kHighWaterMark)]: 16384,
smm-1  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
smm-1  |     [Symbol(kUniqueHeaders)]: null
smm-1  |   },
smm-1  |   response: {
smm-1  |     status: 403,
smm-1  |     statusText: 'Forbidden',
smm-1  |     headers: Object [AxiosHeaders] {
smm-1  |       'access-control-allow-credentials': 'true',
smm-1  |       'access-control-expose-headers': 'Content-Range',
smm-1  |       'content-length': '79',
smm-1  |       'content-security-policy': "script-src 'self' 'unsafe-eval';worker-src 'self' blob:;child-src 'self' blob:;img-src 'self' data: blob: https://raw.githubusercontent.com https://avatars.githubusercontent.com;media-src 'self';connect-src 'self' https://* wss://*;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'",
smm-1  |       'content-type': 'application/json; charset=utf-8',
smm-1  |       date: 'Tue, 15 Apr 2025 18:31:26 GMT',
smm-1  |       etag: 'W/"4f-0LmwG39pbR0EZ0RxPEfEFFSA4Pc"',
smm-1  |       vary: 'Origin',
smm-1  |       'x-powered-by': 'Directus',
smm-1  |       connection: 'close'
smm-1  |     },
smm-1  |     config: {
smm-1  |       transitional: [Object],
smm-1  |       adapter: [Array],
smm-1  |       transformRequest: [Array],
smm-1  |       transformResponse: [Array],
smm-1  |       timeout: 0,
smm-1  |       xsrfCookieName: 'XSRF-TOKEN',
smm-1  |       xsrfHeaderName: 'X-XSRF-TOKEN',
smm-1  |       maxContentLength: -1,
smm-1  |       maxBodyLength: -1,
smm-1  |       env: [Object],
smm-1  |       validateStatus: [Function: validateStatus],
smm-1  |       headers: [Object [AxiosHeaders]],
smm-1  |       baseURL: 'https://directus.nplanner.ru',
smm-1  |       method: 'get',
smm-1  |       url: '/users/me',
smm-1  |       allowAbsoluteUrls: true,
smm-1  |       data: undefined
smm-1  |     },
smm-1  |     request: <ref *1> ClientRequest {
smm-1  |       _events: [Object: null prototype],
smm-1  |       _eventsCount: 7,
smm-1  |       _maxListeners: undefined,
smm-1  |       outputData: [],
smm-1  |       outputSize: 0,
smm-1  |       writable: true,
smm-1  |       destroyed: false,
smm-1  |       _last: true,
smm-1  |       chunkedEncoding: false,
smm-1  |       shouldKeepAlive: false,
smm-1  |       maxRequestsOnConnectionReached: false,
smm-1  |       _defaultKeepAlive: true,
smm-1  |       useChunkedEncodingByDefault: false,
smm-1  |       sendDate: false,
smm-1  |       _removedConnection: false,
smm-1  |       _removedContLen: false,
smm-1  |       _removedTE: false,
smm-1  |       strictContentLength: false,
smm-1  |       _contentLength: 0,
smm-1  |       _hasBody: true,
smm-1  |       _trailer: '',
smm-1  |       finished: true,
smm-1  |       _headerSent: true,
smm-1  |       _closed: false,
smm-1  |       socket: [TLSSocket],
smm-1  |       _header: 'GET /users/me HTTP/1.1\r\n' +
smm-1  |         'Accept: application/json, text/plain, */*\r\n' +
smm-1  |         'Content-Type: application/json\r\n' +
smm-1  |         'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMGE4MmRjLTU5MjItNDkxNy1iZWVmLTNkMjAxMzExMmNjNCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0NDcxMjA0NiwiZXhwIjoxNzQ0NzEyOTQ2LCJpc3MiOiJkaXJlY3R1cyJ9.Sg79-k2Bu6Mgk73Pjj0G5lHDm4rpNQPParQ7RqwmC_M\r\n' +
smm-1  |         'User-Agent: axios/1.8.4\r\n' +
smm-1  |         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
smm-1  |         'Host: directus.nplanner.ru\r\n' +
smm-1  |         'Connection: close\r\n' +
smm-1  |         '\r\n',
smm-1  |       _keepAliveTimeout: 0,
smm-1  |       _onPendingData: [Function: nop],
smm-1  |       agent: [Agent],
smm-1  |       socketPath: undefined,
smm-1  |       method: 'GET',
smm-1  |       maxHeaderSize: undefined,
smm-1  |       insecureHTTPParser: undefined,
smm-1  |       joinDuplicateHeaders: undefined,
smm-1  |       path: '/users/me',
smm-1  |       _ended: true,
smm-1  |       res: [IncomingMessage],
smm-1  |       aborted: false,
smm-1  |       timeoutCb: null,
smm-1  |       upgradeOrConnect: false,
smm-1  |       parser: null,
smm-1  |       maxHeadersCount: null,
smm-1  |       reusedSocket: false,
smm-1  |       host: 'directus.nplanner.ru',
smm-1  |       protocol: 'https:',
smm-1  |       _redirectable: [Writable],
smm-1  |       [Symbol(kCapture)]: false,
smm-1  |       [Symbol(kBytesWritten)]: 0,
smm-1  |       [Symbol(kNeedDrain)]: false,
smm-1  |       [Symbol(corked)]: 0,
smm-1  |       [Symbol(kOutHeaders)]: [Object: null prototype],
smm-1  |       [Symbol(errored)]: null,
smm-1  |       [Symbol(kHighWaterMark)]: 16384,
smm-1  |       [Symbol(kRejectNonStandardBodyWrites)]: false,
smm-1  |       [Symbol(kUniqueHeaders)]: null
smm-1  |     },
smm-1  |     data: { errors: [Array] }
smm-1  |   },
smm-1  |   status: 403
smm-1  | }
smm-1  | API error details: { errors: [ { message: 'Invalid token.', extensions: [Object] } ] }
smm-1  | User authenticated: df0a82dc-5922-4917-beef-3d2013112cc4 (i.zelenin@nplanner.ru)
smm-1  | Fetching campaigns for user: df0a82dc-5922-4917-beef-3d2013112cc4
smm-1  | Sending request to Directus with filter user_id = df0a82dc-5922-4917-beef-3d2013112cc4
smm-1  | Filtering server-side for userId: df0a82dc-5922-4917-beef-3d2013112cc4
smm-1  | Found 2 campaigns for user df0a82dc-5922-4917-beef-3d2013112cc4 (filtered from 2 total)
smm-1  | All campaign user_ids in response: df0a82dc-5922-4917-beef-3d2013112cc4, df0a82dc-5922-4917-beef-3d2013112cc4
smm-1  | User ID from request: df0a82dc-5922-4917-beef-3d2013112cc4
smm-1  | Types - userId: string first db userId: string
smm-1  | 6:31:27 PM [express] GET /api/campaigns 304 in 76ms :: {"data":[{"id":"7aba8a40-d4d8-48b8-a992-f1b5b…
smm-1  | 6:31:34 PM [scheduler] Проверка запланированных публикаций
smm-1  | 6:31:34 PM [scheduler] Попытка авторизации администратора с учетными данными из env
smm-1  | 6:31:34 PM [scheduler] Авторизация администратора успешна через прямой API запрос
smm-1  | 6:31:34 PM [directus] Токен авторизации для пользователя 53921f16-f51d-4591-80b9-8caa4fde4d13 сохранен в кэше
smm-1  | 6:31:34 PM [directus-auth] Attempting to log in user: lbrspb@gmail.com
smm-1  | 6:31:34 PM [directus-crud] Попытка авторизации пользователя lbrspb@gmail.com
smm-1  | 6:31:34 PM [scheduler] Прямой запрос axios к https://directus.nplanner.ru/items/campaign_content с фильтром по статусу scheduled
smm-1  | 6:31:34 PM [scheduler] Получено 0 запланированных публикаций через API