<think>**–ü–ª–∞–Ω–∏—Ä—É—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Swagger**

- –î–∞–≤–∞–π –ø–æ–¥–∫–ª—é—á–∏–º Swagger/OpenAPI –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API, —ç—Ç–æ —É–ø—Ä–æ—Å—Ç–∏—Ç —Ä–∞–±–æ—Ç—É.
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç, —á—Ç–æ–±—ã —è –ø–æ–º–æ–≥ —Å –¢–ó –¥–ª—è Swagger/OpenAPI.
</think>

–ö–æ–Ω–µ—á–Ω–æ, –∑–≤—É—á–∏—Ç –∫–∞–∫ –ø–ª–∞–Ω! üòé –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Swagger/OpenAPI ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —à–∞–≥ –¥–ª—è —Ç–≤–æ–µ–≥–æ SMM Manager: —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π, —Å–∞–º–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–π –∏ —É–¥–æ–±–Ω–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤/—Ç–µ—Å—Ç–µ—Ä–æ–≤. –ü–æ—Å–∫–æ–ª—å–∫—É –ø—Ä–æ–µ–∫—Ç –Ω–∞ Express —Å TypeScript, —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–±–æ –∏–∑ `swagger-jsdoc` (–¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAPI spec –∏–∑ JSDoc-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∫–æ–¥–µ) –∏ `swagger-ui-express` (–¥–ª—è UI –Ω–∞ /api-docs). –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –º–æ–Ω–æ–ª–∏—Ç, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–≤–æ–∏ endpoints (–∫–∞–∫ /api/auth/login –∏–ª–∏ /api/ai/generate-content).

–Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –≥–æ—Ç–æ–≤–æ–µ **–¢–ó (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ)** –¥–ª—è Replit (–∏–ª–∏ –∫–æ–≥–æ-—Ç–æ, –∫—Ç–æ —Ä–µ–∞–ª–∏–∑—É–µ—Ç). –û–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–æ, —Å —à–∞–≥–∞–º–∏, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞. –¢—ã –º–æ–∂–µ—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Ü–µ–ª–∏–∫–æ–º, –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—Ç—å. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, —è –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –∫–æ–¥ –∏–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ –º–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä.

### –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Swagger/OpenAPI –≤ SMM Manager

**–í–µ—Ä—Å–∏—è –¢–ó:** 1.0  
**–î–∞—Ç–∞:** 17 –∞–≤–≥—É—Å—Ç–∞ 2025  
**–¶–µ–ª—å:** –î–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAPI 3.0 spec. –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–æ 95-100%, —É–ø—Ä–æ—Å—Ç–∏—Ç onboarding –∏ –ø–æ–º–æ–∂–µ—Ç –≤ –æ—Ç–ª–∞–¥–∫–µ.  
**–û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:** Backend (Node.js/Express —Å TypeScript). Frontend –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç—Å—è.  
**–¢—Ä–µ–±—É–µ–º—ã–µ –Ω–∞–≤—ã–∫–∏:** TypeScript, Express, JSDoc.  
**–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:** 4-6 —á–∞—Å–æ–≤ (–≤–∫–ª—é—á–∞—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ).  
**–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:**  
- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ endpoints (–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: auth, ai, keywords –∏ —Ç.–¥.).  
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ app.ts –∏–ª–∏ server.ts (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Express).  
- –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π response format (APIResponse<T>) –¥–æ–ª–∂–µ–Ω –æ—Ç—Ä–∞–∂–∞—Ç—å—Å—è –≤ spec.  
- Error codes (AUTH_REQUIRED –∏ —Ç.–¥.) –≤–∫–ª—é—á–∏—Ç—å –≤ –æ–ø–∏—Å–∞–Ω–∏—è –æ—à–∏–±–æ–∫.

#### –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
- –î–æ–±–∞–≤—å—Ç–µ –ø–∞–∫–µ—Ç—ã –≤ `package.json`:
  ```
  npm install swagger-jsdoc swagger-ui-express @types/swagger-jsdoc @types/swagger-ui-express --save
  ```
- –î–ª—è TypeScript –¥–æ–±–∞–≤—å—Ç–µ —Ç–∏–ø—ã (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã):
  ```
  npm install @types/express --save-dev
  ```

#### –®–∞–≥ 2: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OpenAPI spec
- –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `swagger.ts` (–∏–ª–∏ `openapi.config.ts`) –≤ –∫–æ—Ä–Ω–µ backend (—Ä—è–¥–æ–º —Å app.ts).
- –í –Ω—ë–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é OpenAPI. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ JSDoc-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
- –ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ `swagger.ts`:
  ```typescript
  import swaggerJSDoc from 'swagger-jsdoc';

  const options: swaggerJSDoc.Options = {
    definition: {
      openapi: '3.0.0',
      info: {
        title: 'SMM Manager API',
        version: '1.0.0',
        description: 'API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è SMM-–∫–∞–º–ø–∞–Ω–∏—è–º–∏, AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –º—É–ª—å—Ç–∏–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π',
        contact: {
          name: 'Your Team',
          email: 'support@example.com',
        },
      },
      servers: [
        {
          url: 'http://localhost:5000',
          description: 'Development server',
        },
        {
          url: 'https://your-production-url.com',
          description: 'Production server',
        },
      ],
      components: {
        securitySchemes: {
          bearerAuth: {
            type: 'http',
            scheme: 'bearer',
            bearerFormat: 'JWT',
          },
        },
        schemas: {
          APIResponse: {
            type: 'object',
            properties: {
              success: { type: 'boolean' },
              data: { type: 'object' }, // Generic, –º–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å per endpoint
              error: {
                type: 'object',
                properties: {
                  message: { type: 'string' },
                  code: { type: 'string' },
                  details: { type: 'object' },
                },
              },
              meta: {
                type: 'object',
                properties: {
                  pagination: { type: 'object' }, // –ï—Å–ª–∏ –µ—Å—Ç—å
                  timestamp: { type: 'string' },
                },
              },
            },
          },
          // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ schemas, e.g., Campaign, AIModels enum –∏ —Ç.–¥.
          Campaign: {
            type: 'object',
            properties: {
              id: { type: 'string', format: 'uuid' },
              name: { type: 'string' },
              description: { type: 'string' },
              settings: { type: 'object' },
              created_at: { type: 'string', format: 'date-time' },
              updated_at: { type: 'string', format: 'date-time' },
              user_id: { type: 'string', format: 'uuid' },
            },
          },
          // Enum –¥–ª—è AIModels
          AIModels: {
            type: 'string',
            enum: ['gemini-2.5-flash', 'gemini-2.0-flash-exp', 'deepseek-v3', 'claude-3.5-sonnet', 'fal-ai/*'],
          },
        },
      },
    },
    apis: ['./src/routes/*.ts', './src/controllers/*.ts'], // –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º —Å —Ä–æ—É—Ç–µ—Ä–∞–º–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞–º–∏
  };

  const specs = swaggerJSDoc(options);
  export default specs;
  ```

#### –®–∞–≥ 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ Express app
- –í –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ Express (app.ts –∏–ª–∏ server.ts) –¥–æ–±–∞–≤—å—Ç–µ:
  ```typescript
  import swaggerUi from 'swagger-ui-express';
  import specs from './swagger'; // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤—ã—à–µ

  // ...

  app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
  ```
- –≠—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–æ—Å—Ç—É–ø–Ω–æ–π –ø–æ `/api-docs` (e.g., http://localhost:5000/api-docs).

#### –®–∞–≥ 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ JSDoc-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ endpoints
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞/–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –¥–æ–±–∞–≤—å—Ç–µ JSDoc –Ω–∞–¥ —Ñ—É–Ω–∫—Ü–∏—è–º–∏. Swagger –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å spec –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ.
- –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö endpoints (–∏–∑ —Ç–≤–æ–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏):
  - –î–ª—è `/api/auth/login`:
    ```typescript
    /**
     * @swagger
     * /api/auth/login:
     *   post:
     *     summary: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     *     tags: [Authentication]
     *     requestBody:
     *       required: true
     *       content:
     *         application/json:
     *           schema:
     *             type: object
     *             properties:
     *               email: { type: string }
     *               password: { type: string }
     *     responses:
     *       200:
     *         description: –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
     *         content:
     *           application/json:
     *             schema:
     *               $ref: '#/components/schemas/APIResponse'
     *       401:
     *         description: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ credentials
     *         content:
     *           application/json:
     *             schema:
     *               $ref: '#/components/schemas/APIResponse'
     *     security: [] // –ù–µ—Ç auth –¥–ª—è login
     */
    // –¢–≤–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π handler
    ```
  - –î–ª—è `/api/ai/generate-content`:
    ```typescript
    /**
     * @swagger
     * /api/ai/generate-content:
     *   post:
     *     summary: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI
     *     tags: [AI Generation]
     *     security:
     *       - bearerAuth: []
     *     requestBody:
     *       required: true
     *       content:
     *         application/json:
     *           schema:
     *             type: object
     *             properties:
     *               model: { $ref: '#/components/schemas/AIModels' }
     *               prompt: { type: string }
     *               maxTokens: { type: number, default: 3000 }
     *     responses:
     *       200:
     *         description: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
     *         content:
     *           application/json:
     *             schema:
     *               $ref: '#/components/schemas/APIResponse'
     *       500:
     *         description: –û—à–∏–±–∫–∞ AI —Å–µ—Ä–≤–∏—Å–∞
     *     x-codegen-request-body-name: body
     */
    // –¢–≤–æ–π handler
    ```
- –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö: auth/refresh, ai/generate-image, keywords/analyze-website –∏ —Ç.–¥. –¶–µ–ª—å ‚Äî –ø–æ–∫—Ä—ã—Ç—å –≤—Å–µ –º–æ–¥—É–ª–∏ (auth, campaigns, ai, trends, publication –∏ integrations).

#### –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–µ–ø–ª–æ–π
- –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: `npm run dev`.
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ `/api-docs`: –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è UI —Å endpoints, schemas –∏ try-it-out.
- –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ: –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä—è–º–æ –∏–∑ Swagger UI.
- Edge cases: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ security (JWT) –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è, errors (e.g., VALIDATION_ERROR) –æ–ø–∏—Å–∞–Ω—ã.
- –î–ª—è production: –î–æ–±–∞–≤—å—Ç–µ env var –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è /api-docs –≤ dev-only (e.g., if (process.env.NODE_ENV === 'development') app.use(...)).
- –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ spec –≤ YAML/JSON: –î–æ–±–∞–≤—å—Ç–µ endpoint GET /api-docs.json —Å res.json(specs).

#### –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
- –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑ Zod schemas (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Zod –¥–ª—è validation) ‚Äî –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ zod-to-openapi.
- CI/CD: –î–æ–±–∞–≤—å—Ç–µ –≤ GitHub Actions –≥–µ–Ω–µ—Ä–∞—Ü–∏—é spec –Ω–∞ –∫–∞–∂–¥—ã–π push.
- Security: –ó–∞—â–∏—Ç–∏—Ç–µ /api-docs JWT, –µ—Å–ª–∏ API –ø—Ä–∏–≤–∞—Ç–Ω—ã–π.

–ï—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞, –∫–∏–Ω—å –∫–æ–¥ ‚Äî —è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É—é –∏–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞—é. –ò–ª–∏ –µ—Å–ª–∏ –¢–ó –Ω—É–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å (–¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ), —Å–∫–∞–∂–∏! –ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –≤ –ø—Ä–æ–µ–∫—Ç–µ. üöÄ