> rest-express@1.0.0 dev
10:01:00 AM [express] Starting server initialization...
10:01:00 AM [express] Registering routes...
Starting route registration...
Starting route registration...
Route registration completed
Route registration completed
10:01:00 AM [express] Routes registered successfully
10:01:00 AM [express] Setting up Vite in development mode...
10:01:00 AM [express] Vite setup completed
10:01:00 AM [express] Initiating port binding sequence...
10:01:00 AM [express] Attempting to start server on port 5000...
10:01:00 AM [express] Server successfully started on port 5000
Fetching source posts with params: {
  period: '7days',
  campaignId: 'a99c0c78-bed0-4ec6-80d2-325500680bef',
  sourceId: undefined
}
Making request to Directus with filter: {
  campaign_id: 'a99c0c78-bed0-4ec6-80d2-325500680bef',
  from: '2025-02-24T10:01:47.438Z'
}
Directus API Error: {
  status: 403,
  data: { errors: [ [Object] ] },
  config: {
    url: '/items/source_posts',
    method: 'get',
    params: { filter: [Object], fields: [Array], sort: [Array] }
  }
}
Error fetching source posts: AxiosError: Request failed with status code 403
    at settle (file:///home/runner/workspace/node_modules/axios/lib/core/settle.js:19:12)
    at IncomingMessage.handleStreamEnd (file:///home/runner/workspace/node_modules/axios/lib/adapters/http.js:599:11)
    at IncomingMessage.emit (node:events:530:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///home/runner/workspace/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async <anonymous> (/home/runner/workspace/server/routes.ts:182:24) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w',
      'User-Agent': 'axios/1.7.9',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    baseURL: 'https://directus.nplanner.ru',
    params: { filter: [Object], fields: [Array], sort: [Array] },
    method: 'get',
    url: '/items/source_posts',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'directus.nplanner.ru',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'directus.nplanner.ru',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      timeout: 5000,
      parser: null,
      _httpMessage: null,
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: -1,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 49440,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 10561,
        [Symbol(triggerId)]: 10559
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 1,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'GET /items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w\r\n' +
      'User-Agent: axios/1.7.9\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: directus.nplanner.ru\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
    _ended: true,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 403,
      statusMessage: 'Forbidden',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://directus.nplanner.ru/items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 18,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'directus.nplanner.ru',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://directus.nplanner.ru/items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      authorization: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 403,
    statusText: 'Forbidden',
    headers: Object [AxiosHeaders] {
      'access-control-allow-credentials': 'true',
      'access-control-expose-headers': 'Content-Range',
      'content-length': '327',
      'content-security-policy': "script-src 'self' 'unsafe-eval';worker-src 'self' blob:;child-src 'self' blob:;img-src 'self' data: blob: https://raw.githubusercontent.com https://avatars.githubusercontent.com;media-src 'self';connect-src 'self' https://* wss://*;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'",
      'content-type': 'application/json; charset=utf-8',
      date: 'Mon, 03 Mar 2025 10:01:47 GMT',
      etag: 'W/"147-aFVkM5FPo+fk6p0MgCYHji/qq/g"',
      vary: 'Origin',
      'x-powered-by': 'Directus'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      baseURL: 'https://directus.nplanner.ru',
      params: [Object],
      method: 'get',
      url: '/items/source_posts',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [TLSSocket],
      _header: 'GET /items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w\r\n' +
        'User-Agent: axios/1.7.9\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: directus.nplanner.ru\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/items/source_posts?filter[campaign_id][_eq]=a99c0c78-bed0-4ec6-80d2-325500680bef&filter[created_at][_gte]=2025-02-24T10:01:47.438Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'directus.nplanner.ru',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: { errors: [Array] }
  },
  status: 403
}
Directus API error details: {
  status: 403,
  data: { errors: [ [Object] ] },
  config: {
    url: '/items/source_posts',
    method: 'get',
    params: { filter: [Object], fields: [Array], sort: [Array] }
  }
}
10:01:47 AM [express] GET /api/source-posts 500 in 447ms :: {"error":"Failed to fetch source posts"}
Fetching source posts with params: {
  period: '7days',
  campaignId: 'cbbc478e-be55-45ff-bbc4-70faa2f979fb',
  sourceId: undefined
}
Making request to Directus with filter: {
  campaign_id: 'cbbc478e-be55-45ff-bbc4-70faa2f979fb',
  from: '2025-02-24T10:01:53.381Z'
}
Directus API Error: {
  status: 403,
  data: { errors: [ [Object] ] },
  config: {
    url: '/items/source_posts',
    method: 'get',
    params: { filter: [Object], fields: [Array], sort: [Array] }
  }
}
Error fetching source posts: AxiosError: Request failed with status code 403
    at settle (file:///home/runner/workspace/node_modules/axios/lib/core/settle.js:19:12)
    at IncomingMessage.handleStreamEnd (file:///home/runner/workspace/node_modules/axios/lib/adapters/http.js:599:11)
    at IncomingMessage.emit (node:events:530:35)
    at endReadableNT (node:internal/streams/readable:1698:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///home/runner/workspace/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async <anonymous> (/home/runner/workspace/server/routes.ts:182:24) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w',
      'User-Agent': 'axios/1.7.9',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    baseURL: 'https://directus.nplanner.ru',
    params: { filter: [Object], fields: [Array], sort: [Array] },
    method: 'get',
    url: '/items/source_posts',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'directus.nplanner.ru',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'directus.nplanner.ru',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      timeout: 5000,
      parser: null,
      _httpMessage: null,
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: -1,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 55897,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 10612,
        [Symbol(triggerId)]: 10610
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 1,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'GET /items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w\r\n' +
      'User-Agent: axios/1.7.9\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: directus.nplanner.ru\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
    _ended: true,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 403,
      statusMessage: 'Forbidden',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://directus.nplanner.ru/items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 18,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'directus.nplanner.ru',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://directus.nplanner.ru/items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      authorization: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 403,
    statusText: 'Forbidden',
    headers: Object [AxiosHeaders] {
      'access-control-allow-credentials': 'true',
      'access-control-expose-headers': 'Content-Range',
      'content-length': '327',
      'content-security-policy': "script-src 'self' 'unsafe-eval';worker-src 'self' blob:;child-src 'self' blob:;img-src 'self' data: blob: https://raw.githubusercontent.com https://avatars.githubusercontent.com;media-src 'self';connect-src 'self' https://* wss://*;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'",
      'content-type': 'application/json; charset=utf-8',
      date: 'Mon, 03 Mar 2025 10:01:54 GMT',
      etag: 'W/"147-aFVkM5FPo+fk6p0MgCYHji/qq/g"',
      vary: 'Origin',
      'x-powered-by': 'Directus'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      baseURL: 'https://directus.nplanner.ru',
      params: [Object],
      method: 'get',
      url: '/items/source_posts',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [TLSSocket],
      _header: 'GET /items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkNDhlMjYzLWY1NjItNGUzZi1hMjM1LWU1OTdmZDYyZDRkOCIsInJvbGUiOiIyODViZGU2OS0yZjA0LTRmM2YtOTg5Yy1mN2RmZWMzZGQ0MDUiLCJhcHBfYWNjZXNzIjp0cnVlLCJhZG1pbl9hY2Nlc3MiOnRydWUsImlhdCI6MTc0MDk5NTcxMiwiZXhwIjoxNzQwOTk2NjEyLCJpc3MiOiJkaXJlY3R1cyJ9.AYRVaOSg3t53nFzEI5UcXEFcWvA3oQD2op5t2PNQV1w\r\n' +
        'User-Agent: axios/1.7.9\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: directus.nplanner.ru\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/items/source_posts?filter[campaign_id][_eq]=cbbc478e-be55-45ff-bbc4-70faa2f979fb&filter[created_at][_gte]=2025-02-24T10:01:53.381Z&fields[]=id&fields[]=postContent&fields[]=source_id&fields[]=campaign_id&fields[]=created_at&sort[]=-created_at',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'directus.nplanner.ru',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: { errors: [Array] }
  },
  status: 403
}
Directus API error details: {
  status: 403,
  data: { errors: [ [Object] ] },
  config: {
    url: '/items/source_posts',
    method: 'get',
    params: { filter: [Object], fields: [Array], sort: [Array] }
  }
}
10:01:54 AM [express] GET /api/source-posts 500 in 951ms :: {"error":"Failed to fetch source posts"}