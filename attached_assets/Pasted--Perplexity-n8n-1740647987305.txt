В настройках кампании не отображаются тренды и темы.
Сделать сбор источников в Perplexity через n8n эндпоинт (https://n8n.nplanner.ru/webhook/e2a3fcb2-1427-40e7-b61a-38eacfaeb8c9). POST с API ключом и списком ключевых запросов.
Начать реализовывать парсеры через Apify для каждой соцсети.
Сделать секцию для пользовательских настроек и ввода общих API ключей, таких как:

Perplexity
Apify


Реализовать сохранение ключей и профилей/каналов для постинга в соцсети с рекламную кампанию.


Дополнительный таблицы в Directus.

-- Включаем расширение для UUID, если оно еще не включено
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Таблица для хранения справочника социальных сетей
CREATE TABLE social_networks (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) NOT NULL,
    code VARCHAR(50) NOT NULL,
    icon VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    sort INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by UUID,
    updated_by UUID,
    CONSTRAINT unique_code UNIQUE (code)
);

-- Создаем функцию для автоматического обновления updated_at
CREATE OR REPLACE FUNCTION update_modified_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE 'plpgsql';

-- Создаем триггер для автоматического обновления updated_at
CREATE TRIGGER update_social_networks_modtime
BEFORE UPDATE ON social_networks
FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

-- Начальные данные для таблицы социальных сетей
INSERT INTO social_networks (name, code, icon, sort) VALUES
    ('Telegram', 'telegram', 'telegram', 1),
    ('ВКонтакте', 'vkontakte', 'vk', 2),
    ('Instagram', 'instagram', 'instagram', 3),
    ('Facebook', 'facebook', 'facebook', 4),
    ('YouTube', 'youtube', 'youtube', 5);

-- Таблица для хранения данных доступа к социальным сетям для кампаний
CREATE TABLE campaign_social_network_credentials (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_campaign_id UUID NOT NULL,
    social_network_id UUID NOT NULL,
    
    -- Общие поля для всех соцсетей
    access_token VARCHAR(1024),
    is_active BOOLEAN DEFAULT TRUE,
    last_verified TIMESTAMP,
    
    -- Telegram-специфичные поля
    bot_token VARCHAR(255),
    chat_id VARCHAR(100),
    
    -- ВКонтакте-специфичные поля
    group_id VARCHAR(100),
    
    -- Instagram-специфичные поля
    additional_token VARCHAR(1024),
    
    -- Facebook-специфичные поля
    page_id VARCHAR(100),
    
    -- YouTube-специфичные поля
    api_key VARCHAR(255),
    channel_id VARCHAR(100),
    
    -- Служебные поля
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by UUID,
    updated_by UUID,
    
    -- Внешние ключи
    CONSTRAINT fk_user_campaign FOREIGN KEY (user_campaign_id) REFERENCES user_campaigns(id) ON DELETE CASCADE,
    CONSTRAINT fk_social_network FOREIGN KEY (social_network_id) REFERENCES social_networks(id),
    
    -- Уникальность комбинации кампании и соцсети
    CONSTRAINT unique_campaign_network UNIQUE (user_campaign_id, social_network_id)
);

-- Триггер для автоматического обновления updated_at
CREATE TRIGGER update_credentials_modtime
BEFORE UPDATE ON campaign_social_network_credentials
FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

-- Индексы для оптимизации запросов
CREATE INDEX idx_user_campaign_id ON campaign_social_network_credentials(user_campaign_id);
CREATE INDEX idx_social_network_id ON campaign_social_network_credentials(social_network_id);
CREATE INDEX idx_is_active ON campaign_social_network_credentials(is_active);







