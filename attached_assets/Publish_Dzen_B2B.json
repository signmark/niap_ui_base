{
  "name": "Publish Dzen B2B",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            }
          ]
        },
        "options": {}
      },
      "id": "b7baf1e4-52a2-48dc-81ef-034fb20d0ae7",
      "name": "SendToSalebot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2020,
        320
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "where": {
          "values": [
            {
              "column": "guid",
              "value": "={{ $json.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "17113701-14d7-4005-b40a-4a76a2051889",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        920,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем HTML списка новостей напрямую из ноды Webhook\nconst listHtml = $node[\"Webhook\"].json.body.list;\n\n// Извлекаем номер новости из ID в теле Webhook\nconst newsNumber = parseInt($node[\"Webhook\"].json.body.id, 10); // Преобразуем в число, если rawId существует\n\n// Регулярное выражение для поиска URL новости с данным номером\nconst regex = new RegExp(`<strong>\\\\s*${newsNumber}\\\\.\\\\s*<a href=\"([^\"]+)\"`, 'i');\n\n// Ищем URL новости с данным номером\nconst match = listHtml.match(regex);\nconst newsUrl = match ? match[1] : 'URL новости не найден';\n\n// Возвращаем только URL новости\nreturn [\n  {\n    json: {\n      url: newsUrl,\n      id: newsNumber\n    }\n  }\n];\n"
      },
      "id": "2a849c37-848e-4c95-969d-c527e96dd5ae",
      "name": "Get GUID",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        320
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.image_gen }}",
        "options": {}
      },
      "id": "4c842e9a-b337-4c68-b4d0-c07013964c55",
      "name": "Download Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ct44538-wordpress-od6ba.tw1.ru/wp-json/wp/v2/media",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "{\n  \"Authorization\": \"Basic base64_encoded_username_and_password\",\n  \"Content-Disposition\": \"attachment; filename=\\\"ultra.png\\\"\",\n  \"Content-Type\": \"image/png\"\n}",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "id": "b5dc7476-2133-4c6a-95ad-6997a8a5f290",
      "name": "Upload Image to WP",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1580,
        320
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "Uo9sU7IhGNUvlEtv",
          "name": "WP Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://ct44538-wordpress-od6ba.tw1.ru/wp-json/wp/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": {{ JSON.stringify($('Postgres').item.json.title) }},\n  \"content\": {{ JSON.stringify($('Postgres').item.json.dzen) }},\n  \"status\": \"publish\",\n  \"categories\": [4],\n  \"featured_media\": {{ $json.id }}\n}\n",
        "options": {}
      },
      "id": "e76d7105-efcc-4588-b28e-0dd75bc4a709",
      "name": "Create Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1800,
        320
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "Uo9sU7IhGNUvlEtv",
          "name": "WP Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5520951-dce4-43ab-a292-9eef6097e271",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "77ffbc44-b37c-433c-ba9f-1e314267a12f",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1140,
        320
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "460279cc-9894-47cd-956e-9e98d8ed2e8a",
        "options": {}
      },
      "id": "1df07a9b-7cb7-4dbe-9b61-65960bb0b46c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        520,
        320
      ],
      "webhookId": "460279cc-9894-47cd-956e-9e98d8ed2e8a"
    }
  ],
  "pinData": {},
  "connections": {
    "Postgres": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get GUID": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Upload Image to WP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image to WP": {
      "main": [
        [
          {
            "node": "Create Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Post": {
      "main": [
        [
          {
            "node": "SendToSalebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get GUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6557f4c1-5b87-41fa-91f9-e39c63b852f9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "332f4e2842ac35bdf92bcf45820374737b808cfde08870402695ef84706bff04"
  },
  "id": "TeBjnHnyWzt3Xdvy",
  "tags": []
}