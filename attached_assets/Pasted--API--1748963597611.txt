 Начинаем обновление токена
 Используем локальный API для обновления токена
 Токен успешно обновлен через API
 Сохранение авторизации: token=true, userId=53921f16-f51d-4591-80b9-8caa4fde4d13
 Токен истечет через 900 секунд, обновление запланировано через 720 секунд
 Токен успешно обновлен, длина нового токена: 321
 Attempting login with: lbrspb@gmail.com
 Sending login request to: /api/auth/login
 Received auth tokens, access token length: 321
 Login successful, user ID: 53921f16-f51d-4591-80b9-8caa4fde4d13
 Сохранение авторизации: token=true, userId=53921f16-f51d-4591-80b9-8caa4fde4d13
 Токен истечет через 900 секунд, обновление запланировано через 720 секунд
 Авторизован с токеном, длина: 321
 Fetching user API keys using the API route
 Проверка принадлежности кампании пользователю: Object
 Проверка статуса администратора
 Отправка API запроса на /auth/is-admin c токеном eyJhbGciOi...
 Campaigns loaded: 7
 Ответ сервера на запрос проверки админа: Object
 Пользователь является администратором
 Устанавливаем статус администратора: true
 Successfully fetched 8 API keys
 Кампания принадлежит текущему пользователю: NPlanner.ru
 Сохраняем ID выбранной кампании для постоянного отображения: 46868c44-c6a4-4bed-accf-9ad07bba790e
 Используем глобально выбранную кампанию: "NPlanner.ru"
 Fetching sources for campaign: 46868c44-c6a4-4bed-accf-9ad07bba790e
 Starting automatic data refresh intervals
 Fetching source posts with params: Object
 Using exact API URL format that works
 sourcePosts data changed: Object
 Проверка принадлежности кампании пользователю: Object
 Проверка статуса администратора
 Отправка API запроса на /auth/is-admin c токеном eyJhbGciOi...
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Кампания принадлежит текущему пользователю: NPlanner.ru
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. 
overrideMethod @ installHook.js:1
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
hook.js:608 Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render. Error Component Stack
    at Trends (index.tsx:151:47)
    at main (<anonymous>)
    at div (<anonymous>)
    at div (<anonymous>)
    at ThemeProvider (ThemeProvider.tsx:8:33)
    at Layout (Layout.tsx:23:26)
    at WithLayout (App.tsx:41:23)
    at _c12 (<anonymous>)
    at Route (wouter.js?v=49418eff:323:16)
    at Switch (wouter.js?v=49418eff:379:17)
    at Router (<anonymous>)
    at AuthGuard (AuthGuard.tsx:11:29)
    at AuthProvider (use-auth.tsx:44:32)
    at QueryClientProvider (@tanstack_react-query.js?v=49418eff:2805:3)
    at App (<anonymous>)
overrideMethod @ hook.js:608
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:371 Sources API response: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:881 sourcePosts data changed: Object
index.tsx:754 Source posts API response: Object
index.tsx:762 Returning posts array: Object
index.tsx:881 sourcePosts data changed: Object
store.ts:113 Ответ сервера на запрос проверки админа: Object
store.ts:116 Пользователь является администратором
store.ts:81 Устанавливаем статус администратора: true
CampaignSelector.tsx:40 Сохраняем ID выбранной кампании для постоянного отображения: 46868c44-c6a4-4bed-accf-9ad07bba790e
CampaignSelector.tsx:101 Используем глобально выбранную кампанию: "NPlanner.ru"
ImageGenerationDialog.tsx:129 🔄 Сброс состояния ImageGenerationDialog при открытии Object
ImageGenerationDialog.tsx:186 Создание нового контента - промт сброшен
ImageGenerationDialog.tsx:230 Выбрана вкладка прямого промта (по умолчанию)
index.tsx:283 Загрузка контента для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
index.tsx:311 Загрузка ключевых слов для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
useCampaignOwnershipCheck.tsx:19 Проверка принадлежности кампании пользователю: Object
store.ts:91 Проверка статуса администратора
store.ts:101 Отправка API запроса на /auth/is-admin c токеном eyJhbGciOi...
useCampaignOwnershipCheck.tsx:42 Кампания принадлежит текущему пользователю: NPlanner.ru
api/campaigns:1 
            
            
           Failed to load resource: the server responded with a status of 401 (Unauthorized)
index.tsx:324 Загружено ключевых слов: 22
store.ts:113 Ответ сервера на запрос проверки админа: Object
store.ts:116 Пользователь является администратором
store.ts:81 Устанавливаем статус администратора: true
index.tsx:686 Fetched trends data: Object
index.tsx:296 Загружено контента: 757
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
index.tsx:311 Загрузка ключевых слов для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
index.tsx:283 Загрузка контента для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
index.tsx:324 Загружено ключевых слов: 22
index.tsx:197 Setting content with processed keywords: Array(5)
index.tsx:205 Comparing keywords for selection: Array(5)
index.tsx:214 Keyword "пищевой дневник" (08454b75-fe25-4c66-99d4-3d026b7dec22) match: false
index.tsx:214 Keyword "анализ диеты" (0b3a0505-4222-4cd8-b711-a6dbab16f7dc) match: false
index.tsx:214 Keyword "индивидуальные рационы питания" (39cf22ae-f27f-4bee-97d1-49cf9f8acc13) match: false
index.tsx:214 Keyword "программное обеспечение для нутрициологов" (3d8f1e49-c574-4870-bc48-4b807cc5c0d0) match: true
index.tsx:214 Keyword "персональные сбалансированные рационы" (3ec803ae-b1ac-4da1-a0a5-b1bc7abbc148) match: true
index.tsx:214 Keyword "рацион питания" (46fa5790-339c-4d49-94ea-14fa503c30f6) match: false
index.tsx:214 Keyword "составление рационов онлайн" (54ba08bb-91b6-435b-9c21-11b2f439cfde) match: true
index.tsx:214 Keyword "пп питание на неделю с рецептами" (5692a5cd-c2d4-4bda-a7a7-3c0543e3d367) match: false
index.tsx:214 Keyword "сервис для диетологов" (5e12347d-6913-48bf-a784-96b7a34c0893) match: false
index.tsx:214 Keyword "план питания" (5f0756a2-e115-494b-805d-42a75ddd0575) match: false
index.tsx:214 Keyword "индивидуальные планы питания" (62c8abe9-9eab-4fe0-b621-e5f37a136c46) match: false
index.tsx:214 Keyword "пп питание" (7edcead8-6ab4-43af-9617-4e7a07fc657c) match: false
index.tsx:214 Keyword "баланс питания для клиентов" (830e2f1c-622d-460d-9d46-c5a1300b4685) match: false
index.tsx:214 Keyword "анализ питания клиентов" (abe3a77c-36cd-41fd-a54c-982821ce3808) match: false
index.tsx:214 Keyword "создание рационов для клиентов" (b14496d6-8f90-4471-8752-36aa3c8dcc85) match: false
index.tsx:214 Keyword "Nutrient Planner" (b9e0a18e-bec1-48e7-a446-43b9d1d20f66) match: false
index.tsx:214 Keyword "индивидуальный рацион" (bbd22f52-5ade-412e-a62b-915c494d0e9c) match: false
index.tsx:214 Keyword "аналитический сервис для врачей" (c19c86d0-bd48-4aa5-b133-671bdab846b6) match: false
index.tsx:214 Keyword "профессиональный аналитический сервис для врачей" (c6a315a1-5bbf-4cec-ae4b-e166b07c273e) match: false
index.tsx:214 Keyword "автоматизация составления рационов" (e6d60e2b-7555-4ae8-a582-d0d325f41f43) match: true
index.tsx:214 Keyword "сервис для нутрициологов" (ecec659f-b007-4a83-b796-0ef27c3da4d7) match: false
index.tsx:214 Keyword "составление диеты" (f13effeb-ce40-40cc-b7e9-700389d1c419) match: true
index.tsx:223 Selected keyword IDs updated: Array(5)
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
ImageGenerationDialog.tsx:129 🔄 Сброс состояния ImageGenerationDialog при открытии Object
ImageGenerationDialog.tsx:173 Использован сохраненный промт из БД: Смешной пост...
ImageGenerationDialog.tsx:209 Установлен контент для текущего поста: У меня тут такое... Пытался сварить себе диетический суп. В итоге, получилось нечто настолько странн...
ImageGenerationDialog.tsx:219 Выбрана вкладка прямого промта, так как есть сохраненный промт
ImageGenerationDialog.tsx:222 Используем готовый промт из текущего поста: contentId=7e025ede-c5f8-46ee-96b2-e285638aa4b3
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /claude/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - claude, модель - 
hook.js:608 Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}. Error Component Stack
    at DescriptionWarning (chunk-DMFJI7XL.js?v=49418eff:330:29)
    at chunk-DMFJI7XL.js?v=49418eff:234:13
    at chunk-DMFJI7XL.js?v=49418eff:157:58
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at chunk-DMFJI7XL.js?v=49418eff:148:64
    at chunk-UACHJROW.js?v=49418eff:52:11
    at chunk-UACHJROW.js?v=49418eff:33:11
    at chunk-RLTE5R7I.js?v=49418eff:41:13
    at chunk-T7WS74FN.js?v=49418eff:260:22
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at DialogPortal (chunk-DMFJI7XL.js?v=49418eff:111:11)
    at _c3 (dialog.tsx:33:6)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at Dialog (chunk-DMFJI7XL.js?v=49418eff:52:5)
    at div (<anonymous>)
    at ContentPage (index.tsx:112:32)
    at main (<anonymous>)
    at div (<anonymous>)
    at div (<anonymous>)
    at ThemeProvider (ThemeProvider.tsx:8:33)
    at Layout (Layout.tsx:23:26)
    at WithLayout (App.tsx:41:23)
    at _c8 (<anonymous>)
    at Route (wouter.js?v=49418eff:323:16)
    at Switch (wouter.js?v=49418eff:379:17)
    at Router (<anonymous>)
    at AuthGuard (AuthGuard.tsx:11:29)
    at AuthProvider (use-auth.tsx:44:32)
    at QueryClientProvider (@tanstack_react-query.js?v=49418eff:2805:3)
    at App (<anonymous>)
overrideMethod @ hook.js:608
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /claude/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - claude, модель - claude-3-5-sonnet-20241022
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /claude/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - claude, модель - claude-3-5-sonnet-20241022
index.tsx:296 Загружено контента: 757
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /claude/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - claude, модель - claude-3-5-sonnet-20241022
hook.js:608 Warning: Missing `Description` or `aria-describedby={undefined}` for {DialogContent}. Error Component Stack
    at DescriptionWarning (chunk-DMFJI7XL.js?v=49418eff:330:29)
    at chunk-DMFJI7XL.js?v=49418eff:234:13
    at chunk-DMFJI7XL.js?v=49418eff:157:58
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at chunk-DMFJI7XL.js?v=49418eff:148:64
    at chunk-UACHJROW.js?v=49418eff:52:11
    at chunk-UACHJROW.js?v=49418eff:33:11
    at chunk-RLTE5R7I.js?v=49418eff:41:13
    at chunk-T7WS74FN.js?v=49418eff:260:22
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at DialogPortal (chunk-DMFJI7XL.js?v=49418eff:111:11)
    at _c3 (dialog.tsx:33:6)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at Dialog (chunk-DMFJI7XL.js?v=49418eff:52:5)
    at TextEnhancementDialog (TextEnhancementDialog.tsx:145:3)
    at div (<anonymous>)
    at RichTextEditor (RichTextEditor.tsx:95:3)
    at div (<anonymous>)
    at div (<anonymous>)
    at div (<anonymous>)
    at div (<anonymous>)
    at chunk-RLTE5R7I.js?v=49418eff:41:13
    at chunk-T7WS74FN.js?v=49418eff:61:7
    at chunk-UACHJROW.js?v=49418eff:52:11
    at chunk-UACHJROW.js?v=49418eff:33:11
    at chunk-RLTE5R7I.js?v=49418eff:41:13
    at chunk-NAGEHQIT.js?v=49418eff:29:5
    at chunk-DMFJI7XL.js?v=49418eff:234:13
    at chunk-DMFJI7XL.js?v=49418eff:157:58
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at chunk-DMFJI7XL.js?v=49418eff:148:64
    at chunk-UACHJROW.js?v=49418eff:52:11
    at chunk-UACHJROW.js?v=49418eff:33:11
    at chunk-RLTE5R7I.js?v=49418eff:41:13
    at chunk-T7WS74FN.js?v=49418eff:260:22
    at Presence (chunk-67VZ6NIO.js?v=49418eff:24:11)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at DialogPortal (chunk-DMFJI7XL.js?v=49418eff:111:11)
    at _c3 (dialog.tsx:33:6)
    at Provider (chunk-7X6RRC7I.js?v=49418eff:38:15)
    at Dialog (chunk-DMFJI7XL.js?v=49418eff:52:5)
    at div (<anonymous>)
    at ContentPage (index.tsx:112:32)
    at main (<anonymous>)
    at div (<anonymous>)
    at div (<anonymous>)
    at ThemeProvider (ThemeProvider.tsx:8:33)
    at Layout (Layout.tsx:23:26)
    at WithLayout (App.tsx:41:23)
    at _c8 (<anonymous>)
    at Route (wouter.js?v=49418eff:323:16)
    at Switch (wouter.js?v=49418eff:379:17)
    at Router (<anonymous>)
    at AuthGuard (AuthGuard.tsx:11:29)
    at AuthProvider (use-auth.tsx:44:32)
    at QueryClientProvider (@tanstack_react-query.js?v=49418eff:2805:3)
    at App (<anonymous>)
overrideMethod @ hook.js:608
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /gemini/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - gemini, модель - claude-3-5-sonnet-20241022
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /gemini/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - gemini, модель - gemini-2.5-flash
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /gemini/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - gemini, модель - gemini-2.5-flash
api/gemini/improve-text:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /gemini/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - gemini, модель - gemini-2.5-flash
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
accordion.tsx:97 hasFullscreenPage: value is undefined or not passed
TextEnhancementDialog.tsx:207 TextEnhancementDialog: будет использован API эндпоинт /gemini/improve-text
TextEnhancementDialog.tsx:208 TextEnhancementDialog: выбранный сервис - gemini, модель - gemini-2.5-flash
index.tsx:311 Загрузка ключевых слов для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
index.tsx:324 Загружено ключевых слов: 22
index.tsx:283 Загрузка контента для кампании: 46868c44-c6a4-4bed-accf-9ad07bba790e
index.tsx:296 Загружено контента: 757
