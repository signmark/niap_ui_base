{
  "name": "Rewrite",
  "nodes": [
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "where": {
          "values": [
            {
              "column": "guid",
              "condition": "LIKE",
              "value": "={{ $json.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "996e403f-eb2f-444d-ad6d-7b64578f92e3",
      "name": "Find news item",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        240,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "62a64e88-3824-40ae-b548-8e2c309c8e62",
              "leftValue": "={{ $json.results.generations_data.data[0].result_url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "740522f7-f7c4-4592-bc17-ef3ad00db573",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2080,
        -520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Напиши промт на английском для генерации фотореалистичной картинки по тексту на русском языке. Только сам промт без лишних символов и знаков.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Switch').item.json.content) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "982261d8-3b61-49a1-b7c9-afb602dc00ac",
      "name": "Image Description",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4320,
        -500
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.yesai.su/v2/midjourney/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer yes-c863b026c4b79d11c474dbf0f59acb43593f0201f0cee19855cda2830ea9"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"prompt\": {{ JSON.stringify($json.choices[0].message.content) }},\n\"style\":\"7\",\n\"speed\":\"relax\"\n}",
        "options": {}
      },
      "id": "3507b993-f373-446d-8c2d-64e894eef4ac",
      "name": "Draw Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1620,
        -200
      ]
    },
    {
      "parameters": {
        "url": "=https://api.yesai.su/v2/midjourney/generations/{{ $('Image ID').item.json.results.generation_data.id }}/batch ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer yes-c863b026c4b79d11c474dbf0f59acb43593f0201f0cee19855cda2830ea9"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "id": "ad1adb32-0e62-4a0e-940b-715a3661c53a",
      "name": "Request Image Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1900,
        -520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f239139-1015-4216-987d-d50191bce429",
              "name": "results.generation_data.id",
              "value": "={{ $json.results.generation_data.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "3f1a9a58-6811-4f61-a5dc-3f81001da2f1",
      "name": "Image ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        -520
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').first().json.guid }}",
            "image_gen": "={{ $json.image_gen }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1a473554-06fe-4f0e-9667-0bb8b46950ed",
      "name": "Update image_gen",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5280,
        -580
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ea3c5c83-04cd-4ea4-ac04-136942ce8d10",
              "name": "result_url",
              "value": "={{ $json.results.generations_data.data[0].result_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "242d3e28-9b64-46c5-8b01-035e44be8e00",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2300,
        -560
      ]
    },
    {
      "parameters": {
        "model_id": 4,
        "prompt": "={{ $json.choices[0].message.content }}"
      },
      "id": "a3a4ce85-03d9-4ac9-8500-ad82d18837cc",
      "name": "fusionbrain.ai",
      "type": "n8n-nodes-fusionbrain.fusionbrainAiNode",
      "typeVersion": 1,
      "position": [
        680,
        -120
      ],
      "credentials": {
        "hapheusFusionbrainAiCredentialsApi": {
          "id": "6J14um57MDtHBA98",
          "name": "fusionbrain.ai account"
        }
      }
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "={{ [...Array(64)].map(() => Math.floor(Math.random() * 16).toString(16)).join('') }}.jpg",
        "dataPropertyName": "=data",
        "options": {}
      },
      "id": "73eb4c48-d2c7-4e6b-aaa1-d98608d00c40",
      "name": "Read/Write Files from Disk",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        900,
        -120
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "where": {
          "values": [
            {
              "column": "guid",
              "condition": "LIKE",
              "value": "https://larta.com/ru/news/priglashenie%"
            }
          ]
        },
        "options": {}
      },
      "id": "f4b92ca7-5e09-4474-9cdf-c6701e62b551",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3040,
        -340
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "url": "http://88.218.171.139:3333/generate_token",
        "options": {}
      },
      "id": "b9689ff3-c68f-4bb3-b25e-668fc29f05c6",
      "name": "Request TOKEN",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2520,
        140
      ]
    },
    {
      "parameters": {
        "url": "=https://api.klingai.com/v1/images/generations/{{ $json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Request TOKEN').first().json.token }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5041d90f-b84c-4dd5-981a-eb6b1b7a2933",
      "name": "Get image URL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -60,
        -580
      ]
    },
    {
      "parameters": {
        "content": "## Kandinsky approach",
        "height": 313.70350404312654,
        "width": 514.8032345013477
      },
      "id": "c73fe105-be80-40c2-a879-4cd2fbac5393",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        580,
        -220
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer sk-xb1rClGVOkiugSDsGcgqctaopPe64SJSXTRq2yY8FAT3BlbkFJX561N8f6wIyeZAFIFUARwkMqi6TaFU4B5eyr_kp_YA"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "dall-e-3"
            },
            {
              "name": "prompt",
              "value": "={{ $json.choices[0].message.content }}"
            },
            {
              "name": "style",
              "value": "natural"
            }
          ]
        },
        "options": {}
      },
      "id": "c0189055-7716-475e-b3bc-0d9b9db426f4",
      "name": "Dalle",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1140,
        -220
      ]
    },
    {
      "parameters": {
        "url": "=https://api.klingai.com/v1/images/generations/{{ $json.data.task_id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Request TOKEN').first().json.token }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cd5f01db-40ec-4002-ac21-9781dc6436af",
      "name": "Get image URL1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        980,
        -540
      ]
    },
    {
      "parameters": {
        "content": "## Midjourney approach",
        "height": 552.9261699202515,
        "width": 1086.447815966856
      },
      "id": "b3af0b92-83e4-4ff0-9c35-0758a203fdc8",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1460,
        -600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Функция для удаления всех HTML-тегов\nfunction stripTags(content) {\n  return content.replace(/<\\/?[^>]+(>|$)/g, \"\"); // Удаляет все теги\n}\n\n// Функция для обрезки строки до заданного количества символов и добавления \"...\" в конце\nfunction trimToLength(content, maxLength) {\n  if (content.length > maxLength) {\n    return content.substring(0, maxLength - 3) + \"...\";\n  }\n  return content;\n}\n\n// Основной код\nconst MAX_TELEGRAM_LENGTH = 4096;\n\nreturn items.map(item => {\n  if (item.json && item.json.content) {\n    // Убираем все теги из content\n    item.json.content = stripTags(item.json.content);\n    // Обрезаем строку до максимальной длины для Telegram и добавляем \"...\"\n    item.json.content = trimToLength(item.json.content, MAX_TELEGRAM_LENGTH);\n  }\n  return item;\n});\n"
      },
      "id": "3b8eb9dc-247f-4c5f-8912-df7a947eac21",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5460,
        -580
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.data.task_result.images[0].url }}",
        "options": {}
      },
      "id": "a483e84d-6eef-4cd5-9507-0e22f398f88e",
      "name": "Download Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        -600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "24b7a2b8c7d4563497ca48e07d0c76ba"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "f2c98eb8-1404-4573-87c7-2e857ac4eb3f",
      "name": "Upload Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4840,
        -580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgur.com/3/image",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Client-ID a11623250aa6aa4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "82105b32-8d9b-4800-90ec-2dbccf65802a",
      "name": "Upload Imgur",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2780,
        -360
      ]
    },
    {
      "parameters": {
        "content": "## Imgur",
        "height": 274.6332945285216,
        "width": 232.0023282887078
      },
      "id": "ceb63521-030b-4a18-bf4a-20356560469d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2720,
        -440
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "vk": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "1362220a-e597-472a-b283-e5f4c512bb9a",
      "name": "Update VK Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        400
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "pinterest": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "1b20ff08-949c-4aaf-a398-07b28cf88bd1",
      "name": "Update Pinterest Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        740
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "ade1cd44-207f-4b30-86be-da155df0cccf",
      "name": "Clean Unallowed Tags VK",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        400
      ]
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Pinterest (здесь можно добавить свои теги, если есть ограничения)\nconst allowedTagsPinterest = ['a', 'strong', 'i'];\n\n// Функция для очистки HTML от неразрешённых тегов\nfunction processContentForPinterest(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        }\n        // Все остальные теги будут проигнорированы (удалены)\n      }\n    } else if (match[2]) {\n      // Это текст, сохраняем его\n      result.push(match[2]);\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.pinterest) {\n    let originalPinterestContent = item.json.pinterest;\n\n    // Обработка контента для удаления неразрешённых тегов\n    let cleanedPinterestContent = processContentForPinterest(originalPinterestContent, allowedTagsPinterest);\n\n    // Сохраняем результат в поле pinterest_cleaned\n    item.json.pinterest_cleaned = cleanedPinterestContent;\n  }\n  return item;\n});\n"
      },
      "id": "792f2f36-02ef-4cae-baa4-d956ddba5e40",
      "name": "Clean Unallowed Pinterest",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram (или других платформ, если нужно)\nconst allowedTagsContent = ['a', 'strong', 'i'];\n\n// Функция для очистки HTML от неразрешённых тегов\nfunction processContentForCleaning(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        }\n        // Все остальные теги будут проигнорированы (удалены)\n      }\n    } else if (match[2]) {\n      // Это текст, сохраняем его\n      result.push(match[2]);\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.content) {\n    let originalContent = item.json.content;\n\n    // Обработка контента для удаления неразрешённых тегов\n    let cleanedContent = processContentForCleaning(originalContent, allowedTagsContent);\n\n    // Сохраняем результат в поле content_cleaned\n    item.json.content_cleaned = cleanedContent;\n  }\n  return item;\n});\n"
      },
      "id": "e6e9e789-655a-48f9-abbf-60e4b881ed56",
      "name": "Clean Unallowed Tags Rewrite",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        1100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $('Update Rewrite').item.json.rewrite }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8eceebb1-fdc6-4531-bfd4-72d7079b1eaf",
      "name": "Send Rewrite Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        1100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.vk }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f74bf829-42f2-45a5-9d0a-805546dc0daa",
      "name": "Send VK Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.pinterest_cleaned }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a2c52162-823c-473b-b7b7-c7087f43d19d",
      "name": "Send Pinterest Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        740
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "rewrite": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "8fc3489b-088d-49c4-80d4-ae82230ac122",
      "name": "Update Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        1100
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.rewrite }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": "={{ true }}",
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "be0cf34c-4f5e-4579-b128-c30ac625953e",
                    "leftValue": "={{ $('Webhook').item.json.body.rewrite }}",
                    "rightValue": "news",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "News"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca2a4e59-3aa6-4360-84bd-774338cac186",
                    "leftValue": "={{ $('Webhook').item.json.body.rewrite }}",
                    "rightValue": "rewrite",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Empty"
            }
          ]
        },
        "options": {}
      },
      "id": "46bc8839-bced-4a1a-a7f9-7468dfb20271",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2080,
        340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2a985eb-cb2d-4f8d-9455-a7eacc4f66a8",
              "name": "image_gen",
              "value": "={{ $json.data.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8a5a0d9c-ca99-46ad-bc37-a922dbb59980",
      "name": "image_gen",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5100,
        -580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1caf6366-7081-498f-901c-c964610887da",
              "leftValue": "={{ $json.data.task_result.images[0].url }}",
              "rightValue": "={{ $json.data.task_result.images[0].url }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "99284a21-7bbc-4951-a87e-fc2ec043402a",
      "name": "Image Ready?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        160,
        -580
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "vk_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "5c42ad46-a242-429f-ac5d-2c8c57d29234",
      "name": "Update VK B2B Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        560
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "1f1b48a6-e0a3-4f76-971a-c37a461fd248",
      "name": "Clean Unallowed Tags VK B2B",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.vk_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b6ef1aa4-b0c8-4029-9760-b0117865e5f2",
      "name": "Send VK B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        560
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "pinterest_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "13b573b6-5846-494d-9ea8-5447652f7b85",
      "name": "Update Pinterest B2B Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        920
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Pinterest (здесь можно добавить свои теги, если есть ограничения)\nconst allowedTagsPinterest = ['a', 'strong', 'i'];\n\n// Функция для очистки HTML от неразрешённых тегов\nfunction processContentForPinterest(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        }\n        // Все остальные теги будут проигнорированы (удалены)\n      }\n    } else if (match[2]) {\n      // Это текст, сохраняем его\n      result.push(match[2]);\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.pinterest) {\n    let originalPinterestContent = item.json.pinterest;\n\n    // Обработка контента для удаления неразрешённых тегов\n    let cleanedPinterestContent = processContentForPinterest(originalPinterestContent, allowedTagsPinterest);\n\n    // Сохраняем результат в поле pinterest_cleaned\n    item.json.pinterest_cleaned = cleanedPinterestContent;\n  }\n  return item;\n});\n"
      },
      "id": "984d0fa7-8a02-4052-a66d-2f434614fc5a",
      "name": "Clean Unallowed Pinterest B2B",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.pinterest_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "143afe78-e6ca-4b49-9fb6-4a41510eaaf3",
      "name": "Send Pinterest B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.instagram }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dbb92f6c-3a05-4f51-a21e-7b18d46c5857",
      "name": "Send Rewrite Preview Instagram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        1480
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.klingai.com/v1/images/generations",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Request TOKEN').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n\"prompt\": {{ JSON.stringify($json.choices[0].message.content) }}\n} ",
        "options": {}
      },
      "id": "8e6bf19b-2f73-4a68-b4c5-346c60d4cad1",
      "name": "Generate Image [KLING AI]",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -340,
        -540
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети ВКонтакте. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. Вставь хештеги по смыслу в конце поста.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "6c334ab0-0384-4ab2-861a-7cf1bdbe04ce",
      "name": "Rewrite VK",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети ВКонтакте. Целевая аудитория — бизнесмены и предприниматели у которых есть свои офисы или занимаются строительством и проектированием загородных домов, зданий и бизнес центров. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO Ключевые слова, фразы, запросы) в тексте и заголовках ключевые слова и фразы по этой тематике. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Обязтаельно закрывай все теги. В конце поста используй хештеги по смыслу.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "41752d02-cf4f-4110-ba7f-b45c5f2d09b2",
      "name": "Rewrite VK B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Pinterest не более 500 символов. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. Используй хештеги по смыслу в конце поста\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "71354d9c-4047-400f-acea-95a164b2458e",
      "name": "Rewrite Pinterest",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Pinterest. Целевая аудитория — бизнесмены и предприниматели у которых есть свои офисы или занимаются строительством и проектированием загородных домов, зданий и бизнес центров. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. В конце поста используй хештеги по смыслу.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "f009a084-6c21-48b5-9a0b-e7c870396566",
      "name": "Rewrite Pinterest B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Перепиши новость другими словами, сохраняя общий смысл. Разбей текст на абзацы и сделай перенос строки после каждого абзаца. ВАЖНО: ни в коем случае не используй тег <br/> и теги <ul> и <li>. Для выделения жирным используй тег <strong> вместо **, но не переусердствуй в использовании теги. Используй только теги, разрешенные в Телеграм и salebot. Сделай размер текста, чтобы поместился в сообщение telegram через salebot.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.content) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "3f1a041f-6ae4-48cd-ad03-73d45cf7811d",
      "name": "Rewrite",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Instagram. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. Вставь хештеги по смыслу в конце поста. Свойство href (ссылку) тега <a>, напиши как обычный текст потому что Instagram не понимает тег <a>. Тег <a> можешь оставить. После первой строки (она будет в названии фото) сделай перенос строки, чтобы остальной текст попал в описание.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "616d13bf-c025-4ea7-a178-d199994bec42",
      "name": "Rewrite Instagram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1480
      ]
    },
    {
      "parameters": {
        "content": "## Cling approach",
        "height": 365.20954205618943,
        "width": 1096.2191237516868
      },
      "id": "a662ee1c-420c-459b-b3cc-51ce62daea4f",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -680
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Instagram. Целевая аудитория — бизнесмены и предприниматели у которых есть свои офисы или занимаются строительством и проектированием загородных домов, зданий и бизнес центров. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. Вставь хештеги по смыслу в конце поста. Свойство href (ссылку) тега <a>, напиши как обычный текст потому что Instagram не понимает тег <a>. Тег <a> можешь оставить. После первой строки (она будет в названии фото) сделай перенос строки, чтобы остальной текст попал в описание.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "236e6e89-102d-42d0-922a-bcba5181835f",
      "name": "Rewrite Instagram B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Facebook. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Не забывай закрывать теги. Вставь хештеги по смыслу в конце поста.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "882d28f0-7e16-4194-9cb5-ff9e47cf6aa7",
      "name": "Rewrite Facebook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "facebook": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "a13dd547-8ae7-44d4-8653-69ba787f8fbc",
      "name": "Update Facebook Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        1660
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.facebook }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c37ab620-ba23-4b75-9d29-ca502e3214f7",
      "name": "Send Facebook Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        1660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Facebook. Целевая аудитория — бизнесмены и предприниматели у которых есть свои офисы или занимаются строительством и проектированием загородных домов, зданий и бизнес центров. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO Ключевые слова, фразы, запросы) в тексте и заголовках ключевые слова и фразы по этой тематике. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Обязтаельно закрывай все теги. В конце поста используй хештеги по смыслу.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "ca7f1469-2524-4033-9360-cff8ea8998c9",
      "name": "Rewrite Facebook B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "facebook_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "08e5a9d5-b8da-48f4-981e-01b8e44d286d",
      "name": "Update Facebook B2B Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        1820
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "1c7843c6-8ba6-4867-ae14-d455dd55cb62",
      "name": "Clean Unallowed Tags Facebook B2B",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        1820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "2db7cc58-c41a-4446-bde0-007b3a4d6b69",
      "name": "Clean Unallowed Tags Facebook",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        1660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.facebook_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bd85d5c5-aa7b-404d-b84a-7ed975d44545",
      "name": "Send Facebook B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "instagram_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "99ef5ad2-4e09-41c4-aca8-49bf657b34f0",
      "name": "Update Instagram B2B Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        1280
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "instagram": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "5062b167-ea5e-4bf4-9bc2-da5d05ad570c",
      "name": "Update Instagram Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        1480
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.instagram_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6508b16b-bcff-4c2c-995b-53b2e0cfd04e",
      "name": "Send Rewrite Instagram B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        1280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Telegram. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Проверь правильность написания тегов. Обязтаельно закрывай все теги. Вставь хештеги по смыслу в конце поста.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "c9f3353d-8974-4cd8-b346-3988b0b38881",
      "name": "Rewrite Telegram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        2000
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "telegram": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "c26b6c42-4e27-4fac-a73e-92feef29a311",
      "name": "Update Telegram Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        2000
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "5d5625fd-eb1f-4a65-9515-10122ee275ba",
      "name": "Clean Unallowed Tags Telegram",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        2000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.telegram }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "63ac4789-4578-4a7c-8b34-f73c7055cc8d",
      "name": "Send Telegram Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        2000
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Telegram. Целевая аудитория — бизнесмены и предприниматели у которых есть свои офисы или занимаются строительством и проектированием загородных домов, зданий и бизнес центров. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO Ключевые слова, фразы, запросы) в тексте и заголовках ключевые слова и фразы по этой тематике. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Обязтаельно закрывай все теги. В конце поста используй хештеги по смыслу.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "92dab187-881c-40e9-b24b-6c3b5762f317",
      "name": "Rewrite Telegram B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        2160
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "telegram_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "8b4df787-191b-40c9-b75b-6282d5ab4343",
      "name": "Update Telegram B2B Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        2160
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "26292956-70ad-40d8-bd37-3e718a016b8f",
      "name": "Clean Unallowed Tags Telegram B2B",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        2160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.facebook_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "697b66dc-0d6f-43b3-9db7-f12ca5cb05f9",
      "name": "Send Telegram B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        2160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.vk }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c2439ef2-c64f-45a2-8f4c-c85fec749677",
      "name": "VK",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -1180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.vk_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Image Gen B2B').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "407509bf-b3aa-426c-959d-61c2991d538b",
      "name": "VK B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -1020
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.pinterest }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "eced71da-91b1-4183-8dfb-885c9922a5e4",
      "name": "Pinterest",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -880
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.rewrite }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "45776f01-c7a5-49a0-8db4-f9f04cca24c4",
      "name": "Salebot Rewrite",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.facebook }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "726ad246-13fb-400f-b9bc-dbe792c1db20",
      "name": "Facebook",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.instagram }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9f9ed423-efcc-48f1-b9a6-3082b8814cd1",
      "name": "Instagram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.instagram_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Image Gen B2B').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c7db2a77-f76a-4977-8640-d1d5938afa9a",
      "name": "Instagram B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.pinterest_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Image Gen B2B').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "88244a02-be34-4ca6-ae26-a64b68db5e04",
      "name": "Pinterest B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.facebook_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Image Gen B2B').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7b057b0a-5bf9-4ab0-8a18-fdf359759fdd",
      "name": "Facebook B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        -40
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.telegram }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('image_gen').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "73119a8e-2a6d-4232-992f-3c3cbd2a7722",
      "name": "Telegram",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.telegram_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Image Gen B2B').item.json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "afdf2b43-32cd-4b4f-b503-d283ea7acdb5",
      "name": "Telegram B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6700,
        240
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Напиши промт на английском для генерации фотореалистичной картинки по тексту на русском языке для сегмента B2b. Только сам промт без лишних символов и знаков.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Switch').item.json.content) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "2413e942-cad1-441d-810b-56dcabfa2067",
      "name": "Image Description1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        -60
      ]
    },
    {
      "parameters": {
        "jsCode": "// Функция для удаления всех HTML-тегов\nfunction stripTags(content) {\n  return content.replace(/<\\/?[^>]+(>|$)/g, \"\"); // Удаляет все теги\n}\n\n// Функция для обрезки строки до заданного количества символов и добавления \"...\" в конце\nfunction trimToLength(content, maxLength) {\n  if (content.length > maxLength) {\n    return content.substring(0, maxLength - 3) + \"...\";\n  }\n  return content;\n}\n\n// Основной код\nconst MAX_TELEGRAM_LENGTH = 4096;\n\nreturn items.map(item => {\n  if (item.json && item.json.content) {\n    // Убираем все теги из content\n    item.json.content = stripTags(item.json.content);\n    // Обрезаем строку до максимальной длины для Telegram и добавляем \"...\"\n    item.json.content = trimToLength(item.json.content, MAX_TELEGRAM_LENGTH);\n  }\n  return item;\n});\n"
      },
      "id": "c69d72da-36cb-4139-98ef-f39b324d6737",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5540,
        -60
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "24b7a2b8c7d4563497ca48e07d0c76ba"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "e9e016c1-486a-4aa2-851f-c4361081c24d",
      "name": "Upload Image1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4920,
        -60
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "image_gen_b2b": "={{ $json.image_gen }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen_b2b",
              "displayName": "image_gen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "cd728e5b-3951-4173-a651-96500a83f951",
      "name": "Update image_gen B2B",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        5360,
        -60
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "vk",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "VK"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eb0e14b3-c49d-4e56-bb0c-88da69d189be",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "vk_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "VK B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c554324b-adac-4f25-b83e-7f690cdced54",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "pinterest",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pinterest"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d01b3763-7fb8-4411-a639-b82a792a2286",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "format",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "format"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65b621ea-8a0b-40ed-9c7f-c43ff7214169",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "pinterest_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pinterest B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b03a5a4b-3438-4d99-8df8-bfa9b12495db",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "instagram_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60f5dfb7-44d0-4c93-809e-aad99fef98d6",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "instagram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e553e69f-3e1a-447d-9912-b8e336e34aa7",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "facebook",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Facebook"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c0b706c-e48d-41db-86f7-08ede550d83b",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "facebook_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Facebook B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a330016-7553-417e-8c2b-17262a8032d8",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "telegram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Telegram"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b06b4515-0b68-4097-8f91-b20c93b2edb6",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "telegram_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Telegram B2B"
            }
          ]
        },
        "options": {}
      },
      "id": "426462b6-7c91-420c-9c1f-07ea070afdba",
      "name": "Social network1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        6480,
        -220
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2a985eb-cb2d-4f8d-9455-a7eacc4f66a8",
              "name": "image_gen",
              "value": "={{ $json.data.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f1690de0-176b-44b8-ad8e-81d1c68200a2",
      "name": "Image Gen B2B",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5180,
        -60
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"model\": \"gpt-4o-mini-2024-07-18\",\n   \"messages\": [\n      {\n         \"role\": \"system\",\n         \"content\": {{ JSON.stringify(\n   'Текст для изменения, не используя тег br/: ' \n   + $node[\"Webhook\"].json.body.old \n   + ' по промту. \\n\\nИсходный текст на случай необходимости возврата: ' \n   + $json[$node[\"Field to Get Original\"].json.field]\n) }}\n\n      },\n      {\n         \"role\": \"user\",\n         \"content\": {{ JSON.stringify($node[\"Webhook\"].json.body.promt) }}\n      }\n   ]\n}\n",
        "options": {}
      },
      "id": "d9fb7ba7-7b7f-4f10-a3c7-4aaca8bfd1cb",
      "name": "Rewrite by Promt",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2080,
        880
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE news\nSET {{ $json.field }} = '{{ $('Rewrite by Promt').item.json.choices[0].message.content }}'\nWHERE guid = '{{ $('Get GUID').item.json.url }}';\n",
        "options": {}
      },
      "id": "3c08fcf8-51dd-405f-bcc8-41920a978ecf",
      "name": "Update VK Rewrite1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2480,
        880
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2884bde-9f09-4db8-b0fc-f13efa142cab",
              "name": "field",
              "value": "={{ $('Webhook').item.json.body.format === 'format' ? 'rewrite' : $('Webhook').item.json.body.format }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d835c106-b3d8-41ab-8872-c16616e91a41",
      "name": "Field to Update",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем HTML списка новостей напрямую из ноды Webhook\nconst listHtml = $node[\"Webhook\"].json.body.list;\n\n// Извлекаем номер новости из ID в теле Webhook\nconst newsNumber = parseInt($node[\"Webhook\"].json.body.id, 10); // Преобразуем в число, если rawId существует\n\n// Регулярное выражение для поиска URL новости с данным номером\nconst regex = new RegExp(`<strong>\\\\s*${newsNumber}\\\\.\\\\s*<a href=\"([^\"]+)\"`, 'i');\n\n// Ищем URL новости с данным номером\nconst match = listHtml.match(regex);\nconst newsUrl = match ? match[1] : 'URL новости не найден';\n\n// Возвращаем только URL новости\nreturn [\n  {\n    json: {\n      url: newsUrl,\n      id: newsNumber\n    }\n  }\n];\n"
      },
      "id": "38ce9f35-e78a-4507-9f0d-c3c43a83027c",
      "name": "Get GUID",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $('Rewrite by Promt').item.json.choices[0].message.content }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Find Original').item.json.image_gen || $('Find Original').item.json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c6f3fd72-b0f1-45cb-8e86-f9a6e5bb4f2f",
      "name": "Send Rewrite",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        880
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "where": {
          "values": [
            {
              "column": "guid",
              "value": "={{ $('Get GUID').first().json.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "997cf9a5-8273-44e4-93bd-8c132ed8d06a",
      "name": "Find Original",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1320,
        900
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2884bde-9f09-4db8-b0fc-f13efa142cab",
              "name": "field",
              "value": "={{ $('Webhook').item.json.body.format === 'format' ? 'rewrite' : $('Webhook').item.json.body.format }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2f70ae3b-93a6-4faa-8b87-c9996cdbaf6e",
      "name": "Field to Get Original",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1100,
        900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2c9dcc1f-b1bb-4c58-a702-db6877542c74",
              "leftValue": "={{ $('Webhook').item.json.body.rewrite }}",
              "rightValue": "image",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "32e570fa-81f7-43b2-937e-745d104a3ac5",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1580,
        900
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Переведи на аглийский для промта изменения картини.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Webhook').item.json.body.promt) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "bd23cb2d-51f9-4f72-9c5d-1281a5eca24c",
      "name": "Promt translation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2000,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json[$node[\"Field to Get Original\"].json.field] }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Update Image').item.json.image_gen }}"
            },
            {}
          ]
        },
        "options": {}
      },
      "id": "e1528be5-6f1d-4d1d-b1f3-7d9931d9b89c",
      "name": "Send Image Update",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3220,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find Original').item.json.guid }}",
            "image_gen": "={{ $json.image_gen }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen_b2b",
              "displayName": "image_gen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "2fe70bad-5d8f-42c6-871c-a81ae1c0f9ac",
      "name": "Update Image Gen",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3020,
        1340
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2a985eb-cb2d-4f8d-9455-a7eacc4f66a8",
              "name": "image_gen",
              "value": "={{ $json.data.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f2e38f21-67ea-46cf-9135-595a44c0c259",
      "name": "Update Image",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2820,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json[$node[\"Webhook\"].json[\"body\"][\"format\"] === \"format\" ? \"rewrite\" : $node[\"Webhook\"].json[\"body\"][\"format\"]] }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen }}"
            }
          ]
        },
        "options": {}
      },
      "id": "240e7382-1f15-4a13-b4a9-de566b6ec8ef",
      "name": "Send to Salebot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6260,
        -220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1e241fee-a99c-4fb7-8fa0-564443699faf",
              "leftValue": "={{ $('Webhook').item.json.body.format }}",
              "rightValue": "b2b",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "000d60bd-ef8c-4cdb-8cd9-9bf359febd16",
      "name": "If not B2B",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2740,
        140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json[$node[\"Webhook\"].json[\"body\"][\"format\"] === \"format\" ? \"rewrite\" : $node[\"Webhook\"].json[\"body\"][\"format\"]] }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen_b2b }}"
            }
          ]
        },
        "options": {}
      },
      "id": "675faf6b-18dd-4a7a-ba6d-f88e20a1850c",
      "name": "Send to Salebot1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6220,
        -20
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "836ec140-1792-4c59-8e96-763475b771e2",
              "leftValue": "={{ $('Webhook').first().json.body.format }}",
              "rightValue": "b2b",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b1afcf3a-7016-432c-949f-8907908fdf23",
      "name": "If not B2B SB",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5780,
        -160
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE news\nSET {{ $json.field }} = '{{ $('Webhook').item.json.body.text }}'\nWHERE guid = '{{ $('Find news item').item.json.guid }}';\n",
        "options": {}
      },
      "id": "4b313400-c4d0-4c00-9113-4848b122703f",
      "name": "Update Text",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1280,
        80
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3579a05d-b73e-42b3-a259-30eeca231c81",
              "leftValue": "={{ $('Webhook').item.json.body.text }}",
              "rightValue": "text",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6ad23587-bdbc-45d8-9e72-7b943520a75b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ddeec8b7-1f5a-48d8-ab57-60ac81a414ab",
              "leftValue": "={{ $('Webhook').item.json.body.promt }}",
              "rightValue": "promt",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fbdac26e-0eeb-4da1-a1da-4c8599776021",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        720,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2884bde-9f09-4db8-b0fc-f13efa142cab",
              "name": "field",
              "value": "={{ $('Webhook').item.json.body.format === 'format' ? 'rewrite' : $('Webhook').item.json.body.format }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8b41ed7a-6602-4cfd-a352-d9218feca39a",
      "name": "Field",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1080,
        80
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $('Webhook').item.json.body.text }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Find news item').item.json.image_gen || $('Find news item').item.json.image}}"
            }
          ]
        },
        "options": {}
      },
      "id": "9eed4501-b2fc-41b9-9cad-b2084d1bd79c",
      "name": "Send Rewrite1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1660,
        80
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Find Original').item.json.image_gen || $('Find Original').item.json.image }}",
        "options": {}
      },
      "id": "e7b419f8-b272-439b-8a81-1ab7cf4de421",
      "name": "Download Image1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2200,
        1340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3f37002b-86de-438b-829d-911e963e44c1",
              "leftValue": "={{ $('Webhook').item.json.body.format }}",
              "rightValue": "b2b",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6a88ffc-3410-406d-a9a0-544117282765",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "24b7a2b8c7d4563497ca48e07d0c76ba"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "ff3766df-4fad-4f23-853d-a08704b952e0",
      "name": "Upload Image Update",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2620,
        1340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Переведи на аглийский для промта изменения картини.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Webhook').item.json.body.promt) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "9562c4d8-d805-4ade-aada-222e3c6e98b2",
      "name": "Promt translation1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        1660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json[$node[\"Field to Get Original\"].json.field] }}"
            },
            {
              "name": "image_url",
              "value": "={{ $('Update Image1').item.json.image_gen }}"
            },
            {}
          ]
        },
        "options": {}
      },
      "id": "9ef364ce-97db-4964-b193-305d3aa560d2",
      "name": "Send Image Update1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3180,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find Original').first().json.guid }}",
            "image_gen_b2b": "={{ $json.image_gen }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen_b2b",
              "displayName": "image_gen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "0327b032-c016-4c59-89f8-659d9093dd31",
      "name": "Update Image Gen1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2960,
        1660
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2a985eb-cb2d-4f8d-9455-a7eacc4f66a8",
              "name": "image_gen",
              "value": "={{ $json.data.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "40a0fae6-cfd3-43a9-aa1e-6362c7fb5196",
      "name": "Update Image1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2780,
        1660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stability.ai/v2beta/stable-image/generate/ultra",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer sk-J5hAQmHbk79jDUPg6bqOSdJQm38KpId2xGJdnIzKHBcvzJVc"
            },
            {
              "name": "accept",
              "value": "image/*"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $('Promt translation1').first().json.choices[0].message.content }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            },
            {
              "name": "strength",
              "value": "0.2"
            }
          ]
        },
        "options": {}
      },
      "id": "3c5dc593-b35b-4626-9ef9-dd69d75f3922",
      "name": "Regenerage Image1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2380,
        1660
      ]
    },
    {
      "parameters": {
        "url": "={{ $('Find Original').item.json.image_gen }}",
        "options": {}
      },
      "id": "72cd8cca-0e00-4800-88ba-17207f756a59",
      "name": "Download Image2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2160,
        1660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.imgbb.com/1/upload",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "24b7a2b8c7d4563497ca48e07d0c76ba"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "e173b7a3-3740-4c82-af86-ee5e46a22d26",
      "name": "Upload Image Update1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2580,
        1660
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем HTML списка новостей напрямую из ноды Webhook\nconst listHtml = $node[\"Webhook\"].json.body.list;\n\n// Извлекаем номер новости из ID в теле Webhook\nconst newsNumber = parseInt($node[\"Webhook\"].json.body.id, 10); // Преобразуем в число, если rawId существует\n\n// Регулярное выражение для поиска URL новости с данным номером\nconst regex = new RegExp(`<strong>\\\\s*${newsNumber}\\\\.\\\\s*<a href=\"([^\"]+)\"`, 'i');\n\n// Ищем URL новости с данным номером\nconst match = listHtml.match(regex);\nconst newsUrl = match ? match[1] : 'URL новости не найден';\n\n// Возвращаем только URL новости\nreturn [\n  {\n    json: {\n      url: newsUrl,\n      id: newsNumber\n    }\n  }\n];\n"
      },
      "id": "8ad2d752-7328-4b7a-ae19-1c818abe0e09",
      "name": "Get GUID1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        40,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stability.ai/v2beta/stable-image/generate/ultra",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer sk-J5hAQmHbk79jDUPg6bqOSdJQm38KpId2xGJdnIzKHBcvzJVc"
            },
            {
              "name": "accept",
              "value": "image/*"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $('Promt translation').first().json.choices[0].message.content }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            },
            {
              "name": "strength",
              "value": "0.5"
            }
          ]
        },
        "options": {}
      },
      "id": "e710a9d1-b75c-4aa2-b9bd-ec2551854bbd",
      "name": "Regenerage Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2420,
        1340
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=error"
            },
            {
              "name": "response",
              "value": "={{ $json.error.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5caf05ff-13b1-4c07-9845-a3d3a807753d",
      "name": "Send to Salebot2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4900,
        -280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stability.ai/v2beta/stable-image/generate/core",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer sk-J5hAQmHbk79jDUPg6bqOSdJQm38KpId2xGJdnIzKHBcvzJVc"
            },
            {
              "name": "accept",
              "value": "image/*"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.choices[0].message.content }}"
            },
            {
              "name": "output_format",
              "value": "png"
            }
          ]
        },
        "options": {}
      },
      "id": "71d4a268-9915-4ed0-93d6-a1c91c86c321",
      "name": "Generage Image SD",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4540,
        -500
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stability.ai/v2beta/stable-image/generate/core",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Bearer sk-J5hAQmHbk79jDUPg6bqOSdJQm38KpId2xGJdnIzKHBcvzJVc"
            },
            {
              "name": "accept",
              "value": "image/*"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.choices[0].message.content }}"
            },
            {
              "name": "output_format",
              "value": "png"
            }
          ]
        },
        "options": {}
      },
      "id": "5df73033-97cf-42d7-b102-68e838511895",
      "name": "Generage Image B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4620,
        -60
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "vk",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "VK"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eb0e14b3-c49d-4e56-bb0c-88da69d189be",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "vk_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "VK B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c554324b-adac-4f25-b83e-7f690cdced54",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "pinterest",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pinterest"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d01b3763-7fb8-4411-a639-b82a792a2286",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "format",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "format"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "65b621ea-8a0b-40ed-9c7f-c43ff7214169",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "pinterest_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pinterest B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b03a5a4b-3438-4d99-8df8-bfa9b12495db",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "instagram_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60f5dfb7-44d0-4c93-809e-aad99fef98d6",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "instagram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instagram"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e553e69f-3e1a-447d-9912-b8e336e34aa7",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "facebook",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Facebook"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c0b706c-e48d-41db-86f7-08ede550d83b",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "facebook_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Facebook B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1a330016-7553-417e-8c2b-17262a8032d8",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "telegram",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Telegram"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b06b4515-0b68-4097-8f91-b20c93b2edb6",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "telegram_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Telegram B2B"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aa8faeb0-608b-4962-bf87-13c5c5045ec0",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "dzen",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Dzen"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3bc32def-03b1-45c9-a096-cf26081267af",
                    "leftValue": "={{ $('Webhook').item.json.body.format }}",
                    "rightValue": "dzen_b2b",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Dzen B2B"
            }
          ]
        },
        "options": {}
      },
      "id": "98a137f9-18ac-4d2f-bdb0-665affcc0afc",
      "name": "Social network",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2420,
        460
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Yandex Дзен. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Проверь правильность написания тегов. Обязтаельно закрывай все теги. Вставь хештеги по смыслу в конце поста.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "8f6a238f-5972-4ac4-b41d-da4c7c4efb79",
      "name": "Rewrite Dzen",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        2360
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "dzen": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen_b2b",
              "displayName": "image_gen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dzen",
              "displayName": "dzen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "dzen_b2b",
              "displayName": "dzen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "f2289bd1-9567-4782-9cc1-c4d0dd62ecc7",
      "name": "Update Dzen Rewrite",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        2360
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "40e54837-a15d-42e5-bac5-7d0226df183a",
      "name": "Clean Unallowed Tags Dzen",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        2360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.dzen }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "594c6c26-4d45-4237-bedf-f3babef52253",
      "name": "Send Dzen Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4960,
        2360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Ты гениальный маркетолог, копирайтер и рерайтер текстов с 20-ти летним стажем. Сделай рерайт новости для соц сети Yandex Дзен B2B. Целевая аудитория — физические лица, которые имеют, строят или хотят построить свой загородный дом, коттедж или дачу. Не используй в своём тексте какое-либо форматирование, например звездочки, звёздочки в заголовках *, решетки # или квадратные скобки, только обычный текст. Каждое новое предложение начинай с новой строки. Используй в тексте эмоджи по смыслу в начале каждого абзаца. Разбивай текст на заголовки и абзацы, чтобы он визуально казался воздушным. Используй SEO в тексте и заголовках, ключевые слова и фразы по этой тематике и из исходной статьи. Придумай к каждому абзацу или разделу статьи SEO заголовок. Создай пост из этой новостной статьи, используя рерайтинг по маркетинговой методике AIDA. В tег <a> вставь только ссылку на эту новость. Проверь правильность написания тегов. Обязтаельно закрывай все теги. Вставь хештеги по смыслу в конце поста.\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": {{ JSON.stringify($('Find news item').first().json.rewrite) }}\n      }\n    ]\n  } ",
        "options": {}
      },
      "id": "2276c0a3-4ec9-4776-aff8-8247dd5304f5",
      "name": "Rewrite Dzen B2B",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        2520
      ]
    },
    {
      "parameters": {
        "jsCode": "// Список разрешённых тегов для Telegram\nconst allowedTagsTelegram = ['a', 'strong', 'i'];\n\n// Функция для экранирования специальных символов в тексте\nfunction escapeHtml(text) {\n  return text.replace(/[&<>]/g, function (match) {\n    switch (match) {\n      case '&':\n        return '&amp;';\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      default:\n        return match;\n    }\n  });\n}\n\n// Функция для обработки контента для Telegram (очистка от неразрешённых тегов)\nfunction processContentForTelegram(html, allowedTags) {\n  // Разбиваем HTML на теги и текстовые узлы\n  const regex = /(<\\/?[^>]+>)|([^<]+)/g;\n  let result = [];\n  let match;\n\n  while ((match = regex.exec(html)) !== null) {\n    if (match[1]) {\n      // Это тег\n      let tag = match[1];\n      // Извлекаем имя тега\n      let tagNameMatch = tag.match(/^<\\/?\\s*([^\\s>\\/]+)/);\n      if (tagNameMatch) {\n        let tagName = tagNameMatch[1].toLowerCase();\n        if (allowedTags.includes(tagName)) {\n          // Разрешённый тег, сохраняем его\n          result.push(tag);\n        } else {\n          // Игнорируем неразрешённые теги\n          result.push('');\n        }\n      } else {\n        // Некорректный тег, экранируем его\n        result.push(escapeHtml(tag));\n      }\n    } else if (match[2]) {\n      // Это текст, экранируем специальные символы\n      let text = match[2];\n      result.push(escapeHtml(text));\n    }\n  }\n\n  return result.join('');\n}\n\n// Основной код\nreturn items.map(item => {\n  if (item.json.vk) {\n    let originalVkContent = item.json.vk;\n\n    // Обработка контента для Telegram (очистка от неразрешённых тегов)\n    let cleanedVkContent = processContentForTelegram(originalVkContent, allowedTagsTelegram);\n\n    // Сохраняем результат в поле vk_cleaned\n    item.json.vk_cleaned = cleanedVkContent;\n  }\n  return item;\n});\n"
      },
      "id": "5d28fb01-7468-4f84-9fb9-41fa029dffda",
      "name": "Clean Unallowed Tags Dzen B2B",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4760,
        2520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chatter.salebot.pro/api/{{ $('Webhook').first().json.body.api_key }}/callback",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $('Webhook').first().json.body.client_id }}"
            },
            {
              "name": "message",
              "value": "=n8n"
            },
            {
              "name": "response",
              "value": "={{ $json.dzen_b2b }}"
            },
            {
              "name": "image_url",
              "value": "={{ $json.image_gen || $json.image || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "32e3cc37-299f-4995-9fbf-43f7b47570bc",
      "name": "Send Dzen B2B Preview",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4960,
        2520
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "news",
          "mode": "list",
          "cachedResultName": "news"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "guid": "={{ $('Find news item').item.json.guid }}",
            "dzen_b2b": "={{ $json.choices[0].message.content }}"
          },
          "matchingColumns": [
            "guid"
          ],
          "schema": [
            {
              "id": "guid",
              "displayName": "guid",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pubDate",
              "displayName": "pubDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "isoDate",
              "displayName": "isoDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen",
              "displayName": "image_gen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "percentage",
              "displayName": "percentage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "rewrite",
              "displayName": "rewrite",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk",
              "displayName": "vk",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "vk_b2b",
              "displayName": "vk_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest",
              "displayName": "pinterest",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pinterest_b2b",
              "displayName": "pinterest_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram",
              "displayName": "instagram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "instagram_b2b",
              "displayName": "instagram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook",
              "displayName": "facebook",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "facebook_b2b",
              "displayName": "facebook_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram",
              "displayName": "telegram",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "telegram_b2b",
              "displayName": "telegram_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "image_gen_b2b",
              "displayName": "image_gen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dzen",
              "displayName": "dzen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "dzen_b2b",
              "displayName": "dzen_b2b",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ca6803e3-393c-4e91-8517-2f6c44ee6854",
      "name": "Update Dzen Rewrite1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        4580,
        2520
      ],
      "credentials": {
        "postgres": {
          "id": "OGLaL0xoD8bs2EJd",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "4f571fc1-2844-4640-808b-c3c20717add3",
        "options": {}
      },
      "id": "f93d961b-ba18-4728-85fb-ec7bf59df22c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -120,
        320
      ],
      "webhookId": "4f571fc1-2844-4640-808b-c3c20717add3"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.api-ai.net",
            "user-agent": "python-requests/2.31.0",
            "content-length": "8551",
            "accept": "*/*",
            "accept-encoding": "gzip, deflate",
            "content-type": "application/json",
            "x-forwarded-for": "62.84.125.172",
            "x-forwarded-host": "n8n.api-ai.net",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "318b0a7e186c",
            "x-real-ip": "62.84.125.172"
          },
          "params": {},
          "query": {},
          "body": {
            "api_key": "ed09ac5a0f2c095a9d124faa32e33da7",
            "client_id": "606710306",
            "chat_id": "276351686",
            "list": "<h2>Список новостей для рерайта</h2>\n<table style=\"border-collapse:collapse; width:100%;\">\n<tr><td style=\"padding: 10px;\">\n        <strong>1. <a href=\"https://larta.com/ru/news/press-reliz-lartapro-hd-royal-grey-45\">Представляем новое архитектурное стекло LartaPro HD Royal Grey 45</a></strong><br>\n        <strong>Остекление фасадов</strong> и <strong>80%</strong><br>\n        04 октября 2024 года\nLarta Glass, крупнейший* производитель стекла в России, объявляет о запуске нового продукта — стекла с покрытием LartaPro HD Royal Grey 45. Этот продукт стал ответом на текущие по...<br>\n        <img src=\"https://static.tildacdn.com/tild3038-6437-4637-b265-373065646533/1212.jpg\" alt=\"Представляем новое архитектурное стекло LartaPro HD Royal Grey 45\" style=\"max-width: 100%; height: auto;\">\n      </td></tr>\n<tr><td style=\"padding: 10px;\">\n        <strong>2. <a href=\"https://larta.com/ru/news/izmeneniya-v-portfolio-produktov-larta-glass-oktyabr-2024\">Изменения в портфолио продуктов Larta Glass</a></strong><br>\n        <strong>Без темы</strong> и <strong>0%</strong><br>\n        04 октября 2024 года\nУважаемые коллеги и партнеры!В связи с изменением в портфолио продуктов на заводах группы компаний Larta Glass мы рекомендуем рассмотреть альтернативные варианты для тех позиций, ...<br>\n        <img src=\"https://i.ibb.co/MCP7Dyv/ultra.png\" alt=\"Изменения в портфолио продуктов Larta Glass\" style=\"max-width: 100%; height: auto;\">\n      </td></tr>\n<tr><td style=\"padding: 10px;\">\n        <strong>3. <a href=\"https://larta.com/news/portfolio-larta-glass-oktyabr\">Портфолио продуктов Larta Glass октябрь 2024</a></strong><br>\n        <strong>Без темы</strong> и <strong>0%</strong><br>\n        18 октября 2024 года\nУважаемые коллеги и партнеры!Информируем вас об актуальном портфолио продуктов, производимых на заводах группы компаний Larta Glass. Письмо для ознакомления доступно по ссылке.Есл...<br>\n        <img src=\"https://static.tildacdn.com/tild3062-6231-4965-b438-643862316666/IMG_9407_1690px.jpg\" alt=\"Портфолио продуктов Larta Glass октябрь 2024\" style=\"max-width: 100%; height: auto;\">\n      </td></tr>\n<tr><td style=\"padding: 10px;\">\n        <strong>4. <a href=\"https://alutech.ru/novosti-i-akcii/skidka-10-na-rollety-v-serebristom-tsvete/\">Скидка 10% на роллеты в серебристом цвете</a></strong><br>\n        <strong>Утепление и звукоизоляция окон</strong> и <strong>25%</strong><br>\n        Приобретите роллеты в серебристом цвете из классического профиля AR55N и получите на них скидку 10%.\n\n\n\t Акция действует в компании «РОЛ-ТЭК» до конца ноября 2024 года.\n\n\n\t Роллеты «АЛЮТЕХ» защищают к...<br>\n        <img src=\"https://i.ibb.co/f8d00SC/ultra.png\" alt=\"Скидка 10% на роллеты в серебристом цвете\" style=\"max-width: 100%; height: auto;\">\n      </td></tr>\n<tr><td style=\"padding: 10px;\">\n        <strong>5. <a href=\"https://larta.com/ru/news/configurator-interfejs-na-anglijskom-yazyke\">Интерфейс на английском языке и настройка пользовательского отчета: что нового в конфигураторе Larta Glass</a></strong><br>\n        <strong>Без темы</strong> и <strong>0%</strong><br>\n        24 сентября 2024 года\nLarta Glass представляет обновления для своего онлайн-конфигуратора. Новые функции открывают дополнительные возможности для партнеров и делают процесс выбора материалов еще более...<br>\n        <img src=\"https://static.tildacdn.com/tild3630-3462-4637-b765-663364393032/_-.jpg\" alt=\"Интерфейс на английском языке и настройка пользовательского отчета: что нового в конфигураторе Larta Glass\" style=\"max-width: 100%; height: auto;\">\n      </td></tr>\n</table>\n",
            "id": "1",
            "rewrite": "news",
            "old": "Список новостей для рерайта:\n\n1. <strong><a href=\"https://larta.com/ru/news/press-reliz-lartapro-hd-royal-grey-45\">Представляем новое архитектурное стекло LartaPro HD Royal Grey 45</a></strong> (<strong>Остекление фасадов</strong> и <strong>80%</strong>)\n<i>04 октября 2024 года\nLarta Glass, крупнейший* производитель стекла в России, объявляет о запуске нового продукта — стекла с покрытием LartaPro HD Royal Grey 45. Этот продукт стал ответом на текущие по...</i>\n\n2. <strong><a href=\"https://larta.com/ru/news/izmeneniya-v-portfolio-produktov-larta-glass-oktyabr-2024\">Изменения в портфолио продуктов Larta Glass</a></strong> (<strong>Без темы</strong> и <strong>0%</strong>)\n<i>04 октября 2024 года\nУважаемые коллеги и партнеры!В связи с изменением в портфолио продуктов на заводах группы компаний Larta Glass мы рекомендуем рассмотреть альтернативные варианты для тех позиций, ...</i>\n\n3. <strong><a href=\"https://larta.com/news/portfolio-larta-glass-oktyabr\">Портфолио продуктов Larta Glass октябрь 2024</a></strong> (<strong>Без темы</strong> и <strong>0%</strong>)\n<i>18 октября 2024 года\nУважаемые коллеги и партнеры!Информируем вас об актуальном портфолио продуктов, производимых на заводах группы компаний Larta Glass. Письмо для ознакомления доступно по ссылке.Есл...</i>\n\n4. <strong><a href=\"https://alutech.ru/novosti-i-akcii/skidka-10-na-rollety-v-serebristom-tsvete/\">Скидка 10% на роллеты в серебристом цвете</a></strong> (<strong>Утепление и звукоизоляция окон</strong> и <strong>25%</strong>)\n<i>Приобретите роллеты в серебристом цвете из классического профиля AR55N и получите на них скидку 10%.\n\n\n\t Акция действует в компании «РОЛ-ТЭК» до конца ноября 2024 года.\n\n\n\t Роллеты «АЛЮТЕХ» защищают к...</i>\n\n5. <strong><a href=\"https://larta.com/ru/news/configurator-interfejs-na-anglijskom-yazyke\">Интерфейс на английском языке и настройка пользовательского отчета: что нового в конфигураторе Larta Glass</a></strong> (<strong>Без темы</strong> и <strong>0%</strong>)\n<i>24 сентября 2024 года\nLarta Glass представляет обновления для своего онлайн-конфигуратора. Новые функции открывают дополнительные возможности для партнеров и делают процесс выбора материалов еще более...</i>\n\n",
            "format": "format",
            "promt": "promt",
            "text": "text"
          },
          "webhookUrl": "https://n8n.api-ai.net/webhook/4f571fc1-2844-4640-808b-c3c20717add3",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Find news item": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Image Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Description": {
      "main": [
        [
          {
            "node": "Generage Image SD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Draw Image": {
      "main": [
        [
          {
            "node": "Image ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Image Status": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image ID": {
      "main": [
        [
          {
            "node": "Request Image Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update image_gen": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fusionbrain.ai": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request TOKEN": {
      "main": [
        [
          {
            "node": "If not B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get image URL": {
      "main": [
        [
          {
            "node": "Image Ready?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If not B2B SB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image": {
      "main": [
        [
          {
            "node": "image_gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update VK Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags VK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Pinterest Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Pinterest",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags VK": {
      "main": [
        [
          {
            "node": "Send VK Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Pinterest": {
      "main": [
        [
          {
            "node": "Send Pinterest Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Rewrite": {
      "main": [
        [
          {
            "node": "Send Rewrite Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Request TOKEN",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Social network",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Social network",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "image_gen": {
      "main": [
        [
          {
            "node": "Update image_gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Ready?": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get image URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update VK B2B Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags VK B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags VK B2B": {
      "main": [
        [
          {
            "node": "Send VK B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Pinterest B2B Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Pinterest B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Pinterest B2B": {
      "main": [
        [
          {
            "node": "Send Pinterest B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image [KLING AI]": {
      "main": [
        [
          {
            "node": "Get image URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite VK": {
      "main": [
        [
          {
            "node": "Update VK Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite VK B2B": {
      "main": [
        [
          {
            "node": "Update VK B2B Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Pinterest": {
      "main": [
        [
          {
            "node": "Update Pinterest Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Pinterest B2B": {
      "main": [
        [
          {
            "node": "Update Pinterest B2B Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite": {
      "main": [
        [
          {
            "node": "Update Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Instagram": {
      "main": [
        [
          {
            "node": "Update Instagram Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Instagram B2B": {
      "main": [
        [
          {
            "node": "Update Instagram B2B Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Facebook": {
      "main": [
        [
          {
            "node": "Update Facebook Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Facebook Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Facebook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Facebook B2B": {
      "main": [
        [
          {
            "node": "Update Facebook B2B Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Facebook B2B Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Facebook B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Facebook B2B": {
      "main": [
        [
          {
            "node": "Send Facebook B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Facebook": {
      "main": [
        [
          {
            "node": "Send Facebook Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Instagram B2B Rewrite": {
      "main": [
        [
          {
            "node": "Send Rewrite Instagram B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Instagram Rewrite": {
      "main": [
        [
          {
            "node": "Send Rewrite Preview Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Telegram": {
      "main": [
        [
          {
            "node": "Update Telegram Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Telegram Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Telegram": {
      "main": [
        [
          {
            "node": "Send Telegram Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Telegram B2B": {
      "main": [
        [
          {
            "node": "Update Telegram B2B Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Telegram B2B Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Telegram B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Telegram B2B": {
      "main": [
        [
          {
            "node": "Send Telegram B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Description1": {
      "main": [
        [
          {
            "node": "Generage Image B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image1": {
      "main": [
        [
          {
            "node": "Image Gen B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update image_gen B2B": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If not B2B SB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Social network1": {
      "main": [
        [
          {
            "node": "VK",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "VK B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pinterest",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salebot Rewrite",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pinterest B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Instagram B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Instagram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Facebook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Facebook B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Gen B2B": {
      "main": [
        [
          {
            "node": "Update image_gen B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite by Promt": {
      "main": [
        [
          {
            "node": "Field to Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Field to Update": {
      "main": [
        [
          {
            "node": "Update VK Rewrite1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get GUID": {
      "main": [
        [
          {
            "node": "Field to Get Original",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update VK Rewrite1": {
      "main": [
        [
          {
            "node": "Send Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Original": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Field to Get Original": {
      "main": [
        [
          {
            "node": "Find Original",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Rewrite by Promt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Promt translation": {
      "main": [
        [
          {
            "node": "Download Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Image Gen": {
      "main": [
        [
          {
            "node": "Send Image Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Image": {
      "main": [
        [
          {
            "node": "Update Image Gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If not B2B": {
      "main": [
        [
          {
            "node": "Image Description",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Description1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If not B2B SB": {
      "main": [
        [
          {
            "node": "Send to Salebot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send to Salebot1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Field",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get GUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Field": {
      "main": [
        [
          {
            "node": "Update Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Text": {
      "main": [
        [
          {
            "node": "Send Rewrite1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image1": {
      "main": [
        [
          {
            "node": "Regenerage Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Promt translation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Promt translation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image Update": {
      "main": [
        [
          {
            "node": "Update Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Promt translation1": {
      "main": [
        [
          {
            "node": "Download Image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Image Gen1": {
      "main": [
        [
          {
            "node": "Send Image Update1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Image1": {
      "main": [
        [
          {
            "node": "Update Image Gen1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Regenerage Image1": {
      "main": [
        [
          {
            "node": "Upload Image Update1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image2": {
      "main": [
        [
          {
            "node": "Regenerage Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image Update1": {
      "main": [
        [
          {
            "node": "Update Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get GUID1": {
      "main": [
        [
          {
            "node": "Find news item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Regenerage Image": {
      "main": [
        [
          {
            "node": "Upload Image Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generage Image SD": {
      "main": [
        [
          {
            "node": "Upload Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send to Salebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generage Image B2B": {
      "main": [
        [
          {
            "node": "Upload Image1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send to Salebot2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Social network": {
      "main": [
        [
          {
            "node": "Rewrite VK",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite VK B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Pinterest",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Pinterest B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Instagram B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Instagram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Facebook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Facebook B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Telegram B2B",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Dzen",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Rewrite Dzen B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Dzen": {
      "main": [
        [
          {
            "node": "Update Dzen Rewrite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Dzen Rewrite": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Dzen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Dzen": {
      "main": [
        [
          {
            "node": "Send Dzen Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rewrite Dzen B2B": {
      "main": [
        [
          {
            "node": "Update Dzen Rewrite1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Unallowed Tags Dzen B2B": {
      "main": [
        [
          {
            "node": "Send Dzen B2B Preview",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Dzen Rewrite1": {
      "main": [
        [
          {
            "node": "Clean Unallowed Tags Dzen B2B",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Get GUID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "eab0d4ce-980d-489a-899d-42b7e89b1364",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "332f4e2842ac35bdf92bcf45820374737b808cfde08870402695ef84706bff04"
  },
  "id": "8NjPEBX1LU0bOxDu",
  "tags": []
}