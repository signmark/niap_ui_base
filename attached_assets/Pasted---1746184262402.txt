Если передать **одинаковые размеры и в параметры, и в промт**, технического конфликта не будет — но есть нюансы. Вот что происходит на самом деле:  

---

### **1. Когда это безопасно?**  
Если размеры **полностью идентичны** (например, и в промте, и в параметрах указано `1024x576`), большинство моделей:  
- Проигнорируют дублирование,  
- Возьмут размер из параметров (если они есть),  
- Промт с упоминанием формата может слегка улучшить композицию.  

**Пример корректного запроса**:  
```python
{
  "prompt": "landscape_16_9, cyberpunk city, 1024x576",  # Подсказка для композиции
  "width": 1024,  # Фактический размер
  "height": 576
}
```  
*(Такой запрос не сломает генерацию.)*  

---

### **2. Почему может возникнуть конфликт?**  
Проблемы возможны, если:  
- **Параметры и промт не совпадают** (например, `width: 1024` в параметрах и `portrait_9_16` в промте).  
- **Модель интерпретирует промт буквально** (некоторые версии SD 1.5 пытаются "растянуть" изображение под текст).  
- **Сервис использует промт для постобработки** (например, обрезка под `9:16` после генерации в `1:1`).  

**Пример проблемного запроса**:  
```python
{
  "prompt": "portrait_9_16, a warrior",  # Ожидает 576x1024
  "width": 1024,  # Фактически 1:1
  "height": 1024
}
```  
Результат:  
- Изображение может быть обрезано,  
- Появится артефакты растяжения,  
- Композиция будет "сплющенной".  

---

### **3. Что говорят разработчики?**  
- **Stable Diffusion (AUTOMATIC1111)**:  
  > "Параметры `width/height` всегда приоритетны. Указание формата в промте — лишь подсказка для композиции".  
- **Fooocus**:  
  > "Если размер указан в промте (`portrait_9_16`), он переопределит параметры, если они не заданы явно".  
- **MidJourney**:  
  > "Только промт. Параметры типа `--ar 16:9` строго контролируют размер".  

---

### **4. Когда дублирование оправдано?**  
1. **Для LoRA-адаптеров** — промт помогает с композицией:  
   ```python
   {
     "prompt": "<lora:cyberpunk:1.0>, portrait_9_16, neon samurai",
     "width": 576,
     "height": 1024
   }
   ```  
2. **В Fast SDXL** — если хотите подчеркнуть пропорции:  
   ```python
   {
     "prompt": "ultra-wide 21:9, spaceship fleet",
     "width": 2048,
     "height": 864
   }
   ```  

---

### **5. Главное правило**  
- **Если API позволяет задать `width/height` — используйте только их**.  
- **Если модель требует промт (например, Fooocus) — пишите только там**.  
- **Дублируйте только для сложных сценариев** (LoRA + контроль композиции).  

**Иначе**:  
- Вы зря тратите токены,  
- Рискуете получить артефакты,  
- Усложняете отладку.  

Если сомневаетесь — **тестируйте на простых промтах** вроде `"red square"` с разными комбинациями.