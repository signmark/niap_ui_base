Конечно! Вот доработанный промт для генерации системы, аналогичной текущей реализации нового Агента, с учетом всех нюансов и технических деталей. Этот промт поможет вам создать интерфейс и функционал за минимальное количество шагов и чекпоинтов:

---

**Промт для генерации системы, аналогичной текущей реализации нового Агента:**

"Разработай подробный план и техническую реализацию системы, которая будет копировать функционал и интерфейс текущего Агента. Учти следующие аспекты:

1. **Архитектура системы:**
   - Опиши, как должна быть организована архитектура системы (микросервисы, монолит, гибридный подход).
   - Укажи, какие компоненты должны быть выделены в отдельные модули (например, обработка запросов, управление данными, интерфейс взаимодействия с пользователем).
   - Предложи оптимальные технологии для реализации (например, Python для бэкенда, React/Vue для фронтенда, Docker для контейнеризации).

2. **Интерфейс пользователя:**
   - Опиши, как должен выглядеть интерфейс, чтобы он был максимально похож на текущий Агент.
   - Укажи, какие элементы интерфейса должны быть реализованы (например, чат-окно, кнопки управления, панель настроек).
   - Предложи способы оптимизации интерфейса для минимального количества шагов и чекпоинтов (например, использование готовых библиотек компонентов).

3. **Функционал системы:**
   - Перечисли все ключевые функции текущего Агента, которые должны быть реализованы (например, обработка естественного языка, генерация ответов, управление диалогом).
   - Опиши, как эти функции должны быть интегрированы в систему.
   - Укажи, какие API или библиотеки можно использовать для ускорения разработки (например, OpenAI API для NLP, TensorFlow/PyTorch для машинного обучения).

4. **Обработка данных:**
   - Опиши, как должна быть организована работа с данными (например, хранение, обработка, анализ).
   - Укажи, какие базы данных или хранилища данных лучше использовать (например, PostgreSQL, MongoDB, Redis).
   - Предложи способы оптимизации обработки данных для повышения производительности.

5. **Интеграция и тестирование:**
   - Опиши, как должна быть организована интеграция всех компонентов системы.
   - Укажи, какие инструменты для тестирования можно использовать (например, pytest для бэкенда, Jest для фронтенда).
   - Предложи стратегию тестирования, чтобы минимизировать количество чекпоинтов и шагов.

6. **Документация и поддержка:**
   - Опиши, как должна быть организована документация для системы (например, README файлы, Swagger для API).
   - Укажи, какие инструменты для автоматизации документации можно использовать (например, Sphinx, JSDoc).
   - Предложи способы организации поддержки системы (например, логгирование, мониторинг, алертинг).

7. **Оптимизация и масштабирование:**
   - Опиши, как можно оптимизировать систему для минимального количества шагов и чекпоинтов.
   - Укажи, какие подходы к масштабированию можно использовать (например, горизонтальное масштабирование, кэширование).
   - Предложи способы автоматизации процессов для ускорения разработки (например, CI/CD pipelines, скрипты для автоматизации задач).

8. **Безопасность:**
   - Опиши, как должна быть организована безопасность системы (например, аутентификация, авторизация, шифрование данных).
   - Укажи, какие инструменты и библиотеки можно использовать для обеспечения безопасности (например, OAuth, JWT, bcrypt).

9. **Дополнительные рекомендации:**
   - Предложи дополнительные рекомендации по ускорению разработки и улучшению качества системы.
   - Укажи, какие ресурсы (документация, туториалы, примеры кода) могут быть полезны для реализации проекта.

Цель: создать максимально точную копию текущего Агента с минимальными затратами времени и ресурсов, используя современные технологии и подходы."

---

Этот промт охватывает все ключевые аспекты разработки системы, аналогичной текущему Агенту, и поможет вам получить детальный план реализации. Если нужно что-то уточнить или добавить, дайте знать!