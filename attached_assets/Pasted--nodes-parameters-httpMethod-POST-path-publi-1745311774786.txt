{
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "publish-instagram",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f2a07c49-523e-4e51-94d0-1697db5d6890",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -2920,
        300
      ],
      "webhookId": "publish-instagram"
    },
    {
      "parameters": {
        "jsCode": "// Подготовка параметров\nreturn {\n  contentId: $input.item.json.body.contentId,\n  campaignId: $input.item.json.body.campaignId\n};"
      },
      "id": "dbd26bff-5782-40f4-b42d-b403c52f0618",
      "name": "Подготовка параметров",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -2740,
        300
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "campaign_content",
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $json.contentId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ce8bb11e-3338-42ac-b305-a39692b5d9ef",
      "name": "Получение контента",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2520,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "lO4gl1E2I2lsrRce",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.id }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "2a7d5ab1-c8cb-45b0-98ce-e32d231ca59a",
      "name": "Контент найден?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2260,
        300
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": "public",
        "table": "user_campaigns",
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $json.campaign_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "87680bc7-6bba-4db9-b3ce-c399757714f7",
      "name": "Получение настроек кампании",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2000,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "lO4gl1E2I2lsrRce",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Получаем данные из предыдущих нод\nconst content = $node[\"Получение контента\"].json || {};\nconst campaign = $node[\"Получение настроек кампании\"].json || {};\n\n// Получаем настройки Instagram из кампании\nlet instagramAccessToken, instagramAccountId;\n\n// Проверяем наличие структуры social_media_settings\nif (campaign.social_media_settings) {\n  try {\n    const settings = typeof campaign.social_media_settings === 'string' \n      ? JSON.parse(campaign.social_media_settings) \n      : campaign.social_media_settings;\n    \n    if (settings.instagram) {\n      instagramAccessToken = settings.instagram.access_token;\n      instagramAccountId = settings.instagram.account_id;\n    }\n  } catch (error) {\n    console.error(\"Ошибка при разборе настроек:\", error);\n  }\n}\n\n// Форматируем сообщение для Instagram\nfunction formatInstagramMessage(message) {\n  if (!message) return \"\";\n  \n  let formatted = message\n    .replace(/<\\/?p>/g, \"\") // Удаляем <p> теги\n    .replace(/<br\\s*\\/?>/g, \"\\n\") // Заменяем <br> на перенос строки\n    .replace(/<\\/?strong>/g, \"*\") // Заменяем <strong> на *\n    .replace(/<\\/?em>/g, \"_\") // Заменяем <em> на _\n    .trim();\n  \n  if (formatted.length > 2200) {\n    formatted = formatted.substring(0, 2197) + \"...\";\n  }\n  \n  return formatted;\n}\n\n// Определяем тип контента и подготавливаем данные\nlet contentType = \"image\";\nlet message = formatInstagramMessage(content.content);\nlet imageUrl = content.image_url;\nlet videoUrl = content.video_url;\n\nif (videoUrl) {\n  contentType = \"video\";\n} else if (imageUrl) {\n  contentType = \"image\";\n} else {\n  contentType = \"error\";\n  console.error(\"Нет изображения или видео для публикации в Instagram\");\n}\n\nreturn {\n  content_id: content.id,\n  campaign_id: content.campaign_id,\n  instagram_access_token: instagramAccessToken,\n  instagram_account_id: instagramAccountId,\n  content_type: contentType,\n  message: message,\n  image_url: imageUrl,\n  video_url: videoUrl\n};\n"
      },
      "id": "7fc15eea-dda2-4918-b206-50fda665bca6",
      "name": "Подготовка данных для Instagram",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1800,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.content_type }}",
              "value2": "image"
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.content_type === \"video\" }}\n",
              "value2": "={{ true }}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "4f710604-35b6-4f89-a8cd-8cd6c4128641",
      "name": "Проверка типа контента",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1360,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ffdaee59-acb6-427e-94f0-639509de990f",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f27478a9-6cb3-4484-9d5e-98781afa2bd4",
      "name": "Успешное создание медиа?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        120,
        60
      ]
    },
    {
      "parameters": {
        "jsCode": "// Получаем данные\nconst instagramData = $node[\"Подготовка данных для Instagram\"].json;\nconst publishResponse = $node[\"Публикация media\"].json || {};\n\n// Подготавливаем данные для social_platforms\nlet socialPlatforms = {};\n\n// Получаем текущие данные о социальных платформах\nif ($node[\"Получение контента\"].json.social_platforms) {\n  try {\n    socialPlatforms = typeof $node[\"Получение контента\"].json.social_platforms === 'string' \n      ? JSON.parse($node[\"Получение контента\"].json.social_platforms) \n      : $node[\"Получение контента\"].json.social_platforms;\n  } catch (error) {\n    console.error(\"Ошибка при разборе social_platforms:\", error);\n  }\n}\n\n// Проверяем успешность публикации\nif (publishResponse && publishResponse.id) {\n  // Формируем базовые данные о публикации\n  const instagramPost = {\n    status: \"published\",\n    postId: publishResponse.id,\n    platform: \"instagram\",\n    publishedAt: new Date().toISOString(),\n    postUrl: \"\" // Инициализируем поле\n  };\n  \n  // Если есть данные из ноды \"Получение permalink\" (добавьте эту ноду в workflow)\n  if ($node[\"Получение permalink\"]?.json?.permalink) {\n    instagramPost.postUrl = $node[\"Получение permalink\"].json.permalink;\n  } \n  // Альтернативный вариант - формируем URL вручную если знаем shortcode\n  else if (publishResponse.shortcode) {\n    instagramPost.postUrl = `https://www.instagram.com/p/${publishResponse.shortcode}/`;\n  }\n  // Если нет данных о ссылке, оставляем поле пустым\n  else {\n    console.warn(\"Не удалось получить permalink для поста\");\n  }\n  \n  socialPlatforms.instagram = instagramPost;\n  console.log(\"Публикация в Instagram успешна:\", publishResponse.id);\n} else {\n  socialPlatforms.instagram = {\n    status: \"failed\",\n    error: JSON.stringify(publishResponse) || \"Нет ответа от Instagram API\",\n    platform: \"instagram\",\n    updatedAt: new Date().toISOString()\n  };\n  console.error(\"Ошибка публикации в Instagram:\", publishResponse);\n}\n\nreturn {\n  social_platforms: JSON.stringify(socialPlatforms),\n  // Дополнительно возвращаем данные для отладки\n  debug: {\n    publishResponse,\n    permalinkData: $node[\"Получение permalink\"]?.json\n  }\n};"
      },
      "id": "27eef7aa-0fb0-4116-a53e-bbda82eab00d",
      "name": "Подготовка данных обновления",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        120
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": "public",
        "table": "campaign_content",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Подготовка данных для Instagram').item.json.content_id }}",
            "campaign_id": "={{ $('Подготовка данных для Instagram').item.json.campaign_id }}",
            "published_at": "={{ $now }}",
            "social_platforms": "={{ $json.social_platforms }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "campaign_id",
              "displayName": "campaign_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content",
              "displayName": "content",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "content_type",
              "displayName": "content_type",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "video_url",
              "displayName": "video_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "keywords",
              "displayName": "keywords",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "scheduled_at",
              "displayName": "scheduled_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "published_at",
              "displayName": "published_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "social_platforms",
              "displayName": "social_platforms",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "additional_images",
              "displayName": "additional_images",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "additional_media",
              "displayName": "additional_media",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "e839aaa6-0579-4b45-802e-e8d579d293a9",
      "name": "Обновление статуса",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        940,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "lO4gl1E2I2lsrRce",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "33a4796e-1b16-4ffe-9160-d99027f37788",
      "name": "Завершение",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1240,
        260
      ]
    },
    {
      "parameters": {
        "jsCode": "return {\n  social_platforms: JSON.stringify({\n    instagram: {\n      status: \"failed\",\n      error: \"Контент не найден или отсутствует изображение\",\n      platform: \"instagram\",\n      updatedAt: new Date().toISOString()\n    }\n  })\n};"
      },
      "id": "4f82476b-fdc7-4fd1-a4b9-fe249a5b712c",
      "name": "Ошибка контента",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -840,
        420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v20.0/{{ $('Получение настроек кампании').item.json.social_media_settings.instagram.businessAccountId }}/media",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "image_url",
              "value": "={{ $json.image_url }}"
            },
            {
              "name": "caption",
              "value": "={{ $json.message }}"
            },
            {
              "name": "access_token",
              "value": "={{ $('Получение настроек кампании').item.json.social_media_settings.instagram.token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1060,
        80
      ],
      "id": "0b24892c-d05d-4967-9004-efcbbe118e51",
      "name": "Создание media",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "creation_id",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -840,
        -180
      ],
      "name": "Сохранить creation_id",
      "id": "0c6aea3f-49ba-4577-8d48-c5d058edbb22"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v19.0/{{ $('Получение настроек кампании').item.json.social_media_settings.instagram.businessAccountId }}/media_publish",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "creation_id",
              "value": "={{ $('Сохранить creation_id').item.json.creation_id }}"
            },
            {
              "name": "access_token",
              "value": "={{ $('Получение настроек кампании').item.json.social_media_settings.instagram.token }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        60
      ],
      "name": "Публикация media",
      "id": "c7fce5c5-da1d-4982-8ccd-f366384c7827"
    },
    {
      "parameters": {
        "url": "=https://graph.facebook.com/v18.0/{{ $json.id }}?fields=permalink,shortcode&access_token={{ $('Получение настроек кампании').item.json.social_media_settings.instagram.token }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        80
      ],
      "id": "dc0932c6-cf00-491e-921f-ce84cbf51c61",
      "name": "Получение permalink"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "278b7f6d-f8c1-4947-b036-541fc29ae917",
              "leftValue": "={{ $json.content_type === \"video\" }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1580,
        160
      ],
      "id": "8441f6de-41f1-4576-8a0f-5e970c89e473",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v19.0/{{ $('Получение настроек кампании').item.json.social_media_settings.instagram.businessAccountId }}/media",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"media_type\": \"REELS\",\n  \"video_url\": \"{{ $json.video_url }}\",\n  \"caption\": \"{{ $json.message }}\",\n  \"access_token\": \"{{ $('Получение настроек кампании').item.json.social_media_settings.instagram.token }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        0
      ],
      "id": "c61e5989-3c43-481d-bafd-e7dd10c2f918",
      "name": "Контент с видео",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=https://graph.facebook.com/v19.0/{{ $json.creation_id }}?fields=status_code&access_token={{ $('Получение настроек кампании').item.json.social_media_settings.instagram.token }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        -180
      ],
      "id": "e3672cff-becc-4434-9e68-fd3aceac0e4c",
      "name": "Проверить статус"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c7e1d62b-53b7-4bf5-a0ef-47d19dd38687",
              "leftValue": "={{ $json.status_code }}",
              "rightValue": "FINISHED",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -300,
        -180
      ],
      "id": "5451f7de-fab4-44d6-882e-b9011b2c6b50",
      "name": "Видео обработано?"
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Подготовка параметров",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Подготовка параметров": {
      "main": [
        [
          {
            "node": "Получение контента",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение контента": {
      "main": [
        [
          {
            "node": "Контент найден?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Контент найден?": {
      "main": [
        [
          {
            "node": "Получение настроек кампании",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ошибка контента",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение настроек кампании": {
      "main": [
        [
          {
            "node": "Подготовка данных для Instagram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Подготовка данных для Instagram": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Проверка типа контента": {
      "main": [
        [
          {
            "node": "Создание media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ошибка контента",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Успешное создание медиа?": {
      "main": [
        [
          {
            "node": "Получение permalink",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Подготовка данных обновления": {
      "main": [
        [
          {
            "node": "Обновление статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Обновление статуса": {
      "main": [
        [
          {
            "node": "Завершение",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ошибка контента": {
      "main": [
        [
          {
            "node": "Обновление статуса",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Создание media": {
      "main": [
        [
          {
            "node": "Сохранить creation_id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ошибка контента",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Сохранить creation_id": {
      "main": [
        [
          {
            "node": "Проверить статус",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Публикация media": {
      "main": [
        [
          {
            "node": "Успешное создание медиа?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Получение permalink": {
      "main": [
        [
          {
            "node": "Подготовка данных обновления",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Контент с видео",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Проверка типа контента",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Контент с видео": {
      "main": [
        [
          {
            "node": "Сохранить creation_id",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Проверить статус": {
      "main": [
        [
          {
            "node": "Видео обработано?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Видео обработано?": {
      "main": [
        [],
        [
          {
            "node": "Публикация media",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Webhook": [
      {
        "headers": {
          "host": "n8n.nplanner.ru",
          "user-agent": "node-fetch",
          "content-length": "52",
          "accept": "*/*",
          "accept-encoding": "gzip, deflate, br",
          "content-type": "application/json",
          "x-forwarded-for": "34.71.76.247",
          "x-forwarded-host": "n8n.nplanner.ru",
          "x-forwarded-port": "443",
          "x-forwarded-proto": "https",
          "x-forwarded-server": "d421e85b29ac",
          "x-real-ip": "34.71.76.247"
        },
        "params": {},
        "query": {},
        "body": {
          "contentId": "4a2cc734-199b-4723-919f-88c5028cd464"
        },
        "webhookUrl": "https://n8n.nplanner.ru/webhook/publish-instagram",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d69b135e70f406a0ace9f751f1d688634763e75d1dec57b0a74654d8144965c4"
  }
}