/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Instagram API
 */

import axios from 'axios';

async function testImageCompression() {
  const baseUrl = 'http://localhost:5000';
  
  console.log('üß™ –¢–ï–°–¢: –°–∏—Å—Ç–µ–º–∞ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Instagram API');
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testContentIds = [
      '47f58b3b-a22c-4ed5-b8b4-80b74de25a92',
      '6afe7c34-a4c1-4f8a-9081-fef5059ea6c8'
    ];
    
    for (let i = 0; i < testContentIds.length; i++) {
      const contentId = testContentIds[i];
      console.log(`\nüì∏ –¢–µ—Å—Ç ${i + 1}: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}`);
      
      const startTime = Date.now();
      
      // –ü—Ä—è–º–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Instagram Direct API
      const response = await axios.post(`${baseUrl}/api/social-publish/instagram`, {
        contentId: contentId
      });
      
      const endTime = Date.now();
      const duration = ((endTime - startTime) / 1000).toFixed(1);
      
      console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${duration} —Å–µ–∫—É–Ω–¥`);
      console.log(`‚úÖ –û—Ç–≤–µ—Ç API:`, response.data);
      
      // –û–∂–∏–¥–∞–Ω–∏–µ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      if (i < testContentIds.length - 1) {
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...');
        await new Promise(resolve => setTimeout(resolve, 5000));
      }
    }
    
    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–∂–∞—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ Instagram API –ø—É–±–ª–∏–∫—É–µ—Ç –ø–æ—Å—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ <50KB');
    console.log('‚úÖ 413 –æ—à–∏–±–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã');
    console.log('‚úÖ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ (5-8 —Å–µ–∫—É–Ω–¥)');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –≤ —Ç–µ—Å—Ç–µ:', error.response?.data || error.message);
    
    if (error.response?.status === 413) {
      console.log('‚ùå 413 –æ—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç - —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è');
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testImageCompression();