/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Instagram Private API
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ Instagram –∫–ª–∏–µ–Ω—Ç–∞
 */

const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
const INSTAGRAM_USERNAME = 'dsignmark';
const INSTAGRAM_PASSWORD = 'K<2Y#DJh-<WCb!S';

// –ü—Ä–æ—Å—Ç–æ–π fetch –¥–ª—è Node.js
const http = require('http');
const { URL } = require('url');

const fetch = async (url, options = {}) => {
  return new Promise((resolve, reject) => {
    const parsedUrl = new URL(url);
    
    const requestOptions = {
      hostname: parsedUrl.hostname,
      port: parsedUrl.port || 5000,
      path: parsedUrl.pathname + parsedUrl.search,
      method: options.method || 'GET',
      headers: options.headers || {}
    };
    
    const req = http.request(requestOptions, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        resolve({
          status: res.statusCode,
          json: async () => JSON.parse(data),
          text: async () => data
        });
      });
    });
    
    req.on('error', reject);
    
    if (options.body) {
      req.write(options.body);
    }
    
    req.end();
  });
};

async function testDirectInstagramPosting() {
  console.log('\nüöÄ === –¢–ï–°–¢ –ü–†–Ø–ú–û–ô –ü–£–ë–õ–ò–ö–ê–¶–ò–ò INSTAGRAM ===\n');

  try {
    // –®–∞–≥ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ Instagram –∫–ª–∏–µ–Ω—Ç–∞
    console.log('1Ô∏è‚É£ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Instagram...');
    const authResponse = await fetch('http://localhost:5000/api/instagram-direct/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: INSTAGRAM_USERNAME,
        password: INSTAGRAM_PASSWORD,
        campaignId: CAMPAIGN_ID
      })
    });

    const authData = await authResponse.json();
    console.log('üîê –†–µ–∑—É–ª—å—Ç–∞—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', {
      success: authData.success,
      userId: authData.userId,
      status: authData.status,
      cached: authData.cached
    });

    if (!authData.success) {
      throw new Error(`–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ${authData.error || authData.message}`);
    }

    // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Instagram –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Instagram –∫–ª–∏–µ–Ω—Ç–∞...');
    const statusResponse = await fetch('http://localhost:5000/api/instagram-direct/status', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username: INSTAGRAM_USERNAME })
    });

    const statusData = await statusResponse.json();
    console.log('üìä –°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞:', {
      hasIgClient: statusData.hasIgClient,
      sessionValid: statusData.sessionValid,
      userId: statusData.userId
    });

    if (!statusData.hasIgClient) {
      throw new Error('Instagram Private API –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –®–∞–≥ 3: –ü—Ä—è–º–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Instagram Direct API
    console.log('\n3Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞...');
    const postContent = `üî• –¢–µ—Å—Ç Instagram Private API –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!
–í—Ä–µ–º—è: ${new Date().toLocaleTimeString('ru-RU')}
–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ Instagram –∫–ª–∏–µ–Ω—Ç.

#test #instagram #privateapi #smm`;

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞ (1x1 –ø–∏–∫—Å–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞)
    const testImageBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==';

    const publishResponse = await fetch('http://localhost:5000/api/instagram-direct/publish-photo', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: INSTAGRAM_USERNAME,
        imageData: testImageBase64,
        caption: postContent,
        campaignId: CAMPAIGN_ID
      })
    });

    const publishData = await publishResponse.json();
    console.log('üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', {
      success: publishData.success,
      status: publishData.status,
      postId: publishData.postId,
      postUrl: publishData.postUrl,
      message: publishData.message || publishData.error
    });

    if (publishData.success) {
      console.log('\n‚úÖ === –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê ===');
      console.log('üîó URL –ø–æ—Å—Ç–∞:', publishData.postUrl);
      console.log('üÜî ID –ø–æ—Å—Ç–∞:', publishData.postId);
    } else {
      console.log('\n‚ùå === –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨ ===');
      console.log('üí• –û—à–∏–±–∫–∞:', publishData.error || publishData.message);
    }

    return {
      success: publishData.success,
      postUrl: publishData.postUrl,
      postId: publishData.postId,
      authResult: authData,
      statusResult: statusData
    };

  } catch (error) {
    console.error('\n‚ùå === –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê ===');
    console.error('üí• –î–µ—Ç–∞–ª–∏:', error.message);
    
    return {
      success: false,
      error: error.message
    };
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testDirectInstagramPosting()
    .then(result => {
      console.log('\nüèÅ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
      process.exit(result.success ? 0 : 1);
    })
    .catch(error => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}