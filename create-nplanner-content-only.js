#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru –ë–ï–ó –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö
 * –¢–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–∏
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e'; // Nplanner.ru campaign

console.log('üìù –°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru (—Ç–æ–ª—å–∫–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∏)...');

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
const contentTopics = [
  {
    topic: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
    angle: '–ö–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º',
    audience: '–ì–ª–∞–≤–Ω—ã–µ –≤—Ä–∞—á–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–ª–∏–Ω–∏–∫'
  },
  {
    topic: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è',
    angle: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤—Ä–∞—á–µ–π',
    audience: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä–∏'
  },
  {
    topic: '–ö–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è',
    angle: '–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤',
    audience: '–í—Ä–∞—á–∏ –∏ –º–µ–¥—Å–µ—Å—Ç—Ä—ã'
  },
  {
    topic: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤',
    angle: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤',
    audience: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π'
  },
  {
    topic: '–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—ã',
    angle: '–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ü–∏—Ñ—Ä–æ–≤—ã–º —Ä–µ—à–µ–Ω–∏—è–º –≤ –º–µ–¥–∏—Ü–∏–Ω–µ',
    audience: 'IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –≤ –º–µ–¥–∏—Ü–∏–Ω–µ'
  }
];

async function createContent() {
  const headers = {
    'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
    'Content-Type': 'application/json'
  };

  const createdContent = [];

  for (let i = 0; i < contentTopics.length; i++) {
    const topic = contentTopics[i];
    
    console.log(`\nüìÑ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç ${i + 1}/${contentTopics.length}: ${topic.topic}`);
    
    try {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ endpoint –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑ –∞–Ω–∫–µ—Ç—ã
      const response = await axios.post(
        `${API_BASE}/generate-questionnaire-content/${CAMPAIGN_ID}`,
        {
          topic: topic.topic,
          angle: topic.angle,
          targetAudience: topic.audience,
          createOnly: true, // –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç—å, –Ω–µ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
          platforms: ['vk', 'telegram'],
          postType: 'text'
        },
        { headers }
      );

      if (response.data && response.data.success) {
        console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç "${topic.topic}" —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        console.log(`   ID: ${response.data.contentId || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${response.data.title || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        
        createdContent.push({
          topic: topic.topic,
          id: response.data.contentId,
          title: response.data.title,
          status: 'draft'
        });
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ "${topic.topic}"`);
        console.log(`   –û—Ç–≤–µ—Ç: ${JSON.stringify(response.data, null, 2)}`);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ "${topic.topic}":`, error.response?.data || error.message);
    }
  }

  return createdContent;
}

async function main() {
  try {
    console.log('üè• –ö–æ–º–ø–∞–Ω–∏—è: Nplanner.ru');
    console.log('üéØ –ê—É–¥–∏—Ç–æ—Ä–∏—è: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã');
    console.log('üìù –°–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ' + contentTopics.length);
    
    const results = await createContent();
    
    console.log('\nüéâ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ${contentTopics.length}`);
    console.log(`   - –°–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ: ${results.length}`);
    console.log(`   - –°—Ç–∞—Ç—É—Å: –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ (–Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã)`);
    
    if (results.length > 0) {
      console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:');
      results.forEach((item, index) => {
        console.log(`   ${index + 1}. ${item.title || item.topic} (ID: ${item.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'})`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫
main().catch(console.error);