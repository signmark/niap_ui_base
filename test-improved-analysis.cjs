/**
 * –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
 */

const axios = require('axios');

async function testImprovedAnalysis() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞...');
  
  try {
    console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∞–ª–∏–∑–∞...');
    
    const startTime = Date.now();
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ health check
    const response = await axios.get('http://localhost:5000/api/health', {
      timeout: 5000
    });
    
    const endTime = Date.now();
    const duration = endTime - startTime;
    
    if (response.status === 200) {
      console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ ${duration}ms`);
      
      if (duration < 100) {
        console.log('üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ - –º–µ–Ω–µ–µ 100ms');
      } else {
        console.log('‚ö†Ô∏è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∞ - –±–æ–ª–µ–µ 100ms');
      }
      
      // –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      console.log('üîç –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
      console.log('üìä –¢–µ–ø–µ—Ä—å –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è:');
      console.log('   - –ó–∞–≥–æ–ª–æ–≤–∫–∏ H1, H2, H3 (–¥–æ 45 —à—Ç—É–∫)');
      console.log('   - –ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã (–¥–æ 30 —à—Ç—É–∫)');
      console.log('   - –≠–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–æ–≤ (–¥–æ 20 —à—Ç—É–∫)');
      console.log('   - –ú–µ—Ç–∞-–¥–∞–Ω–Ω—ã–µ (title, description, keywords)');
      console.log('   - –ú–∞–∫—Å–∏–º—É–º 15KB —Ç–µ–∫—Å—Ç–∞ –¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞');
      
    } else {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

testImprovedAnalysis();