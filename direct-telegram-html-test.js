/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ç–æ–∫–µ–Ω–∞ –∏ chat ID.
 * –î–ª—è –∑–∞–ø—É—Å–∫–∞: node direct-telegram-html-test.js
 */

import axios from 'axios';

// –ó–¥–µ—Å—å —É–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// –í—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
const TELEGRAM_TOKEN = '5825011904:AAGQtDcTgcuHPx8OYxBu9mMXwdIpYnQfrrg';
const TELEGRAM_CHAT_ID = '@smm_manager_dev_channel';

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function log(message) {
  console.log(`[${new Date().toISOString()}] ${message}`);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
async function sendHtmlMessage(text) {
  if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
    log('–û–®–ò–ë–ö–ê: –ù–µ —É–∫–∞–∑–∞–Ω—ã TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID');
    return;
  }
  
  try {
    log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: "${text}"`);
    
    const formattedChatId = TELEGRAM_CHAT_ID.startsWith('@') 
      ? TELEGRAM_CHAT_ID 
      : TELEGRAM_CHAT_ID.startsWith('-100') 
        ? TELEGRAM_CHAT_ID 
        : `-100${TELEGRAM_CHAT_ID}`;
    
    const response = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, 
      {
        chat_id: formattedChatId,
        text: text,
        parse_mode: 'HTML'
      }
    );
    
    if (response.data && response.data.ok) {
      log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. ID: ${response.data.result.message_id}`);
      return true;
    } else {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${JSON.stringify(response.data)}`);
      return false;
    }
  } catch (error) {
    log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${error.message}`);
    if (error.response) {
      log(`–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data)}`);
    }
    return false;
  }
}

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
const testCases = [
  {
    name: '–ü—Ä–æ—Å—Ç—ã–µ HTML-—Ç–µ–≥–∏ –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ –∏ –∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
    text: '–¢–µ—Å—Ç –±–∞–∑–æ–≤—ã—Ö —Ç–µ–≥–æ–≤: <b>–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b> –∏ <i>–∫—É—Ä—Å–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç</i>'
  },
  {
    name: '–í–ª–æ–∂–µ–Ω–Ω—ã–µ HTML-—Ç–µ–≥–∏',
    text: '–¢–µ—Å—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤: <b>–∂–∏—Ä–Ω—ã–π –∏ <i>–∂–∏—Ä–Ω—ã–π –∫—É—Ä—Å–∏–≤–Ω—ã–π</i> —Ç–µ–∫—Å—Ç</b>'
  },
  {
    name: '–ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –∏ –∑–∞—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ',
    text: '–¢–µ—Å—Ç —Å—Ç–∏–ª–µ–π —Ç–µ–∫—Å—Ç–∞: <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π</u> –∏ <s>–∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π</s> —Ç–µ–∫—Å—Ç'
  },
  {
    name: 'HTML-—Å—Å—ã–ª–∫–∏',
    text: '–¢–µ—Å—Ç —Å—Å—ã–ª–æ–∫: <a href="https://telegram.org">—Å—Å—ã–ª–∫–∞ –Ω–∞ Telegram</a>'
  },
  {
    name: '–ö–æ–¥ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç',
    text: '–¢–µ—Å—Ç –∫–æ–¥–∞: <code>console.log("Hello");</code>\n\n<pre>function hello() {\n  return "world";\n}</pre>'
  },
  {
    name: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram HTML-—Ç–µ–≥–∏',
    text: '–¢–µ—Å—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–µ–≥–æ–≤: <div>div –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä</div>, <p>–ø–∞—Ä–∞–≥—Ä–∞—Ñ</p>'
  },
  {
    name: '–ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ HTML-—Ç–µ–≥–∏',
    text: '–¢–µ—Å—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤: <b>–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç <i>–∏ –∫—É—Ä—Å–∏–≤–Ω—ã–π'
  },
  {
    name: '–°–ø–∏—Å–æ–∫ –∏ –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫',
    text: '–¢–µ—Å—Ç —Å–ø–∏—Å–∫–æ–≤:\n‚Ä¢ –ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç\n‚Ä¢ –í—Ç–æ—Ä–æ–π –ø—É–Ω–∫—Ç\n\n1. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç 1\n2. –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç 2'
  },
  {
    name: '–°–ª–æ–∂–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–æ–º–±–∏–Ω–∞—Ü–∏–µ–π —Å—Ç–∏–ª–µ–π',
    text: '–¢–µ—Å—Ç <b>–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ</b> <i>—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</i> —Å <u>—Ä–∞–∑–ª–∏—á–Ω—ã–º–∏</u> <s>—Å—Ç–∏–ª—è–º–∏</s> –∏ <a href="https://example.com">—Å—Å—ã–ª–∫–∞–º–∏</a> –≤ <code>–æ–¥–Ω–æ–º</code> —Å–æ–æ–±—â–µ–Ω–∏–∏.'
  }
];

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runAllTests() {
  log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram...');
  log(`–¢–æ–∫–µ–Ω: ${TELEGRAM_TOKEN ? TELEGRAM_TOKEN.substring(0, 5) + '...' : '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
  log(`Chat ID: ${TELEGRAM_CHAT_ID || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
  
  for (const [index, test] of testCases.entries()) {
    log(`\n[–¢–µ—Å—Ç ${index + 1}/${testCases.length}] ${test.name}`);
    const success = await sendHtmlMessage(test.text);
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (index < testCases.length - 1) {
      log('–ü–∞—É–∑–∞ 1 —Å–µ–∫—É–Ω–¥–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...');
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
  }
  
  log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
runAllTests().catch(error => {
  log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: ${error.message}`);
});