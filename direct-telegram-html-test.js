/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤
 * –ó–∞–ø—É—Å–∫: node direct-telegram-html-test.js
 */

import dotenv from 'dotenv';
import axios from 'axios';
import fs from 'fs';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

// –ü—Ä–∏–º–µ—Ä HTML-—Ç–µ–∫—Å—Ç–∞ —Å –∫—É—Ä—Å–∏–≤–æ–º –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
const htmlExample = `<p>–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Ü–∏–æ–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è ‚Äì —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞, —Ç—Ä–µ–±—É—é—â–∞—è —É—á–µ—Ç–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–æ–≤: –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –æ—Ä–≥–∞–Ω–∏–∑–º–∞, –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è. –û–¥–Ω–∞–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä—è <span style="font-style: italic">–∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–º—É –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å—É –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è</span> —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å—Ç–∞–ª–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—â–µ.</p>

<p>–ù–∞—à —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–¥–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Ü–∏–æ–Ω–∞, –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –≤–∞—à–∏–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π ‚Äì —Å–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞, –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ ‚Äì –Ω–∞—à —Å–µ—Ä–≤–∏—Å –ø–æ–º–æ–∂–µ—Ç –∏—Ö –¥–æ—Å—Ç–∏—á—å <span style="font-style: italic">–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º</span>.</p>

<p>–û–¥–Ω–æ –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ ‚Äì –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –≤—Ä–∞—á–∏ –∏ –¥–∏–µ—Ç–æ–ª–æ–≥–∏, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∏—Ç–∞–Ω–∏—è —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å, —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Ü–∏–æ–Ω –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —ç–∫–æ–Ω–æ–º—è –≤—Ä–µ–º—è –∏ —Ä–µ—Å—É—Ä—Å—ã.</p>

<p>–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∏ —É–±–µ–¥–∏—Ç—å—Å—è –≤ –µ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ë—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –æ—Ç–∑—ã–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –í–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º.</p>`;

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ HTML-—Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * @returns {string} –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π HTML-—Ç–µ–∫—Å—Ç
 */
function fixUnclosedTags(html) {
  if (!html) return '';
  
  // –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö Telegram —Ç–µ–≥–æ–≤
  const supportedTags = ['b', 'i', 'u', 's', 'code', 'pre', 'a'];
  
  // –°—Ç–µ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤
  const openTags = [];
  
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–≥–æ–≤ (–æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö)
  const tagRegex = /<\/?([a-z]+)(?:\s+[^>]*)?\/?>/gi;
  
  // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–µ
  let lastIndex = 0;
  let result = '';
  let match;
  
  while ((match = tagRegex.exec(html)) !== null) {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —Ç–µ–≥–∞
    result += html.substring(lastIndex, match.index);
    lastIndex = match.index + match[0].length;
    
    const fullTag = match[0];
    const tagName = match[1].toLowerCase();
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è Telegram
    if (!supportedTags.includes(tagName)) {
      continue;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–π –∏–ª–∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
    if (fullTag.startsWith('</')) {
      // –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
      if (openTags.length > 0 && openTags[openTags.length - 1] === tagName) {
        // –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º –æ—Ç–∫—Ä—ã—Ç—ã–º —Ç–µ–≥–æ–º - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        result += fullTag;
        openTags.pop();
      } else {
        // –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        console.log(`–ü—Ä–æ–ø—É—â–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–≥–æ: ${fullTag}`);
      }
    } else if (!fullTag.endsWith('/>')) {
      // –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∏ –ø–æ–º–µ—â–∞–µ–º –≤ —Å—Ç–µ–∫
      result += fullTag;
      openTags.push(tagName);
    } else {
      // –°–∞–º–æ–∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Ç–µ–≥ - –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º
      result += fullTag;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç
  result += html.substring(lastIndex);
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
  for (let i = openTags.length - 1; i >= 0; i--) {
    result += `</${openTags[i]}>`;
    console.log(`–î–æ–±–∞–≤–ª–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ –¥–ª—è –Ω–µ–∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Ç–µ–≥–∞: </${openTags[i]}>`);
  }
  
  return result;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç span —Å inline —Å—Ç–∏–ª—è–º–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram HTML —Ç–µ–≥–∏
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
 * @returns {string} HTML-—Ç–µ–∫—Å—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å Telegram
 */
function convertEditorToTelegram(html) {
  if (!html) return '';
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º inline —Å—Ç–∏–ª–∏ –≤ —Ç–µ–≥–∏
  let result = html
    // –ö—É—Ä—Å–∏–≤
    .replace(/<span[^>]*?style\s*=\s*["'][^"']*?font-style\s*:\s*italic[^"']*?["'][^>]*>(.*?)<\/span>/gi, '<i>$1</i>')
    
    // –ñ–∏—Ä–Ω—ã–π
    .replace(/<span[^>]*?style\s*=\s*["'][^"']*?font-weight\s*:\s*(bold|[6-9]00)[^"']*?["'][^>]*>(.*?)<\/span>/gi, '<b>$2</b>')
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTML —Ç–µ–≥–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    .replace(/<strong[^>]*>(.*?)<\/strong>/gi, '<b>$1</b>')
    .replace(/<em[^>]*>(.*?)<\/em>/gi, '<i>$1</i>')
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –±–ª–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    .replace(/<p[^>]*>(.*?)<\/p>/gi, '$1\n\n')
    .replace(/<div[^>]*>(.*?)<\/div>/gi, '$1\n')
    .replace(/<br\s*\/?>/gi, '\n');
    
  // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏
  result = result.replace(/<(?!b|i|u|s|code|pre|a\b)[^>]+>/gi, '');
  
  return result;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @param {boolean} autoFix –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendHtmlMessage(html, autoFix = true) {
  if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –≤ .env —Ñ–∞–π–ª–µ');
    process.exit(1);
  }
  
  try {
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ HTML-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram`);
    console.log(`üìù –î–ª–∏–Ω–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ HTML: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ HTML
    let processedHtml = html;
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º HTML –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π Telegram —Ñ–æ—Ä–º–∞—Ç
    processedHtml = convertEditorToTelegram(processedHtml);
    
    // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
    if (autoFix) {
      processedHtml = fixUnclosedTags(processedHtml);
    }
    
    console.log(`‚úèÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π HTML (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):`);
    console.log(processedHtml.substring(0, 200) + '...');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API Telegram
    const response = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        chat_id: TELEGRAM_CHAT_ID,
        text: processedHtml,
        parse_mode: 'HTML',
        disable_web_page_preview: true
      }
    );
    
    if (response.data && response.data.ok) {
      console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
      console.log(`üìä ID —Å–æ–æ–±—â–µ–Ω–∏—è: ${response.data.result.message_id}`);
      return response.data;
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:`, response.data);
      return response.data;
    }
  } catch (error) {
    console.error(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:`, error.message);
    if (error.response) {
      console.error(`üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:`, error.response.data);
    }
    throw error;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ Directus –≤ Telegram
 */
async function sendContentToTelegram() {
  console.log('=== –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML –≤ Telegram ===');
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
  try {
    console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...');
    await sendHtmlMessage(htmlExample);
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω —Ç–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏
    const testContent = `
<b>–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram</b>

<i>–¢–µ–∫—Å—Ç –∫—É—Ä—Å–∏–≤–æ–º</i>
<b>–¢–µ–∫—Å—Ç –∂–∏—Ä–Ω—ã–º</b>
<u>–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</u>
<s>–ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç</s>
<code>–ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</code>

<b><i>–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</i></b>

–†–∞–∑—Ä—ã–≤
–°—Ç—Ä–æ–∫–∏

‚Ä¢ –ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 1
‚Ä¢ –ü—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞ 2
  ‚Ä¢ –í–ª–æ–∂–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞

<a href="https://telegram.org">–°—Å—ã–ª–∫–∞</a>

<span style="font-style: italic">–¢–µ–∫—Å—Ç —Å–æ —Å—Ç–∏–ª–µ–º –∫—É—Ä—Å–∏–≤–∞ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞</span>
`;
    
    console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤...');
    await sendHtmlMessage(testContent);
    
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
sendContentToTelegram();