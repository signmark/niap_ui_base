/**
 * –¢–µ—Å—Ç N8N Instagram Stories webhook
 */
const axios = require('axios');

async function testN8NInstagramStories() {
  const N8N_WEBHOOK = 'https://n8n.roboflow.space/webhook/publish-stories';
  
  // –¢–µ—Å—Ç–æ–≤—ã–π payload —Å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤–∏–¥–µ–æ
  const testPayload = {
    contentId: 'test_story_id',
    contentType: 'video_story',
    platforms: ['instagram'],
    scheduledAt: new Date().toISOString(),
    content: {
      title: 'Test Video Story',
      description: '–¢–µ—Å—Ç–æ–≤–∞—è Stories —Å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤–∏–¥–µ–æ',
      videoUrl: 'https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/ig_stories_converted_1755538595646_86mmakylf.mp4',
      mediaType: 'VIDEO',
      storyType: 'instagram_stories'
    },
    metadata: {
      converted: true,
      conversionTime: 5000,
      videoFormat: 'mp4',
      resolution: '1080x1920',
      codec: 'H.264',
      width: 1080,
      height: 1920,
      duration: '30s'
    },
    campaignId: 'test_campaign_id',
    userId: 'test_user_id',
    // Instagram API specific fields
    media_type: 'VIDEO',
    video_url: 'https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/ig_stories_converted_1755538595646_86mmakylf.mp4',
    publish_mode: 'instagram_stories'
  };
  
  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º N8N Instagram Stories webhook');
  console.log('Webhook URL:', N8N_WEBHOOK);
  console.log('Payload:', JSON.stringify(testPayload, null, 2));
  
  try {
    const response = await axios.post(N8N_WEBHOOK, testPayload, {
      timeout: 60000,
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('\n‚úÖ N8N webhook successful!');
    console.log('Status:', response.status);
    console.log('Response:', JSON.stringify(response.data, null, 2));
    
  } catch (error) {
    console.error('\n‚ùå N8N webhook failed');
    
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Status Text:', error.response.statusText);
      console.error('Response Data:', JSON.stringify(error.response.data, null, 2));
      
      if (error.response.data && error.response.data.error) {
        console.error('\n–ü–æ–¥—Ä–æ–±–Ω–∞—è –æ—à–∏–±–∫–∞:', error.response.data.error);
        
        // –ü–∞—Ä—Å–∏–º –æ—à–∏–±–∫—É Instagram API
        if (typeof error.response.data.error.message === 'string') {
          try {
            const instagramError = JSON.parse(error.response.data.error.message.replace('400 - ', ''));
            console.error('Instagram API Error:', JSON.stringify(instagramError, null, 2));
            
            if (instagramError.error && instagramError.error.message) {
              console.error('\nüîç Instagram –≥–æ–≤–æ—Ä–∏—Ç:', instagramError.error.message);
              
              if (instagramError.error.message.includes('creation_id')) {
                console.log('\nüí° –†–ï–®–ï–ù–ò–ï: N8N workflow –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å creation_id –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π');
                console.log('1. –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–≤–∞—Ç—å POST /{page-id}/media –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞');
                console.log('2. –ó–∞—Ç–µ–º –≤—ã–∑–≤–∞—Ç—å POST /{creation-id}/publish –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
              }
            }
          } catch (parseError) {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—à–∏–±–∫—É Instagram API');
          }
        }
      }
    } else {
      console.error('Network Error:', error.message);
    }
    
    console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('1. N8N workflow –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è Instagram Stories');
    console.log('2. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞ Instagram');
    console.log('3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç payload –¥–ª—è Instagram API');
    console.log('4. N8N workflow –Ω–µ —Å–æ–∑–¥–∞–µ—Ç creation_id –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞');
  }
}

testN8NInstagramStories();