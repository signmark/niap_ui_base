const axios = require('axios');

const extractContactsTest = async () => {
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π HTML —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
  const testHTML = `
    <html>
      <head><title>–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è</title></head>
      <body>
        <h1>–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è</h1>
        <p>–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è –¥–µ–ª–∞–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ —Å–∞–π—Ç—ã</p>
        <div class="contacts">
          <h2>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
          <p>–¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67</p>
          <p>Email: info@test.com</p>
          <p>–ê–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123</p>
        </div>
        <footer>
          <p>–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: 8-800-555-35-35 –∏–ª–∏ support@test.ru</p>
        </footer>
      </body>
    </html>
  `;

  console.log('üìÑ –¢–µ—Å—Ç–æ–≤—ã–π HTML:');
  console.log(testHTML);
  console.log('\n' + '='.repeat(50) + '\n');

  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...');
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω—ã
  const phoneRegex = /(?:\+7|8)[\s\-\(\)]?\d{1,4}[\s\-\(\)]?\d{1,4}[\s\-\(\)]?\d{2,4}[\s\-\(\)]?\d{2,4}/g;
  const phones = testHTML.match(phoneRegex) || [];
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º email
  const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/g;
  const emails = testHTML.match(emailRegex) || [];
  
  console.log('üìû –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã:', phones);
  console.log('üìß –ù–∞–π–¥–µ–Ω–Ω—ã–µ email:', emails);
  
  if (phones.length > 0 || emails.length > 0) {
    console.log('‚úÖ –ö–û–ù–¢–ê–ö–¢–´ –ù–ê–ô–î–ï–ù–´!');
  } else {
    console.log('‚ùå –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
};

extractContactsTest().catch(console.error);