/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram Stories —Å —Ä–∞–Ω–¥–æ–º–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç API –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Instagram –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Ç–æ—Ä–∏—Å
 * 
 * –ó–∞–ø—É—Å–∫: node post-instagram-story.js [imageUrl]
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
const IMAGE_URL = process.argv[2] || `https://picsum.photos/1080/1920?random=${Date.now()}`;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Instagram API
const INSTAGRAM_TOKEN = process.env.INSTAGRAM_TOKEN;
const INSTAGRAM_BUSINESS_ACCOUNT_ID = process.env.INSTAGRAM_BUSINESS_ACCOUNT_ID;

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
const RANDOM_TEXTS = [
  "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ —Å–µ–≥–æ–¥–Ω—è! üåü",
  "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å! ‚ú®",
  "–ú–æ—Ç–∏–≤–∞—Ü–∏—è –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å –≤–ø–µ—Ä–µ–¥! üí™",
  "–£–ª—ã–±–∞–π—Ç–µ—Å—å —á–∞—â–µ! üòä",
  "–í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –ø–æ–≤—Å—é–¥—É, –ø—Ä–æ—Å—Ç–æ –æ–≥–ª—è–Ω–∏—Ç–µ—Å—å! üåà",
  "–°–ª–µ–¥—É–π—Ç–µ –∑–∞ —Å–≤–æ–µ–π –º–µ—á—Ç–æ–π! ‚≠ê",
  "–î–µ–ª–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –ª—é–±–∏—Ç–µ! ‚ù§Ô∏è",
  "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ –Ω–∞—á–∞—Ç—å! üöÄ",
  "–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –≤–µ–¥—É—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º! üë£",
  "–í–µ—Ä—å—Ç–µ –≤ —Å–µ–±—è! üíØ"
];

// –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–µ–∫—Å—Ç
const randomText = RANDOM_TEXTS[Math.floor(Math.random() * RANDOM_TEXTS.length)];

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

// –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message, type = 'info') {
  const now = new Date().toLocaleTimeString();
  let color = colors.blue;
  
  switch (type) {
    case 'error': color = colors.red; break;
    case 'warn': color = colors.yellow; break;
    case 'success': color = colors.green; break;
    case 'step': color = colors.cyan; break;
    case 'highlight': color = colors.magenta; break;
  }
  
  console.log(`${color}[${now}] ${message}${colors.reset}`);
}

/**
 * –ü—É–±–ª–∏–∫—É–µ—Ç —Å—Ç–æ—Ä–∏—Å –≤ Instagram
 * @param {string} imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} caption –¢–µ–∫—Å—Ç –¥–ª—è —Å—Ç–æ—Ä–∏—Å
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */
async function publishInstagramStory(imageUrl, caption) {
  log('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram Stories', 'step');
  
  if (!INSTAGRAM_TOKEN || !INSTAGRAM_BUSINESS_ACCOUNT_ID) {
    throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Instagram API (INSTAGRAM_TOKEN, INSTAGRAM_BUSINESS_ACCOUNT_ID)');
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–¥–∏–∞
    log(`–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –º–µ–¥–∏–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º...`, 'step');
    const createContainerUrl = `https://graph.facebook.com/v18.0/${INSTAGRAM_BUSINESS_ACCOUNT_ID}/media`;
    
    const containerParams = new URLSearchParams();
    containerParams.append('access_token', INSTAGRAM_TOKEN);
    containerParams.append('media_type', 'STORIES'); // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø STORIES
    containerParams.append('image_url', imageUrl);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç
    if (caption) {
      containerParams.append('caption', caption);
    }
    
    const containerResponse = await fetch(createContainerUrl, {
      method: 'POST',
      body: containerParams
    });
    
    const containerData = await containerResponse.json();
    
    if (containerData.error) {
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: ${JSON.stringify(containerData.error)}`);
    }
    
    const mediaContainerId = containerData.id;
    log(`–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–¥–∏–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: ${mediaContainerId}`, 'success');
    
    // –ü—É–±–ª–∏–∫—É–µ–º –º–µ–¥–∏–∞ –≤ Instagram
    log('–ü—É–±–ª–∏–∫–∞—Ü–∏—è Stories –≤ Instagram...', 'step');
    const publishUrl = `https://graph.facebook.com/v18.0/${INSTAGRAM_BUSINESS_ACCOUNT_ID}/media_publish`;
    
    const publishParams = new URLSearchParams();
    publishParams.append('access_token', INSTAGRAM_TOKEN);
    publishParams.append('creation_id', mediaContainerId);
    
    const publishResponse = await fetch(publishUrl, {
      method: 'POST',
      body: publishParams
    });
    
    const publishData = await publishResponse.json();
    
    if (publishData.error) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${JSON.stringify(publishData.error)}`);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º URL –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–¥–∏–∞
    const mediaId = publishData.id;
    log(`–ü—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${mediaId}`, 'success');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    return {
      success: true,
      mediaId,
      postUrl: `https://www.instagram.com/p/${mediaId}/`,
      publishedAt: new Date().toISOString()
    };
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram Stories: ${error.message}`, 'error');
    return {
      success: false,
      error: error.message
    };
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  log('====================================================', 'highlight');
  log('–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø INSTAGRAM STORIES –° –†–ê–ù–î–û–ú–ù–´–ú –¢–ï–ö–°–¢–û–ú', 'highlight');
  log('====================================================', 'highlight');
  
  try {
    log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${IMAGE_URL}`, 'info');
    log(`–¢–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: "${randomText}"`, 'info');
    
    // –ü—É–±–ª–∏–∫–∞—Ü–∏—è Stories –≤ Instagram
    const publishResult = await publishInstagramStory(IMAGE_URL, randomText);
    
    if (publishResult.success) {
      log('–ü–£–ë–õ–ò–ö–ê–¶–ò–Ø –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!', 'success');
      log(`–ü–æ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${publishResult.postUrl}`, 'success');
    } else {
      log(`–û–®–ò–ë–ö–ê –ü–£–ë–õ–ò–ö–ê–¶–ò–ò: ${publishResult.error}`, 'error');
    }
    
    log('====================================================', 'highlight');
    
  } catch (error) {
    log(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`, 'error');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main();