/**
 * –¢–µ—Å—Ç —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–≥–æ –∂–µ –∑–∞–ø—Ä–æ—Å–∞ –∫–∞–∫ –¥–µ–ª–∞–µ—Ç N8N workflow
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É –¥–∞–Ω–Ω—ã—Ö
 */

const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.roboflow.tech/';
const DIRECTUS_TOKEN = process.env.DIRECTUS_TOKEN;

async function testExactN8NRequest() {
  console.log('=== –¢–ï–°–¢ –¢–û–ß–ù–û –¢–ê–ö–û–ì–û –ñ–ï –ó–ê–ü–†–û–°–ê –ö–ê–ö N8N ===\n');

  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º credentials –∫–∞–∫ –≤ N8N (SELECT * FROM global_api_keys)
    console.log('üîç –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º credentials –∏–∑ global_api_keys...');
    
    const credentialsResponse = await fetch(`${DIRECTUS_URL}items/global_api_keys`, {
      headers: {
        'Authorization': `Bearer ${DIRECTUS_TOKEN}`
      }
    });

    const credentialsData = await credentialsResponse.json();
    const youtubeCredentials = credentialsData.data?.find(r => r.service_name === 'YouTube');
    
    if (!youtubeCredentials) {
      console.error('‚ùå YouTube credentials –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ global_api_keys');
      return;
    }

    console.log('‚úÖ YouTube credentials –Ω–∞–π–¥–µ–Ω—ã:');
    console.log(`   Client ID: ${youtubeCredentials.api_key}`);
    console.log(`   Client Secret: ${youtubeCredentials.api_secret ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);

    // –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º campaign settings –∫–∞–∫ –≤ N8N
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é —Å YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    const campaignId = '46868c44-c6a4-4bed-accf-9ad07bba790e';
    
    console.log(`\nüîç –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId}...`);
    
    const campaignResponse = await fetch(`${DIRECTUS_URL}items/user_campaigns/${campaignId}`, {
      headers: {
        'Authorization': `Bearer ${DIRECTUS_TOKEN}`
      }
    });

    const campaignData = await campaignResponse.json();
    const campaign = campaignData.data;
    
    if (!campaign || !campaign.social_media_settings) {
      console.error('‚ùå –ö–∞–º–ø–∞–Ω–∏—è –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // –ü–∞—Ä—Å–∏–º social_media_settings –∫–∞–∫ –≤ N8N
    let settings;
    try {
      settings = typeof campaign.social_media_settings === 'string' 
        ? JSON.parse(campaign.social_media_settings) 
        : campaign.social_media_settings;
    } catch (e) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ social_media_settings:', e.message);
      return;
    }

    console.log('‚úÖ Campaign settings –ø–æ–ª—É—á–µ–Ω—ã');
    console.log(`   YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ${settings.youtube ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`);

    if (!settings.youtube) {
      console.error('‚ùå YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –∫–∞–º–ø–∞–Ω–∏–∏');
      return;
    }

    const youtubeSettings = settings.youtube;
    console.log(`   Access Token: ${youtubeSettings.accessToken ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`   Refresh Token: ${youtubeSettings.refreshToken ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);

    if (!youtubeSettings.refreshToken) {
      console.error('‚ùå Refresh token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–º–ø–∞–Ω–∏–∏');
      return;
    }

    // –®–∞–≥ 3: –î–µ–ª–∞–µ–º —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–π –∂–µ OAuth –∑–∞–ø—Ä–æ—Å –∫–∞–∫ N8N
    console.log('\nüß™ –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º OAuth –∑–∞–ø—Ä–æ—Å –∫ Google...');
    
    const requestData = {
      client_id: youtubeCredentials.api_key,
      client_secret: youtubeCredentials.api_secret,
      refresh_token: youtubeSettings.refreshToken,
      grant_type: 'refresh_token'
    };

    console.log('üìã –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:');
    console.log(`   client_id: ${requestData.client_id}`);
    console.log(`   client_secret: ${requestData.client_secret ? '–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`   refresh_token (20 —Å–∏–º–≤–æ–ª–æ–≤): ${requestData.refresh_token.substring(0, 20)}...`);
    console.log(`   grant_type: ${requestData.grant_type}`);

    const oauthResponse = await fetch('https://oauth2.googleapis.com/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams(requestData)
    });

    const oauthResult = await oauthResponse.json();

    console.log(`\nüìä OAuth –æ—Ç–≤–µ—Ç —Å—Ç–∞—Ç—É—Å: ${oauthResponse.status}`);
    console.log('üìÑ OAuth –æ—Ç–≤–µ—Ç:');
    console.log(JSON.stringify(oauthResult, null, 2));

    if (oauthResponse.ok && oauthResult.access_token) {
      console.log('\n‚úÖ –£–°–ü–ï–•: OAuth –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
      console.log('üéâ N8N –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–∞–∫–∏–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏');
      console.log('\nüí° –ü—Ä–æ–±–ª–µ–º–∞ –≤ N8N workflow –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:');
      console.log('   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ JSON –∏–∑ social_media_settings');
      console.log('   2. –ü–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —É–∑–ª–∞–º–∏ N8N');
      console.log('   3. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ N8N');
    } else {
      console.log('\n‚ùå –û–®–ò–ë–ö–ê: OAuth –∑–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª');
      console.log('üîç –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É N8N workflow');
    }

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testExactN8NRequest();