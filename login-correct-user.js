#!/usr/bin/env node

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 53921f16-f51d-4591-80b9-8caa4fde4d13
 */

import axios from 'axios';

const DIRECTUS_URL = process.env.DIRECTUS_URL;
const ADMIN_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL;
const ADMIN_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD;

async function loginCorrectUser() {
  try {
    console.log('üîê –ü–û–õ–£–ß–ï–ù–ò–ï –¢–û–ö–ï–ù–ê –î–õ–Ø –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
    
    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
    const loginResponse = await axios.post(`${DIRECTUS_URL}/auth/login`, {
      email: ADMIN_EMAIL,
      password: ADMIN_PASSWORD
    });

    if (!loginResponse.data?.data?.access_token) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }

    const adminToken = loginResponse.data.data.access_token;
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID
    const userResponse = await axios.get(`${DIRECTUS_URL}/users/53921f16-f51d-4591-80b9-8caa4fde4d13`, {
      headers: {
        'Authorization': `Bearer ${adminToken}`
      }
    });

    const user = userResponse.data?.data;
    if (!user) {
      throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user.email, '- ID:', user.id);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const tokenResponse = await axios.post(`${DIRECTUS_URL}/auth/login`, {
      email: user.email,
      password: 'password' // –ü–æ–ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
    });

    if (tokenResponse.data?.data?.access_token) {
      const userToken = tokenResponse.data.data.access_token;
      
      console.log('\nüéØ –£–°–ü–ï–•! –¢–æ–∫–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      console.log('='.repeat(60));
      console.log(userToken);
      console.log('='.repeat(60));
      
      console.log('\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:');
      console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤—ã—à–µ');
      console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F12)');
      console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Application > Local Storage');
      console.log('4. –ù–∞–π–¥–∏—Ç–µ –∫–ª—é—á "authToken" –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω');
      console.log('5. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
      
      console.log('\nüîÑ –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:');
      console.log(`localStorage.setItem('authToken', '${userToken}'); location.reload();`);
      
      return userToken;
    } else {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    
    console.log('\nüîß –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –°–ü–û–°–û–ë:');
    console.log('1. –í–æ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    console.log('2. –í—ã–π–¥–∏—Ç–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');  
    console.log('3. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ lbrspb@gmail.com');
    console.log('4. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
  }
}

loginCorrectUser();