/**
 * –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Telegram
 * —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ Directus
 * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è ES –º–æ–¥—É–ª–µ–π
 */

import axios from 'axios';
import fs from 'fs';
import path from 'path';
import os from 'os';
import FormData from 'form-data';
import { fileURLToPath } from 'url';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Directus –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
const DEFAULT_DIRECTUS_URL = 'https://directus.nplanner.ru';

class TelegramPublisher {
  constructor(options = {}) {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Directus
    this.directusUrl = options.directusUrl || process.env.DIRECTUS_URL || DEFAULT_DIRECTUS_URL;
    this.directusEmail = options.directusEmail || process.env.DIRECTUS_EMAIL;
    this.directusPassword = options.directusPassword || process.env.DIRECTUS_PASSWORD;
    
    // –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –µ–≥–æ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    this.directusToken = null;
    this.tokenExpiration = null;
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤
    this.tempDir = options.tempDir || path.join(os.tmpdir(), 'telegram_uploads');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    this.verbose = options.verbose !== undefined ? options.verbose : true;
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(this.tempDir)) {
      fs.mkdirSync(this.tempDir, { recursive: true });
    }
  }
  
  /**
   * –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Ñ–∞–π–ª –ª–æ–≥–æ–≤
   * @param {string} message –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
   * @param {string} level –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (log, warn, error)
   */
  log(message, level = 'log') {
    // –í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∂–∏–º–∞ verbose
    console[level](message);
    
    // –í—ã–≤–æ–¥–∏–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ—Ç–º–µ—Ç–∫–∏ –¥–ª—è –≤–∞–∂–Ω—ã—Ö –ª–æ–≥–æ–≤
    if (level === 'error' || message.includes('–û–¢–ü–†–ê–í–õ–Ø–ï–ú–´–ô –ó–ê–ü–†–û–°') || message.includes('chat_id')) {
      try {
        const logMessage = `[${new Date().toISOString()}] [${level.toUpperCase()}] ${message}`;
        console[level](`TELEGRAM_DEBUG: ${logMessage}`);
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:', e);
      }
    }
  }
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –∏—Å—Ç–µ–∫ –ª–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
   * @returns {boolean} true –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, false –µ—Å–ª–∏ –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
   */
  isTokenValid() {
    return this.directusToken && this.tokenExpiration && Date.now() < this.tokenExpiration;
  }
  
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus
   * @returns {Promise<string|null>} –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
   */
  async getDirectusToken() {
    this.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
    if (this.isTokenValid()) {
      this.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω Directus');
      return this.directusToken;
    }
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (!this.directusEmail || !this.directusPassword) {
        this.log('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Directus (email/password)', 'warn');
        return null;
      }
      
      // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Directus
      const response = await axios.post(`${this.directusUrl}/auth/login`, {
        email: this.directusEmail,
        password: this.directusPassword
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
      if (response.data && response.data.data && response.data.data.access_token) {
        this.directusToken = response.data.data.access_token;
        this.tokenExpiration = Date.now() + (response.data.data.expires * 1000 || 3600000);
        
        this.log('‚úÖ –¢–æ–∫–µ–Ω Directus —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
        return this.directusToken;
      } else {
        this.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ Directus: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞', 'error');
        return null;
      }
    } catch (error) {
      this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Directus: ${error.message}`, 'error');
      
      if (error.response) {
        this.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`, 'error');
        this.log(`üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`, 'error');
      }
      
      return null;
    }
  }
  
  /**
   * –°–∫–∞—á–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π (–µ—Å–ª–∏ —ç—Ç–æ URL Directus)
   * @param {string} imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
   * @returns {Promise<Object>} –û–±—ä–µ–∫—Ç —Å –±—É—Ñ–µ—Ä–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç–∏–ø–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞
   */
  async downloadImage(imageUrl) {
    this.log(`üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imageUrl.substring(0, 100)}...`);
    
    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
      const headers = {
        'Accept': 'image/*',
        'User-Agent': 'Mozilla/5.0 SMM Planner Bot',
        'Cache-Control': 'no-cache'
      };
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL —Å—Å—ã–ª–∫–æ–π –Ω–∞ Directus
      const isDirectusUrl = imageUrl.includes('directus') || imageUrl.includes('/assets/');
      
      // –ï—Å–ª–∏ —ç—Ç–æ Directus URL, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
      if (isDirectusUrl) {
        this.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Directus, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å...');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ URL –¥–ª—è –ø—Ä–æ–∫—Å–∏
        const originalUrl = imageUrl;
        let proxyUrl = imageUrl;
        
        // –ï—Å–ª–∏ URL —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–º–µ–Ω Directus, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –∫–∞–∫ –µ—Å—Ç—å
        if (imageUrl.includes('https://') || imageUrl.includes('http://')) {
          // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–∞
          const baseUrl = process.env.API_BASE_URL || 'http://localhost:5000';
          proxyUrl = `${baseUrl}/api/proxy-file?url=${encodeURIComponent(imageUrl)}`;
        } else {
          // –ï—Å–ª–∏ URL - –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∏–ª–∏ ID, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ –ø–æ–ª–Ω—ã–π URL Directus
          const directusUrl = this.directusUrl || 'https://directus.nplanner.ru';
          
          // –ï—Å–ª–∏ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /assets/, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–º–µ–Ω
          if (imageUrl.startsWith('/assets/')) {
            const fullDirectusUrl = `${directusUrl}${imageUrl}`;
            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–∞
            const baseUrl = process.env.API_BASE_URL || 'http://localhost:5000';
            proxyUrl = `${baseUrl}/api/proxy-file?url=${encodeURIComponent(fullDirectusUrl)}`;
          } else {
            // –ò–Ω–∞—á–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ ID –∞—Å—Å–µ—Ç–∞
            const fullDirectusUrl = `${directusUrl}/assets/${imageUrl}`;
            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–∞
            const baseUrl = process.env.API_BASE_URL || 'http://localhost:5000';
            proxyUrl = `${baseUrl}/api/proxy-file?url=${encodeURIComponent(fullDirectusUrl)}`;
          }
        }
        
        this.log(`üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –ø—Ä–æ–∫—Å–∏ URL: ${proxyUrl}`);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        const response = await axios.get(proxyUrl, {
          responseType: 'arraybuffer',
          timeout: 60000 // 60 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const dataSize = response.data.length;
        if (dataSize === 0) {
          throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞');
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const contentType = response.headers['content-type'] || 'image/jpeg';
        
        this.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏: ${dataSize} –±–∞–π—Ç, —Ç–∏–ø: ${contentType}`);
        
        return {
          buffer: Buffer.from(response.data),
          contentType: contentType
        };
      } else {
        // –ï—Å–ª–∏ URL –Ω–µ –æ—Ç Directus, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é –∑–∞–≥—Ä—É–∑–∫—É
        this.log('üîÑ –û–±—ã—á–Ω–∞—è —Å—Å—ã–ª–∫–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é...');
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        const response = await axios.get(imageUrl, {
          responseType: 'arraybuffer',
          timeout: 60000, // 60 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
          headers: headers
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const dataSize = response.data.length;
        if (dataSize === 0) {
          throw new Error('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const contentType = response.headers['content-type'] || 'image/jpeg';
        
        this.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${dataSize} –±–∞–π—Ç, —Ç–∏–ø: ${contentType}`);
        
        return {
          buffer: Buffer.from(response.data),
          contentType: contentType
        };
      }
    } catch (error) {
      this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`, 'error');
      
      if (error.response) {
        this.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`, 'error');
        
        if (error.response.status === 401 || error.response.status === 403) {
          this.log('üîí –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401/403). –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–∏—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º Directus.', 'error');
        }
      }
      
      throw error;
    }
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram
   * @param {Buffer} imageBuffer –ë—É—Ñ–µ—Ä —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {string} contentType MIME-—Ç–∏–ø –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {string} chatId ID —á–∞—Ç–∞ Telegram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @param {string} caption –ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
   * @param {string} token –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram
   * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async sendImageToTelegram(imageBuffer, contentType, chatId, caption, token) {
    this.log('üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if (!token) {
      throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram');
    }
    
    if (!chatId) {
      throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω ID —á–∞—Ç–∞ Telegram');
    }
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    const timestamp = Date.now();
    const randomString = Math.random().toString(36).substring(2, 10);
    const fileExtension = contentType.includes('png') ? 'png' : 'jpg';
    const tempFilePath = path.join(this.tempDir, `telegram_${timestamp}_${randomString}.${fileExtension}`);
    
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      fs.writeFileSync(tempFilePath, imageBuffer);
      this.log(`üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${tempFilePath} (${fs.statSync(tempFilePath).size} –±–∞–π—Ç)`);
      
      // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const formData = new FormData();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      formData.append('chat_id', chatId);
      
      if (caption) {
        formData.append('caption', caption);
        formData.append('parse_mode', 'HTML');
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
      const fileStream = fs.createReadStream(tempFilePath);
      formData.append('photo', fileStream, { 
        filename: `image_${timestamp}.${fileExtension}`,
        contentType: contentType
      });
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram API
      this.log(`üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram —á–∞—Ç: ${chatId}`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —á–∞—Ç–∞ –∫–∞–∫ –µ—Å—Ç—å, –±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
      // Telegram API –ø—Ä–∏–Ω–∏–º–∞–µ—Ç ID –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      this.log(`‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —á–∞—Ç–∞ –∫–∞–∫ –µ—Å—Ç—å: ${chatId}`);
      
      // –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–¥–∞–µ–º —á–∞—Ç ID –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –±–æ–ª—å—à–∏–º–∏ —á–∏—Å–ª–∞–º–∏
      formData.append('chat_id', chatId.toString());
      
      const baseUrl = 'https://api.telegram.org/bot';
      this.log(`üîç –ü–æ–ª–Ω—ã–π URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${baseUrl}${token.substring(0, 8)}...}/sendPhoto —Å chat_id=${chatId}`);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É FormData
      const formDataEntries = [];
      formData.getBuffer().toString().split('\r\n').forEach(line => {
        if (line && !line.includes('Content-Type: image/') && !line.includes('filename=')) {
          formDataEntries.push(line);
        }
      });
      console.log('==== –û–¢–ü–†–ê–í–õ–Ø–ï–ú–´–ô –ó–ê–ü–†–û–° –í TELEGRAM ====');
      console.log(`URL: ${baseUrl}${token.substring(0, 8)}...}/sendPhoto`);
      console.log(`Chat ID: ${chatId} (—Ç–∏–ø: ${typeof chatId})`); 
      console.log(`–ó–∞–≥–æ–ª–æ–≤–∫–∏: ${JSON.stringify(formData.getHeaders(), null, 2)}`);
      console.log(`–î–∞–Ω–Ω—ã–µ FormData: ${formDataEntries.join('\n')}`);
      console.log('=======================================');
      
      const response = await axios.post(`${baseUrl}${token}/sendPhoto`, formData, {
        headers: {
          ...formData.getHeaders(),
          'Accept': 'application/json'
        },
        maxContentLength: Infinity,
        maxBodyLength: Infinity,
        timeout: 60000 // 60 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
      });
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
      fileStream.destroy();
      
      // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
      try {
        fs.unlinkSync(tempFilePath);
        this.log(`üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: ${tempFilePath}`);
      } catch (unlinkError) {
        this.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: ${unlinkError}`, 'warn');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
      if (response.data && response.data.ok) {
        this.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: message_id=${response.data.result.message_id}`);
        return response.data;
      } else {
        this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram: ${JSON.stringify(response.data)}`, 'error');
        throw new Error(`API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${JSON.stringify(response.data)}`);
      }
    } catch (error) {
      // –ï—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±—ã–ª —Å–æ–∑–¥–∞–Ω, —É–¥–∞–ª—è–µ–º –µ–≥–æ
      if (fs.existsSync(tempFilePath)) {
        try {
          fs.unlinkSync(tempFilePath);
          this.log(`üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: ${tempFilePath}`);
        } catch (e) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ
        }
      }
      
      this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram: ${error.message}`, 'error');
      
      if (error.response) {
        this.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`, 'error');
        this.log(`üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(error.response.data)}`, 'error');
      }
      
      throw error;
    }
  }
  
  /**
   * –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ Directus –≤ Telegram
   * @param {string} imageUrl URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Å—ã–ª–∫–æ–π –Ω–∞ Directus)
   * @param {string} chatId ID —á–∞—Ç–∞ Telegram
   * @param {string} caption –ü–æ–¥–ø–∏—Å—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç HTML)
   * @param {string} token –¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram
   * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async sendDirectusImageToTelegram(imageUrl, chatId, caption, token) {
    try {
      this.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —á–∞—Ç–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ –≤–≤–æ–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID
      this.log(`üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_id: ${chatId} –±–µ–∑ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π`);
      
      try {
        // –®–∞–≥ 1: –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        this.log(`üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram`);
        const { buffer, contentType } = await this.downloadImage(imageUrl);
        
        // –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å ID —á–∞—Ç–∞ –∫–∞–∫ –µ—Å—Ç—å
        try {
          this.log(`üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å ID —á–∞—Ç–∞: ${chatId}`);
          const result = await this.sendImageToTelegram(buffer, contentType, chatId, caption, token);
          return result;
        } catch (chatError) {
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
          
          // –ï—Å–ª–∏ ID –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª—Å—è –∏–ª–∏ –æ–±–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–¥–∞–ª–∏—Å—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏
          if (chatError.response && chatError.response.status === 400) {
            this.log(`üîç –û—à–∏–±–∫–∞ 400 –æ—Ç API Telegram: ${JSON.stringify(chatError.response.data || {})}`, 'error');
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–º–µ—Å—Ç–æ –æ–±—â–µ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            return {
              ok: false,
              description: `–û—à–∏–±–∫–∞ API Telegram: ${chatError.response.data?.description || '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å'}`,
              error_code: chatError.response.data?.error_code || 400,
              parameters: chatError.response.data?.parameters || {}
            };
          }
          
          // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ
          throw chatError;
        }
      } catch (error) {
        this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`, 'error');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏–ø–µ –æ—à–∏–±–∫–∏
        if (error.response) {
          this.log(`üìä HTTP —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: ${error.response.status}`, 'error');
          this.log(`üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${JSON.stringify(error.response.data || {})}`, 'error');
          
          // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
          return {
            ok: false,
            description: `–û—à–∏–±–∫–∞ HTTP ${error.response.status}: ${error.response.data?.description || error.message}`,
            error_code: error.response.status,
            parameters: error.response.data?.parameters || {}
          };
        }
        
        // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
        return {
          ok: false,
          description: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`,
          error_code: error.code || 500
        };
      }
    } catch (fatalError) {
      this.log(`üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${fatalError.message}`, 'error');
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ API
      return {
        ok: false,
        description: `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${fatalError.message}`,
        error_code: fatalError.code || 500
      };
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è ES –º–æ–¥—É–ª–µ–π
export default TelegramPublisher;