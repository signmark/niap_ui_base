/**
 * –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –ù–ê PRODUCTION –°–ï–†–í–ï–†–ï
 * –°—Ä–æ—á–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–∞—Å—Å–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π
 */

import axios from 'axios';

async function emergencyStopProduction() {
  console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê PRODUCTION –°–ï–†–í–ï–†–ê');
  console.log('üõë –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ directus.nplanner.ru');
  
  const productionUrl = 'https://smm.nplanner.ru'; // Production URL
  
  try {
    // 1. –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —á–µ—Ä–µ–∑ API
    console.log('1. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —á–µ—Ä–µ–∑ API...');
    
    const stopResponse = await axios.post(`${productionUrl}/api/publish/stop-scheduler`, {
      emergency: true,
      reason: 'Mass publications detected'
    }, {
      timeout: 10000,
      headers: {
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Ç–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ API:', stopResponse.data);
    
  } catch (apiError) {
    console.log('‚ùå API –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å:', apiError.message);
    
    // 2. –ü–æ–ø—ã—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–µ—Ä–µ–∑ —Ñ–ª–∞–≥ –≤ Directus
    try {
      console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ Directus...');
      
      // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Directus
      const authResponse = await axios.post('https://directus.nplanner.ru/auth/login', {
        email: process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com',
        password: process.env.DIRECTUS_ADMIN_PASSWORD
      });
      
      const token = authResponse.data.data.access_token;
      
      // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
      await axios.post('https://directus.nplanner.ru/items/system_flags', {
        key: 'emergency_stop_scheduler',
        value: 'true',
        reason: 'Mass publications detected - immediate stop required',
        created_at: new Date().toISOString()
      }, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      console.log('‚úÖ –§–ª–∞–≥ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Directus');
      
    } catch (directusError) {
      console.log('‚ùå –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Directus –Ω–µ —É–¥–∞–ª–∞—Å—å:', directusError.message);
    }
  }
  
  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  try {
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...');
    
    const statusResponse = await axios.get(`${productionUrl}/api/publish/scheduler-status`, {
      timeout: 5000
    });
    
    console.log('üìä –°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', statusResponse.data);
    
  } catch (statusError) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', statusError.message);
  }
  
  // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ production —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π');
  console.log('2. –ï—Å–ª–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ production —Å–µ—Ä–≤–µ—Ä');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ –ë–î –Ω–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "scheduled"');
  console.log('4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–ª—É–∂–±—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω');
  
  return {
    emergency_stop_attempted: true,
    timestamp: new Date().toISOString(),
    target_server: productionUrl
  };
}

// –ó–∞–ø—É—Å–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
emergencyStopProduction()
  .then(result => {
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –≠–ö–°–¢–†–ï–ù–ù–û–ô –û–°–¢–ê–ù–û–í–ö–ò:', result);
    process.exit(0);
  })
  .catch(error => {
    console.error('\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    console.log('\n‚ö†Ô∏è  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ production —Å–µ—Ä–≤–µ—Ä –≤—Ä—É—á–Ω—É—é!');
    process.exit(1);
  });