#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru —Å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';

console.log('üè• –°–æ–∑–¥–∞—é –∫–æ–Ω—Ç–µ–Ω—Ç Nplanner.ru —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏');

const posts = [
  {
    title: "–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Nplanner.ru –¥–ª—è –∫–ª–∏–Ω–∏–∫",
    content: `üè• –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥ —É–∂–µ –∑–¥–µ—Å—å!

–°–∏—Å—Ç–µ–º–∞ Nplanner.ru –ø–æ–º–æ–≥–∞–µ—Ç –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è–º:
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π  
‚úÖ –°–æ–∫—Ä–∞—â–∞—Ç—å –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ 70%
‚úÖ –£–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –ø—Ä–æ–ø—É—Å–∫–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å

üí° –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:
‚Üí 40% —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞
‚Üí 25% —Ä–æ—Å—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
‚Üí 90% —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤—Ä–∞—á–µ–π

–£–º–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –æ—Å–Ω–æ–≤–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã!

üîó –î–µ–º–æ-–≤–µ—Ä—Å–∏—è: nplanner.ru

#–º–µ–¥–∏—Ü–∏–Ω–∞ #–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #nplanner #–∫–ª–∏–Ω–∏–∫–∞ #–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è #–≤—Ä–∞—á–∏`,
    platforms: ["vk", "telegram"],
    topic: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –º–µ–¥–∏—Ü–∏–Ω–µ",
    imagePrompt: "modern medical clinic reception desk with computer screens showing appointment scheduling system, clean white interior, professional medical staff using digital tablets, bright lighting, healthcare technology"
  },
  {
    title: "–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—ã —Å Nplanner.ru",
    content: `üíª –¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –º–µ–Ω—è–µ—Ç —Ä–æ—Å—Å–∏–π—Å–∫–æ–µ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ!

üéØ Nplanner.ru ‚Äî –ª–∏–¥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:

üìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:
‚Ä¢ –û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ 24/7
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤

‚ö° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏:
‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º

üöÄ –≠–∫–æ–Ω–æ–º–∏—è –¥–æ 3 —á–∞—Å–æ–≤ —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å!

–ë—É–¥—É—â–µ–µ –º–µ–¥–∏—Ü–∏–Ω—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.

üåê –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ: nplanner.ru

#—Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è #–º–µ–¥–∏—Ü–∏–Ω–∞ #nplanner #—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ #–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ #–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è`,
    platforms: ["vk", "telegram"],
    topic: "–¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –º–µ–¥–∏—Ü–∏–Ω—ã",
    imagePrompt: "doctor using tablet computer in modern hospital, digital medical technology, electronic health records on screen, stethoscope on desk, medical planning software interface, professional healthcare environment"
  },
  {
    title: "–ö–∞—á–µ—Å—Ç–≤–æ –º–µ–¥–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ Nplanner.ru",
    content: `üë®‚Äç‚öïÔ∏è –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã!

üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è Nplanner.ru:

‚è∞ –î–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:
‚Üí –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ 70%
‚Üí –£–¥–æ–±–Ω–∞—è –æ–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å
‚Üí SMS/email –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Üí –ü—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–∞—á–µ–π

üë©‚Äç‚öïÔ∏è –î–ª—è –º–µ–¥–ø–µ—Ä—Å–æ–Ω–∞–ª–∞:
‚Üí –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞
‚Üí –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞
‚Üí –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞
‚Üí –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω—ã

üìà –î–ª—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞:
‚Üí –†–æ—Å—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ 45%
‚Üí –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏
‚Üí –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚Üí –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã

üíº –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª—é–±—ã—Ö –º–µ–¥—É—á—Ä–µ–∂–¥–µ–Ω–∏–π:
‚Ä¢ –ß–∞—Å—Ç–Ω—ã–µ –∫–ª–∏–Ω–∏–∫–∏ ‚Ä¢ –ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∏
‚Ä¢ –ú–µ–¥—Ü–µ–Ω—Ç—Ä—ã ‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞

–ö–∞—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!

üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: nplanner.ru

#–∫–∞—á–µ—Å—Ç–≤–æ #–º–µ–¥—É—Å–ª—É–≥–∏ #nplanner #–ø–∞—Ü–∏–µ–Ω—Ç—ã #–∫–ª–∏–Ω–∏–∫–∞ #–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ`,
    platforms: ["vk", "telegram"],
    topic: "–ö–∞—á–µ—Å—Ç–≤–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—Å–ª—É–≥",
    imagePrompt: "happy patients and medical staff in modern clinic waiting area, quality healthcare service, comfortable medical environment, satisfied patients with doctors, professional medical consultation"
  }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ FAL AI
async function generateMedicalImage(prompt, postTitle) {
  console.log(`üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: "${postTitle}"`);
  
  try {
    const response = await axios.post(`${API_BASE}/fal-image-generation`, {
      prompt: `${prompt}, professional medical photography, high quality, realistic, clean and modern healthcare environment`,
      image_size: "landscape_16_9",
      num_inference_steps: 30,
      guidance_scale: 7.5,
      enable_safety_checker: true
    }, {
      headers: {
        'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
        'Content-Type': 'application/json'
      },
      timeout: 60000
    });

    if (response.data?.success && response.data?.data?.url) {
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${response.data.data.url}`);
      return response.data.data.url;
    } else if (response.data?.imageUrl) {
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${response.data.imageUrl}`);
      return response.data.imageUrl;
    } else {
      console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(response.data)}`);
      return null;
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.response?.data?.message || error.message}`);
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint
    try {
      console.log('üîÑ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint...');
      const altResponse = await axios.post(`${API_BASE}/generate-image-fal`, {
        prompt: `${prompt}, medical clinic, professional healthcare, high quality photography`,
        image_size: "landscape_16_9"
      }, {
        headers: {
          'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
          'Content-Type': 'application/json'
        }
      });

      if (altResponse.data?.imageUrl) {
        console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ (–∞–ª—å—Ç): ${altResponse.data.imageUrl}`);
        return altResponse.data.imageUrl;
      }
    } catch (altError) {
      console.log(`‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π endpoint —Ç–æ–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${altError.message}`);
    }
    
    return null;
  }
}

async function createContentWithImages() {
  const headers = {
    'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
    'Content-Type': 'application/json'
  };

  console.log(`\nüìù –°–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${posts.length}`);

  const results = [];

  for (let i = 0; i < posts.length; i++) {
    const post = posts[i];
    
    console.log(`\nüìÑ –°–æ–∑–¥–∞—é –ø–æ—Å—Ç ${i + 1}/${posts.length}: ${post.title}`);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const imageUrl = await generateMedicalImage(post.imagePrompt, post.title);
    
    // –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    try {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      const contentData = {
        campaignId: CAMPAIGN_ID,
        title: post.title,
        content: post.content,
        contentType: 'text',
        platforms: post.platforms,
        status: 'draft',
        hashtags: post.content.match(/#\w+/g) || [],
        image_url: imageUrl,
        metadata: {
          source: 'nplanner_with_images',
          company: 'Nplanner.ru',
          topic: post.topic,
          createdAt: new Date().toISOString(),
          hasImage: !!imageUrl,
          imageGenerated: true
        }
      };

      const response = await axios.post(`${API_BASE}/campaign-content`, contentData, { headers });
      
      if (response.data?.success) {
        console.log(`‚úÖ –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω: ${response.data.data?.id}`);
        console.log(`   üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${imageUrl ? '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ' : '‚ùå –ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ'}`);
        console.log(`   üìù –¢–µ–∫—Å—Ç: ${post.content.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        
        results.push({
          id: response.data.data?.id,
          title: post.title,
          topic: post.topic,
          hasImage: !!imageUrl,
          imageUrl: imageUrl
        });
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: ${JSON.stringify(response.data)}`);
      }

      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è "${post.title}":`, error.response?.data || error.message);
    }
  }

  return results;
}

async function main() {
  try {
    const created = await createContentWithImages();
    
    console.log('\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log(`üìä –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: ${created.length}`);
    console.log(`üè• –ö–æ–º–ø–∞–Ω–∏—è: Nplanner.ru`);
    console.log(`üìù –°—Ç–∞—Ç—É—Å: –ß–µ—Ä–Ω–æ–≤–∏–∫–∏`);
    
    const withImages = created.filter(item => item.hasImage);
    console.log(`üì∏ –° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${withImages.length}/${created.length}`);
    
    if (created.length > 0) {
      console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:');
      created.forEach((item, index) => {
        console.log(`   ${index + 1}. ${item.title}`);
        console.log(`      üéØ –¢–µ–º–∞: ${item.topic}`);
        console.log(`      üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${item.hasImage ? '‚úÖ' : '‚ùå'}`);
        if (item.imageUrl) {
          console.log(`      üîó URL: ${item.imageUrl.substring(0, 50)}...`);
        }
      });
      
      console.log('\n‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≥–æ—Ç–æ–≤!');
      console.log('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
      console.log('üì± –ü–æ—Å—Ç—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

main().catch(console.error);