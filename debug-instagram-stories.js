/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É Instagram Stories
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram Stories –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç 
 * —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
 * 
 * –ó–∞–ø—É—Å–∫: node debug-instagram-media.js [contentId]
 */

import axios from 'axios';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const API_URL = process.env.API_URL || 'https://directus.nplanner.ru';
const ADMIN_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
const ADMIN_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD || '';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message, type = 'info') {
  const timestamp = new Date().toLocaleTimeString();
  const prefix = type === 'error' ? 'üî¥ –û–®–ò–ë–ö–ê' : 
                 type === 'warn' ? '‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï' : 
                 type === 'success' ? '‚úÖ –£–°–ü–ï–•' : 
                 type === 'step' ? 'üìã –®–ê–ì' : '‚ÑπÔ∏è –ò–ù–§–û';
  
  console.log(`${timestamp} [${prefix}] ${message}`);
}

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Directus API
 */
async function authenticateDirectus() {
  try {
    log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Directus API...', 'step');
    
    const response = await axios.post(`${API_URL}/auth/login`, {
      email: ADMIN_EMAIL,
      password: ADMIN_PASSWORD
    });
    
    if (response.data && response.data.data && response.data.data.access_token) {
      log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞', 'success');
      return response.data.data.access_token;
    } else {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`, 'error');
    if (error.response && error.response.data) {
      log(`–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(error.response.data)}`, 'error');
    }
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
 */
async function getContentInfo(contentId, token) {
  try {
    log(`–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ ${contentId}...`, 'step');
    
    const response = await axios.get(`${API_URL}/items/campaign_content/${contentId}`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });
    
    log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞', 'success');
    return response.data.data;
  } catch (error) {
    log(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`, 'error');
    if (error.response && error.response.data) {
      log(`–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(error.response.data)}`, 'error');
    }
    throw error;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–µ–¥–∏–∞ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
async function checkAndFixMediaField(content, token) {
  log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –¥–ª—è Instagram Stories...', 'step');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ª—è, –≥–¥–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const hasImageUrl = content.image_url && typeof content.image_url === 'string';
  const hasVideoUrl = content.video_url && typeof content.video_url === 'string';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º additional_images (—Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º) - —ç—Ç–æ –ø–æ–ª–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  let hasAdditionalImages = false;
  if (content.additional_images) {
    if (typeof content.additional_images === 'string') {
      try {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        const parsed = JSON.parse(content.additional_images);
        hasAdditionalImages = Array.isArray(parsed) && parsed.length > 0;
        log(`–ü–æ–ª–µ additional_images —Å–æ–¥–µ—Ä–∂–∏—Ç ${parsed.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ JSON-—Å—Ç—Ä–æ–∫–µ`, hasAdditionalImages ? 'success' : 'warn');
      } catch (e) {
        log(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ –ø–æ–ª–µ additional_images: ${e.message}`, 'warn');
      }
    } else if (Array.isArray(content.additional_images)) {
      hasAdditionalImages = content.additional_images.length > 0;
      log(`–ü–æ–ª–µ additional_images —Å–æ–¥–µ—Ä–∂–∏—Ç ${content.additional_images.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ`, hasAdditionalImages ? 'success' : 'warn');
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º additionalImages (–≤ camelCase) - —ç—Ç–æ –ø–æ–ª–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –æ–±—ä–µ–∫—Ç–µ
  let hasAdditionalImagesCC = false;
  if (content.additionalImages) {
    if (typeof content.additionalImages === 'string') {
      try {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        const parsed = JSON.parse(content.additionalImages);
        hasAdditionalImagesCC = Array.isArray(parsed) && parsed.length > 0;
        log(`–ü–æ–ª–µ additionalImages —Å–æ–¥–µ—Ä–∂–∏—Ç ${parsed.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ JSON-—Å—Ç—Ä–æ–∫–µ`, hasAdditionalImagesCC ? 'success' : 'warn');
      } catch (e) {
        log(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ –ø–æ–ª–µ additionalImages: ${e.message}`, 'warn');
      }
    } else if (Array.isArray(content.additionalImages)) {
      hasAdditionalImagesCC = content.additionalImages.length > 0;
      log(`–ü–æ–ª–µ additionalImages —Å–æ–¥–µ—Ä–∂–∏—Ç ${content.additionalImages.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ`, hasAdditionalImagesCC ? 'success' : 'warn');
    }
  }
  
  // –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –º–µ–¥–∏–∞
  const hasMedia = hasImageUrl || hasVideoUrl || hasAdditionalImages || hasAdditionalImagesCC;
  
  log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ–¥–∏–∞:
  - –ï—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (image_url): ${hasImageUrl ? '–î–ê' : '–ù–ï–¢'}
  - –ï—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –≤–∏–¥–µ–æ (video_url): ${hasVideoUrl ? '–î–ê' : '–ù–ï–¢'}
  - –ï—Å—Ç—å additional_images: ${hasAdditionalImages ? '–î–ê' : '–ù–ï–¢'}
  - –ï—Å—Ç—å additionalImages: ${hasAdditionalImagesCC ? '–î–ê' : '–ù–ï–¢'}
  - –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –º–µ–¥–∏–∞: ${hasMedia ? '–ú–ï–î–ò–ê –ù–ê–ô–î–ï–ù–û' : '–ú–ï–î–ò–ê –û–¢–°–£–¢–°–¢–í–£–ï–¢'}`, hasMedia ? 'success' : 'warn');
  
  // –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  if (!hasMedia) {
    log('–ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...', 'step');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Å–ª—É—á–∞–π–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    const testImageUrl = `https://picsum.photos/1080/1920?random=${Date.now()}`;
    log(`–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${testImageUrl}`);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const updateData = {};
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ image_url
    updateData.image_url = testImageUrl;
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º additional_images —Å —Ç–µ—Å—Ç–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    const additionalImages = [
      { url: testImageUrl, type: 'image' }
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–æ–ª–µ additional_images –∫–∞–∫ —Å—Ç—Ä–æ–∫—É JSON
    updateData.additional_images = JSON.stringify(additionalImages);
    
    log(`–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${JSON.stringify(updateData)}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try {
      const response = await axios.patch(
        `${API_URL}/items/campaign_content/${content.id}`,
        updateData,
        {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        }
      );
      
      log('–ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω —Å —Ç–µ—Å—Ç–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º', 'success');
      return true;
    } catch (error) {
      log(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`, 'error');
      if (error.response && error.response.data) {
        log(`–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(error.response.data)}`, 'error');
      }
      return false;
    }
  }
  
  return hasMedia;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
 */
async function main() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const contentId = process.argv[2];
    
    if (!contentId) {
      log('–ù–µ —É–∫–∞–∑–∞–Ω ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: node debug-instagram-media.js CONTENT_ID', 'error');
      process.exit(1);
    }
    
    log(`–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${contentId}`);
    
    // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Directus
    const token = await authenticateDirectus();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–µ–Ω—Ç–µ
    const content = await getContentInfo(contentId, token);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞
    const result = await checkAndFixMediaField(content, token);
    
    if (result) {
      log(`–ö–æ–Ω—Ç–µ–Ω—Ç ${contentId} —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram Stories`, 'success');
    } else {
      log(`–ö–æ–Ω—Ç–µ–Ω—Ç ${contentId} —É–∂–µ –∏–º–µ–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ`, 'warn');
    }
    
  } catch (error) {
    log(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`, 'error');
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main();