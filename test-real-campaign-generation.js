/**
 * –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ API
 */

import axios from 'axios';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const authData = {
  email: 'lbrspb@gmail.com',
  password: 'QtpZ3dh7'
};

// URL —Å–µ—Ä–≤–µ—Ä–∞
const BASE_URL = 'http://localhost:5000';

async function testRealGeneration() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, authData);
    const token = loginResponse.data.token;
    
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    console.log('Token –¥–ª–∏–Ω–∞:', token.length);
    
    // –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ë–ï–ó –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã
    console.log('\nüìù –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ë–ï–ó –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã');
    const testWithoutData = {
      prompt: '–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏',
      service: 'claude',
      useCampaignData: false
    };
    
    const responseWithout = await axios.post(`${BASE_URL}/api/generate-content`, testWithoutData, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ë–ï–ó –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç—ã:');
    console.log(responseWithout.data.content?.substring(0, 200) + '...');
    
    // –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –° –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã
    console.log('\nüìä –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –° –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã');
    const testWithData = {
      prompt: '–°–æ–∑–¥–∞–π –ø–æ—Å—Ç –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏',
      service: 'claude',
      useCampaignData: true,
      campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e'
    };
    
    const responseWith = await axios.post(`${BASE_URL}/api/generate-content`, testWithData, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –° –¥–∞–Ω–Ω—ã–º–∏ –∞–Ω–∫–µ—Ç—ã:');
    console.log(responseWith.data.content?.substring(0, 200) + '...');
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    console.log('\nüîç –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    console.log('1. –ë–µ–∑ –¥–∞–Ω–Ω—ã—Ö: –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è');
    console.log('2. –° –¥–∞–Ω–Ω—ã–º–∏: –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
    
    console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('üí° –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
    
    if (error.response?.data?.error?.includes('API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')) {
      console.log('üí° –ù—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞');
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testRealGeneration();