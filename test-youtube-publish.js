/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */

import fetch from 'node-fetch';

async function testYouTubePublish() {
  try {
    console.log('üé¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—é...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const contentResponse = await fetch('https://directus.roboflow.tech/items/campaign_content/bea24ff7-9c75-4404-812b-06d355bd98ac', {
      headers: {
        'Authorization': 'Bearer _cYEZbtGwG2biL0UnpdI6Q58EaW22VRm'
      }
    });
    
    const contentData = await contentResponse.json();
    const content = contentData.data;
    
    console.log('üìπ –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω:', content.title);
    console.log('üîó –í–∏–¥–µ–æ URL:', content.video_url);
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
    const campaignResponse = await fetch('https://directus.roboflow.tech/items/user_campaigns/46868c44-c6a4-4bed-accf-9ad07bba790e', {
      headers: {
        'Authorization': 'Bearer _cYEZbtGwG2biL0UnpdI6Q58EaW22VRm'
      }
    });
    
    const campaignData = await campaignResponse.json();
    const campaignSettings = campaignData.data.social_media_settings;
    
    console.log('‚öôÔ∏è YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã');
    console.log('üîë API Key:', campaignSettings.youtube.apiKey ? '–ï–°–¢–¨' : '–ù–ï–¢');
    console.log('üì∫ Channel ID:', campaignSettings.youtube.channelId);
    console.log('üé´ Access Token:', campaignSettings.youtube.accessToken ? '–ï–°–¢–¨' : '–ù–ï–¢');
    
    // –í—ã–∑—ã–≤–∞–µ–º YouTube —Å–µ—Ä–≤–∏—Å –Ω–∞–ø—Ä—è–º—É—é
    const publishData = {
      content: content,
      campaignSettings: campaignSettings,
      userId: content.user_id
    };
    
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ YouTube...');
    
    const publishResponse = await fetch('http://localhost:5000/api/publish/youtube', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(publishData)
    });
    
    const publishResult = await publishResponse.json();
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', publishResult);
    
    if (publishResult.success) {
      console.log('‚úÖ YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
      console.log('üîó URL –≤–∏–¥–µ–æ:', publishResult.postUrl);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', publishResult.error);
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

testYouTubePublish();