/**
 * –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 */

import axios from 'axios';

async function publishToYouTube() {
  try {
    console.log('üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä—è–º—É—é YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—é...');
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    console.log('üìã –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    const contentResponse = await axios.get(
      'https://directus.roboflow.tech/items/campaign_content/bea24ff7-9c75-4404-812b-06d355bd98ac',
      {
        headers: {
          'Authorization': 'Bearer _cYEZbtGwG2biL0UnpdI6Q58EaW22VRm'
        }
      }
    );
    
    const content = contentResponse.data.data;
    console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω: "${content.title}"`);
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏
    console.log('üîß –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏...');
    const campaignResponse = await axios.get(
      `https://directus.roboflow.tech/items/user_campaigns/${content.campaign_id}`,
      {
        headers: {
          'Authorization': 'Bearer _cYEZbtGwG2biL0UnpdI6Q58EaW22VRm'
        }
      }
    );
    
    const campaign = campaignResponse.data.data;
    const youtubeSettings = campaign.social_media_settings?.youtube;
    
    if (!youtubeSettings) {
      throw new Error('YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–∞–º–ø–∞–Ω–∏–∏');
    }
    
    console.log(`‚úÖ YouTube –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã –¥–ª—è –∫–∞–Ω–∞–ª–∞: ${youtubeSettings.channelId}`);
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º YouTube API –Ω–∞–ø—Ä—è–º—É—é
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º YouTube –ø—É–±–ª–∏–∫–∞—Ü–∏—é...');
    
    const publishData = {
      contentId: content.id,
      content: {
        title: content.title,
        description: content.content.replace(/<[^>]*>/g, '') || content.title,
        videoUrl: content.video_url,
        tags: ['nplanner', 'test']
      },
      youtubeSettings: youtubeSettings,
      userId: content.user_id
    };
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', {
      title: publishData.content.title,
      videoUrl: publishData.content.videoUrl,
      channelId: youtubeSettings.channelId
    });
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π API –º–∞—Ä—à—Ä—É—Ç
    const response = await axios.post(
      'http://localhost:5000/api/test-youtube-publish',
      publishData,
      {
        headers: {
          'Content-Type': 'application/json'
        },
        timeout: 60000 // 1 –º–∏–Ω—É—Ç–∞ —Ç–∞–π–º–∞—É—Ç
      }
    );
    
    console.log('‚úÖ –£–°–ü–ï–®–ù–ê–Ø –ü–£–ë–õ–ò–ö–ê–¶–ò–Ø!');
    console.log('üìÑ –û—Ç–≤–µ—Ç YouTube API:', response.data);
    
    if (response.data.result?.videoUrl) {
      console.log(`üîó –í–∏–¥–µ–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: ${response.data.result.videoUrl}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error.message);
    
    if (error.response) {
      console.error(`üìÑ HTTP —Å—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error('üìù –î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    
    if (error.code === 'ECONNREFUSED') {
      console.error('üîå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ');
    }
  }
}

publishToYouTube();