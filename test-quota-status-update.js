/**
 * –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ quota_exceeded –Ω–∞–ø—Ä—è–º—É—é
 */

import { storage } from './server/storage.js';

async function testQuotaStatusUpdate() {
    try {
        console.log('üß™ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê QUOTA_EXCEEDED');
        console.log('=' .repeat(50));
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        const contentId = '654701b6-a865-44f4-8453-0ea433cd5f90';
        const authToken = process.env.DIRECTUS_TOKEN;
        
        if (!authToken) {
            console.error('‚ùå –ù–µ—Ç DIRECTUS_TOKEN –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏');
            return;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        console.log('üìã –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
        const currentContent = await storage.getCampaignContentById(contentId, authToken);
        
        console.log('üìä –¢–µ–∫—É—â–∏–µ social_platforms:', JSON.stringify(currentContent.social_platforms, null, 2));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å YouTube –Ω–∞ quota_exceeded
        const updateData = {
            socialPlatforms: {
                ...currentContent.social_platforms,
                youtube: {
                    ...currentContent.social_platforms?.youtube,
                    status: 'quota_exceeded',
                    error: '–ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ YouTube API (—Ç–µ—Å—Ç)',
                    lastAttempt: new Date().toISOString()
                }
            }
        };
        
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:', JSON.stringify(updateData, null, 2));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await storage.updateCampaignContent(contentId, updateData, authToken);
        console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
        const updatedContent = await storage.getCampaignContentById(contentId, authToken);
        
        console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ social_platforms:', JSON.stringify(updatedContent.social_platforms, null, 2));
        
        const youtubeStatus = updatedContent.social_platforms?.youtube?.status;
        if (youtubeStatus === 'quota_exceeded') {
            console.log('‚úÖ –£–°–ü–ï–•: –°—Ç–∞—Ç—É—Å quota_exceeded —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        } else {
            console.log(`‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª—Å—è quota_exceeded, –ø–æ–ª—É—á–µ–Ω ${youtubeStatus}`);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    }
}

testQuotaStatusUpdate();