#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ webhook Facebook v3
 * –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∏–¥–µ–æ –≤ Facebook —á–µ—Ä–µ–∑ webhooks
 * 
 * –ó–∞–ø—É—Å–∫: node test-facebook-video-webhook.mjs
 */

import fetch from 'node-fetch';
import { URLSearchParams } from 'url';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
dotenv.config();

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏
function log(message) {
  const now = new Date();
  console.log(`[${now.toISOString()}] ${message}`);
}

/**
 * –¢–µ—Å—Ç POST –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –≤ Facebook
 */
async function testFacebookVideoWebhook() {
  try {
    log('–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –≤ Facebook —á–µ—Ä–µ–∑ webhook v3');
    
    // URL –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Facebook
    const webhookUrl = 'http://localhost:5000/api/facebook-webhook-v3';
    
    // ID —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –≤–∏–¥–µ–æ
    // –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç video_url
    const contentId = 'b35f34b6-a6e6-4dba-ba97-6e151c82d1e1'; 
    
    log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å contentId: ${contentId}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º POST –∑–∞–ø—Ä–æ—Å
    const response = await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ contentId })
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
    const data = await response.json();
    log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    log(`–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: ${JSON.stringify(data, null, 2)}`);
    
    if (response.ok) {
      log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω: –í–∏–¥–µ–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ Facebook');
      if (data.permalink) {
        log(`üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ: ${data.permalink}`);
      }
    } else {
      log('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∏–¥–µ–æ');
    }
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    if (error.response) {
      try {
        const errorBody = await error.response.text();
        log(`–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${errorBody}`);
      } catch (e) {
        log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏');
      }
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFacebookVideoWebhook();