/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Instagram Stories API
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏—é Stories —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
 */

import axios from 'axios';

async function testInstagramStories() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram Stories API...');

  const baseUrl = 'http://localhost:5000';
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Stories
  const testContentData = {
    contentId: 'test-stories-id',
    platforms: ['instagram'],
    contentType: 'instagram_stories',
    imageUrl: './uploads/smmtest.jpg',
    content: '–¢–µ—Å—Ç–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Instagram Stories API! üöÄ',
    interactive: {
      polls: [
        {
          question: '–ù—Ä–∞–≤–∏—Ç—Å—è –ª–∏ –≤–∞–º –Ω–∞—à –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç?',
          options: ['–î–∞!', '–°—É–ø–µ—Ä!']
        }
      ],
      sliders: [
        {
          question: '–û—Ü–µ–Ω–∏—Ç–µ –æ—Ç 1 –¥–æ 10',
          emoji: '‚≠ê'
        }
      ],
      questions: [
        {
          text: '–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å'
        }
      ]
    }
  };

  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é Stories...');
    
    const response = await axios.post(`${baseUrl}/api/publish/now`, testContentData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token'
      },
      timeout: 60000 // 60 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });

    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API:');
    console.log(JSON.stringify(response.data, null, 2));

    if (response.data.success) {
      console.log('üéâ Instagram Stories —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Stories ID –∏ URL
      if (response.data.result && response.data.result.storyId) {
        console.log(`üì± Story ID: ${response.data.result.storyId}`);
      }
      
      if (response.data.result && response.data.result.storyUrl) {
        console.log(`üîó Story URL: ${response.data.result.storyUrl}`);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
      if (response.data.result && response.data.result.interactiveElements) {
        console.log('üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã:');
        console.log(JSON.stringify(response.data.result.interactiveElements, null, 2));
      }
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Stories:');
      console.log(response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }

  } catch (error) {
    console.log('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Stories API:');
    
    if (error.response) {
      console.log(`–°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(error.response.data, null, 2));
    } else if (error.request) {
      console.log('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç:', error.message);
    } else {
      console.log('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
    }
  }
}

// –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ Stories –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
async function testSimpleStories() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ Instagram Stories...');

  const baseUrl = 'http://localhost:5000';
  
  const simpleStoriesData = {
    contentId: 'test-simple-stories-id',
    platforms: ['instagram'],
    contentType: 'instagram_stories',
    imageUrl: './uploads/smmtest.jpg',
    content: '–ü—Ä–æ—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤! üì±'
  };

  try {
    const response = await axios.post(`${baseUrl}/api/publish/now`, simpleStoriesData, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token'
      },
      timeout: 60000
    });

    console.log('‚úÖ –û—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ Stories:');
    console.log(JSON.stringify(response.data, null, 2));

  } catch (error) {
    console.log('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ Stories:');
    if (error.response) {
      console.log(JSON.stringify(error.response.data, null, 2));
    } else {
      console.log(error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Instagram Stories API\n');
  
  await testInstagramStories();
  await new Promise(resolve => setTimeout(resolve, 3000)); // –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã
  await testSimpleStories();
  
  console.log('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

runTests().catch(console.error);