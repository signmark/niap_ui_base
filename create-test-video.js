#!/usr/bin/env node

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∫—Å–∏
 */

import fs from 'fs';
import { execSync } from 'child_process';

async function createTestVideo() {
  try {
    console.log('üé¨ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ...');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é FFmpeg
    const outputPath = './test-video.mp4';
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ (—Ü–≤–µ—Ç–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç, 3 —Å–µ–∫—É–Ω–¥—ã)
    const ffmpegCmd = `ffmpeg -f lavfi -i "color=red:size=1080x1920:duration=3:rate=30" -c:v libx264 -pix_fmt yuv420p -y "${outputPath}"`;
    
    console.log('üìπ –í—ã–ø–æ–ª–Ω—è–µ–º FFmpeg –∫–æ–º–∞–Ω–¥—É...');
    execSync(ffmpegCmd, { stdio: 'ignore' });
    
    if (fs.existsSync(outputPath)) {
      const stats = fs.statSync(outputPath);
      console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: ${outputPath}`);
      console.log(`üìä –†–∞–∑–º–µ—Ä: ${(stats.size / 1024).toFixed(1)} KB`);
      return outputPath;
    } else {
      throw new Error('–§–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω');
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ: ${error.message}`);
    return null;
  }
}

async function uploadAndTestVideo(videoPath) {
  try {
    console.log('\nüì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏...');
    
    const response = await fetch('http://localhost:5000/api/test/instagram-upload-and-test', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ videoPath })
    });
    
    const result = await response.json();
    
    if (result.success) {
      console.log(`‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${result.data.uploadUrl}`);
      console.log(`üîç S3 –∫–ª—é—á: ${result.data.uploadKey}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–∫—Å–∏
      const fileName = result.data.uploadKey.split('/').pop();
      console.log(`\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ñ–∞–π–ª–∞: ${fileName}`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏
      const proxyUrl = `http://localhost:5000/api/instagram-video-proxy/${fileName}`;
      const proxyResponse = await fetch(proxyUrl, { method: 'HEAD' });
      
      console.log(`üìä –ü—Ä–æ–∫—Å–∏ —Å—Ç–∞—Ç—É—Å: ${proxyResponse.status}`);
      console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–æ–∫—Å–∏:`);
      console.log(`  Content-Type: ${proxyResponse.headers.get('content-type')}`);
      console.log(`  Accept-Ranges: ${proxyResponse.headers.get('accept-ranges')}`);
      console.log(`  Content-Length: ${proxyResponse.headers.get('content-length')}`);
      
      if (proxyResponse.headers.get('accept-ranges') === 'bytes') {
        console.log('\nüéâ –ü–†–û–ö–°–ò –†–ê–ë–û–¢–ê–ï–¢! Instagram –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —ç—Ç–æ—Ç URL');
        return proxyUrl;
      } else {
        console.log('\n‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Accept-Ranges: bytes');
      }
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${result.error}`);
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
  }
  
  return null;
}

async function main() {
  console.log('üöÄ –°–û–ó–î–ê–ù–ò–ï –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ö–°–ò');
  console.log('='.repeat(50));
  
  // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
  const videoPath = await createTestVideo();
  
  if (!videoPath) {
    console.error('üí• –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ');
    return;
  }
  
  // 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏
  const proxyUrl = await uploadAndTestVideo(videoPath);
  
  if (proxyUrl) {
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log(`–ü—Ä–æ–∫—Å–∏ URL –¥–ª—è Instagram: ${proxyUrl}`);
    console.log('‚úÖ –≠—Ç–æ—Ç URL –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ Instagram Graph API');
  }
  
  // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
  if (fs.existsSync(videoPath)) {
    fs.unlinkSync(videoPath);
    console.log('\nüóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
  }
}

main().catch(console.error);