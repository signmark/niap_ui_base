/**
 * –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ smmniap.pw —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
 */

import axios from 'axios';

async function testSMMNiapAnalysis() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ smmniap.pw...\n');
  
  try {
    console.log('üìç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: https://smmniap.pw');
    
    const response = await axios.post('http://localhost:5000/api/website-analysis', {
      url: 'https://smmniap.pw'
    }, {
      timeout: 20000,
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN}`
      }
    });

    if (response.data.success) {
      const data = response.data.data;
      console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–µ–Ω`);
      console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:`);
      console.log(`üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ${data.companyName}`);
      console.log(`üè¢ –û–ø–∏—Å–∞–Ω–∏–µ: ${data.businessDescription}`);
      console.log(`üéØ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: ${data.targetAudience}`);
      console.log(`üíé –¶–µ–Ω–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–∞: ${data.businessValues}`);
      console.log(`üîÆ –§–∏–ª–æ—Å–æ—Ñ–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞: ${data.productBeliefs}`);
      console.log(`üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${data.mainDirections}`);
      console.log(`‚ö° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: ${data.competitiveAdvantages}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∞
      const hasGoodSMMAnalysis = (
        data.companyName.toLowerCase().includes('smm') ||
        data.businessDescription.toLowerCase().includes('—Å–æ—Ü–∏–∞–ª—å–Ω') ||
        data.businessDescription.toLowerCase().includes('–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü') ||
        data.targetAudience.toLowerCase().includes('smm') ||
        data.targetAudience.toLowerCase().includes('–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥')
      );
      
      console.log(`\nüîç –ö–ê–ß–ï–°–¢–í–û –ê–ù–ê–õ–ò–ó–ê SMM-–ü–õ–ê–¢–§–û–†–ú–´: ${hasGoodSMMAnalysis ? '‚úÖ –•–û–†–û–®–û' : '‚ùå –ü–õ–û–•–û'}`);
      
      if (!hasGoodSMMAnalysis) {
        console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª–∞ smmniap.pw –∫–∞–∫ SMM-–ø–ª–∞—Ç—Ñ–æ—Ä–º—É!');
        console.log('–ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã –∏ –ª–æ–≥–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞');
      }
      
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${response.data.error}`);
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
    if (error.response?.data) {
      console.log(`üìã –î–µ—Ç–∞–ª–∏: ${JSON.stringify(error.response.data, null, 2)}`);
    }
  }
}

testSMMNiapAnalysis().catch(console.error);