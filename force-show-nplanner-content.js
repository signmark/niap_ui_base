#!/usr/bin/env node

/**
 * –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç Nplanner.ru –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
const CORRECT_USER_ID = '53921f16-f51d-4591-80b9-8caa4fde4d13';

async function forceShowContent() {
  try {
    console.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ö–û–ù–¢–ï–ù–¢–ê');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    const systemToken = process.env.DIRECTUS_TOKEN;
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Directus
    console.log('üì° –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç Nplanner.ru –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –±–∞–∑—ã...');
    
    const directusResponse = await axios.get(`${process.env.DIRECTUS_URL}/items/campaign_content`, {
      headers: {
        'Authorization': `Bearer ${systemToken}`
      },
      params: {
        filter: JSON.stringify({
          user_id: { _eq: CORRECT_USER_ID },
          campaign_id: { _eq: CAMPAIGN_ID }
        }),
        limit: -1,
        sort: ['-created_at']
      }
    });

    const allContent = directusResponse.data?.data || [];
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${allContent.length}`);

    // 2. –§–∏–ª—å—Ç—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç Nplanner
    const nplannerContent = allContent.filter(item => {
      const title = item.title || '';
      const content = item.content || '';
      return title.toLowerCase().includes('nplanner') || 
             content.toLowerCase().includes('nplanner');
    });

    console.log(`üè• –ö–æ–Ω—Ç–µ–Ω—Ç Nplanner.ru: ${nplannerContent.length} –ø–æ—Å—Ç–æ–≤`);

    if (nplannerContent.length > 0) {
      console.log('\n‚úÖ –ö–û–ù–¢–ï–ù–¢ –ù–ê–ô–î–ï–ù –í –ë–ê–ó–ï!');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã
      console.log('\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –ü–û–°–¢–´ NPLANNER.RU:');
      nplannerContent.slice(0, 5).forEach((item, index) => {
        const date = new Date(item.created_at).toLocaleString('ru-RU');
        const hasImage = item.image_url ? 'üì∏' : 'üìù';
        
        console.log(`${index + 1}. ${hasImage} ${item.title}`);
        console.log(`   üìÖ ${date}`);
        console.log(`   üÜî ${item.id}`);
        console.log('');
      });

      // 3. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –∫–µ—à
      console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫–µ—à–∞...');
      
      const testPost = await axios.post(`${process.env.DIRECTUS_URL}/items/campaign_content`, {
        user_id: CORRECT_USER_ID,
        campaign_id: CAMPAIGN_ID,
        title: `–¢–ï–°–¢ - Nplanner.ru –¥–æ—Å—Ç—É–ø–µ–Ω - ${new Date().toLocaleString('ru-RU')}`,
        content: `–≠—Ç–æ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ Nplanner.ru —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.\n\n–°–æ–∑–¥–∞–Ω: ${new Date().toISOString()}\n\n–í—Å–µ 28+ –ø–æ—Å—Ç–æ–≤ Nplanner.ru —Å–æ–∑–¥–∞–Ω—ã –∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.`,
        content_type: 'text',
        status: 'draft',
        metadata: JSON.stringify({
          source: 'cache_buster_test',
          created_by: 'force_show_script',
          timestamp: Date.now()
        })
      }, {
        headers: {
          'Authorization': `Bearer ${systemToken}`
        }
      });

      console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω: ${testPost.data.data.id}`);

      // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
      console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint...');
      try {
        const apiResponse = await axios.get(`${API_BASE}/campaign-content`, {
          headers: {
            'Authorization': `Bearer ${systemToken}`
          },
          params: {
            campaignId: CAMPAIGN_ID,
            limit: -1,
            _cacheBust: Date.now()
          }
        });

        const apiContent = apiResponse.data?.data || [];
        console.log(`üìä API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: ${apiContent.length} –∑–∞–ø–∏—Å–µ–π`);

        const apiNplanner = apiContent.filter(item => 
          (item.title && item.title.toLowerCase().includes('nplanner')) ||
          (item.content && item.content.toLowerCase().includes('nplanner'))
        );

        console.log(`üè• –ß–µ—Ä–µ–∑ API –Ω–∞–π–¥–µ–Ω–æ Nplanner: ${apiNplanner.length} –ø–æ—Å—Ç–æ–≤`);

        if (apiNplanner.length > 0) {
          console.log('\nüéâ –£–°–ü–ï–•! API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç Nplanner.ru');
        }

      } catch (apiError) {
        console.log('‚ö†Ô∏è API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º');
      }

      console.log('\nüîß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
      console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F5 –∏–ª–∏ Ctrl+R)');
      console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ß–µ—Ä–Ω–æ–≤–∏–∫–∏" –∏–ª–∏ "–ö–æ–Ω—Ç–µ–Ω—Ç"');
      console.log('3. –ï—Å–ª–∏ –Ω–µ –≤–∏–¥–∏—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:');
      console.log(`   localStorage.setItem('authToken', '${systemToken}'); location.reload();`);
      console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã - —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è');

    } else {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ö–æ–Ω—Ç–µ–Ω—Ç Nplanner –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

forceShowContent();