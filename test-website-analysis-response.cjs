/**
 * –¢–µ—Å—Ç –æ—Ç–≤–µ—Ç–∞ API –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
 */

const axios = require('axios');

async function testWebsiteAnalysisResponse() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ API –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞...');
  
  try {
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º DIRECTUS_TOKEN
    const token = process.env.DIRECTUS_TOKEN;
    
    if (!token) {
      console.log('‚ùå DIRECTUS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      return;
    }
    
    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞...');
    
    const response = await axios.post('http://localhost:5000/api/website-analysis', {
      url: 'https://www.cybersport.ru/tournaments/cs2/blast-tv-major-2025',
      campaignId: '8e4a1018-72ff-48eb-a3ff-9bd41bf83253'
    }, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      timeout: 15000
    });
    
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API');
    console.log('üìä –°—Ç–∞—Ç—É—Å:', response.status);
    console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(response.data, null, 2));
    
    if (response.data && response.data.data) {
      const analysisData = response.data.data;
      console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
      
      const fields = [
        'companyName',
        'contactInfo', 
        'businessDescription',
        'mainDirections',
        'brandImage',
        'productsServices',
        'targetAudience',
        'customerResults',
        'companyFeatures',
        'businessValues',
        'productBeliefs',
        'competitiveAdvantages',
        'marketingExpectations'
      ];
      
      fields.forEach(field => {
        const value = analysisData[field];
        if (value && value.trim()) {
          console.log(`‚úÖ ${field}: "${value.substring(0, 100)}${value.length > 100 ? '...' : ''}"`);
        } else {
          console.log(`‚ùå ${field}: –ø—É—Å—Ç–æ–µ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
        }
      });
      
      console.log('\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç:');
      const filledFields = fields.filter(field => analysisData[field] && analysisData[field].trim()).length;
      console.log(`–ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ–π: ${filledFields} –∏–∑ ${fields.length}`);
      
      if (filledFields > 0) {
        console.log('üéâ AI —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª—ë–∫ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∞–π—Ç–∞!');
      } else {
        console.log('‚ö†Ô∏è AI –Ω–µ —Å–º–æ–≥ –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∞–π—Ç–∞');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
  }
}

testWebsiteAnalysisResponse();