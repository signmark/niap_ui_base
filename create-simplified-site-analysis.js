/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞
 * –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–¥–≤–∏—Å–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
 */

import fs from 'fs';

const simplifiedSiteAnalysis = `
/**
 * –£–ü–†–û–©–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ê–ù–ê–õ–ò–ó–ê –°–ê–ô–¢–ê - –ë–ï–ó –ü–û–î–í–ò–°–ê–ù–ò–ô
 * –ó–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ extractFullSiteContent —Ñ—É–Ω–∫—Ü–∏–∏
 */
async function extractFullSiteContentSimplified(url: string): Promise<string> {
  try {
    console.log(\`üöÄ –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ —Å–∞–π—Ç–∞: \${url}\`);
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º URL
    let normalizedUrl = url;
    if (!normalizedUrl.startsWith('http://') && !normalizedUrl.startsWith('https://')) {
      normalizedUrl = \`https://\${normalizedUrl}\`;
    }
    
    // –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–´–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø
    const response = await axios.get(normalizedUrl, {
      timeout: 5000, // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: 5 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º
      maxContentLength: 1024 * 1024, // 1MB –º–∞–∫—Å–∏–º—É–º
      maxBodyLength: 1024 * 1024,
      headers: {
        'User-Agent': 'Mozilla/5.0 (compatible; SiteAnalyzer/1.0)',
        'Accept': 'text/html'
      },
      validateStatus: (status) => status >= 200 && status < 400
    });
    
    const htmlContent = response.data;
    
    // –ü–†–û–°–¢–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –ë–ï–ó –¶–ò–ö–õ–û–í
    const title = htmlContent.match(/<title>([^<]+)<\/title>/i)?.[1] || '';
    const description = htmlContent.match(/<meta[^>]*name=["']description["'][^>]*content=["']([^"']+)["']/i)?.[1] || '';
    
    // –ë–´–°–¢–†–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –ó–ê–ì–û–õ–û–í–ö–û–í (–ú–ê–ö–°–ò–ú–£–ú 5 –®–¢–£–ö)
    const h1s = htmlContent.match(/<h1[^>]*>([^<]+)<\/h1>/gi)?.slice(0, 5) || [];
    const h2s = htmlContent.match(/<h2[^>]*>([^<]+)<\/h2>/gi)?.slice(0, 5) || [];
    
    // –§–û–†–ú–ò–†–£–ï–ú –ö–û–†–û–¢–ö–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢
    const result = [
      \`URL: \${url}\`,
      title ? \`TITLE: \${title}\` : '',
      description ? \`DESCRIPTION: \${description}\` : '',
      h1s.length > 0 ? \`H1: \${h1s.join(', ')}\` : '',
      h2s.length > 0 ? \`H2: \${h2s.join(', ')}\` : ''
    ].filter(Boolean).join('\\n\\n');
    
    console.log(\`‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ \${Date.now() - startTime}ms\`);
    return result.substring(0, 5000); // –ú–∞–∫—Å–∏–º—É–º 5KB
    
  } catch (error) {
    console.error(\`‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞ \${url}:\`, error.message);
    return \`URL: \${url}\\n\\n–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\`;
  }
}
`;

console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Å–∞–π—Ç–∞...');
fs.writeFileSync('simplified-site-analysis.txt', simplifiedSiteAnalysis);
console.log('‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ simplified-site-analysis.txt');
console.log('üîß –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ extractFullSiteContent –≤ server/routes.ts');