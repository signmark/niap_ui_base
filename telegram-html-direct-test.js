/**
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML-—Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ –æ—á–∏—Å—Ç–∏—Ç–µ–ª—è HTML
 * –ó–∞–ø—É—Å–∫: node telegram-html-direct-test.js
 */

import { fixUnclosedTags } from './server/utils/telegram-html-cleaner.js';
import axios from 'axios';

// –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || '7529101043:AAG298h0iubyeKPuZ-WRtEfbNEnEyqy_XJU';
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || '-1002302366310';

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π HTML-—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
const testHtml = `<p>–í —Ö–æ–¥–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ <strong>–æ–±—Å—É–∂–¥–µ–Ω–∏—è</strong> –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∑–∞–≤—Ç—Ä–∞–∫ —è–≤–ª—è–µ—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–º –ø—Ä–∏–µ–º–æ–º –ø–∏—â–∏, –∏ –µ–≥–æ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏, –º–µ—Ç–∞–±–æ–ª–∏–∑–º –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∞–ø–ø–µ—Ç–∏—Ç–∞. üòä</p><p>–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–ª—å –ø–µ—Ä–µ–∫—É—Å–æ–≤, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–∏ –º–æ–≥—É—Ç –∫–∞–∫ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è <strong>"—Ö–æ—Ä–æ—à–µ–≥–æ"</strong>, —Ç–∞–∫ –∏ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç—å –≤—Ä–µ–¥ —Ñ–∏–≥—É—Ä–µ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é. üçé –ü–µ—Ä–µ–∫—É—Å—ã –ø–æ–º–æ–≥–∞—é—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–µ–∑–∫–∏—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π —É—Ä–æ–≤–Ω—è —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç —á—Ä–µ–∑–º–µ—Ä–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ –≥–æ–ª–æ–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞—á–∞—Å—Ç—É—é –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ø–µ—Ä–µ–µ–¥–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏. üö´</p><p>–°–ª–µ–¥—É–µ—Ç, –æ–¥–Ω–∞–∫–æ, –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –Ω–µ –≤—Å–µ –ø–µ—Ä–µ–∫—É—Å—ã –æ–¥–∏–Ω–∞–∫–æ–≤–æ –ø–æ–ª–µ–∑–Ω—ã. ‚ö†Ô∏è –ö –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–º –ø–µ—Ä–µ–∫—É—Å–∞–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è —Å–ª–∞–¥–æ—Å—Ç–∏, –±—É–ª–æ—á–∫–∏, –ø–µ—á–µ–Ω—å–µ, —á–∏–ø—Å—ã –∏ –ø—Ä–æ—á–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ñ–∞—Å—Ç—Ñ—É–¥–∞. üç© –û–Ω–∏ –≤—ã–∑—ã–≤–∞—é—Ç –±—ã—Å—Ç—Ä–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Å–∞—Ö–∞—Ä–∞ –≤ –∫—Ä–æ–≤–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–∏–ª–∏–≤ —ç–Ω–µ—Ä–≥–∏–∏, –Ω–æ —Å—Ç–æ–ª—å –∂–µ —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ —É—Å—Ç–∞–ª–æ—Å—Ç–∏, —É—Å–∏–ª–µ–Ω–∏—é –∞–ø–ø–µ—Ç–∏—Ç–∞ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—é –∂–∏—Ä–æ–≤—ã—Ö –æ—Ç–ª–æ–∂–µ–Ω–∏–π. </p><p><em>–ü–æ–ª–µ–∑–Ω—ã–º–∏ –ø–µ—Ä–µ–∫—É—Å–∞–º–∏ —è–≤–ª—è—é—Ç—Å—è —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —á—É–≤—Å—Ç–≤–æ —Å—ã—Ç–æ—Å—Ç–∏, —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞–ª–∞–Ω—Å –∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤.</em> ü•ó –ö –Ω–∏–º –º–æ–∂–Ω–æ –æ—Ç–Ω–µ—Å—Ç–∏ –æ—Ä–µ—Ö–∏, —è–≥–æ–¥—ã, —Ñ—Ä—É–∫—Ç—ã, –æ–≤–æ—â–∏ —Å —Ö—É–º—É—Å–æ–º, —è–π—Ü–∞, –≥—Ä–µ—á–µ—Å–∫–∏–π –π–æ–≥—É—Ä—Ç, —Ç–≤–æ—Ä–æ–≥, —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤—ã–µ —Ö–ª–µ–±—Ü—ã —Å –∞–≤–æ–∫–∞–¥–æ –∏–ª–∏ –æ—Ä–µ—Ö–æ–≤–æ–π –ø–∞—Å—Ç–æ–π. ü•ë üçû ü•í</p><p>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–µ—Ä–µ–∫—É—Å—ã–≤–∞–Ω–∏—é: üìù</p><ul><li>–í—ã–±–∏—Ä–∞–π—Ç–µ –ø–µ—Ä–µ–∫—É—Å—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –±–µ–ª–æ–∫, –ø–æ–ª–µ–∑–Ω—ã–µ –∂–∏—Ä—ã –∏ –∫–ª–µ—Ç—á–∞—Ç–∫—É ‚Äì –æ–Ω–∏ –¥–æ–ª—å—à–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —á—É–≤—Å—Ç–≤–æ —Å—ã—Ç–æ—Å—Ç–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤. üëç</li><li>–ù–µ —É–ø–æ—Ç—Ä–µ–±–ª—è–π—Ç–µ –ø–∏—â—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äì –ø–µ—Ä–µ–∫—É—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º, –µ—Å–ª–∏ –≤—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ –ª–µ–≥–∫–æ–µ —á—É–≤—Å—Ç–≤–æ –≥–æ–ª–æ–¥–∞, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ –∏–ª–∏ –æ—Ç —Å–∫—É–∫–∏. ü§î</li><li>–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ ‚Äì –≥–æ—Ä—Å—Ç—å –æ—Ä–µ—Ö–æ–≤ –ø–æ–ª–µ–∑–Ω–∞, –Ω–æ –µ—Å–ª–∏ —Å—ä–µ—Å—Ç—å –ø–æ–ª–ø–∞–∫–µ—Ç–∞, —ç—Ç–æ —É–∂–µ —Å—Ç–∞–Ω–µ—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º –ø—Ä–∏–µ–º–æ–º –ø–∏—â–∏. ü•ú</li></ul><p>–ï—Å–ª–∏ –≤—ã —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö –ø–∏—Ç–∞–Ω–∏—è, –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –∏ –≤—ã—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø–∏—Ç–∞–Ω–∏—è, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–∞—Ä–∞—Ñ–æ–Ω—É –Ω–∞ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ. üì±</p>`;

/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ HTML, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
 * @param {string} html HTML-—Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @returns {string} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π HTML-—Ç–µ–∫—Å—Ç
 */
function cleanHtml(html) {
  return html
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –±–ª–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    .replace(/<p[^>]*>([\s\S]*?)<\/p>/gi, '$1\n')
    .replace(/<div[^>]*>([\s\S]*?)<\/div>/gi, '$1\n')
    .replace(/<h[1-6][^>]*>([\s\S]*?)<\/h[1-6]>/gi, '<b>$1</b>\n')
    .replace(/<br\s*\/?>/gi, '\n')
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–∫–∏
    .replace(/<li[^>]*>([\s\S]*?)<\/li>/gi, '‚Ä¢ $1\n')
    .replace(/<ul[^>]*>([\s\S]*?)<\/ul>/gi, '$1\n')
    .replace(/<ol[^>]*>([\s\S]*?)<\/ol>/gi, '$1\n')
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ç–µ–≥–∏
    .replace(/<strong[^>]*>([\s\S]*?)<\/strong>/gi, '<b>$1</b>')
    .replace(/<em[^>]*>([\s\S]*?)<\/em>/gi, '<i>$1</i>')
    // –£–¥–∞–ª—è–µ–º –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏
    .replace(/<\/?(?!b|i|u|s|code|pre|a\b)[^>]+>/gi, '');
}

/**
 * –†—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ HTML –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
 * @param {string} html –ò—Å—Ö–æ–¥–Ω—ã–π HTML
 * @returns {string} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π HTML –¥–ª—è Telegram
 */
function manualHtmlProcessing(html) {
  // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  let result = html
    .replace(/<p[^>]*>([\s\S]*?)<\/p>/gi, '$1\n')
    .replace(/<div[^>]*>([\s\S]*?)<\/div>/gi, '$1\n')
    .replace(/<h[1-6][^>]*>([\s\S]*?)<\/h[1-6]>/gi, '<b>$1</b>\n')
    .replace(/<br\s*\/?>/gi, '\n');
    
  // 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–∫–∏
  result = result
    .replace(/<li[^>]*>([\s\S]*?)<\/li>/gi, '‚Ä¢ $1\n')
    .replace(/<ul[^>]*>([\s\S]*?)<\/ul>/gi, '$1\n')
    .replace(/<ol[^>]*>([\s\S]*?)<\/ol>/gi, '$1\n');
    
  // 3. –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º Telegram-—Ç–µ–≥–∏ (–∫–∞–∂–¥—ã–π —Ç–µ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ)
  // –í–ê–ñ–ù–û: –¥–ª—è —Ç–µ–≥–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π –æ—Ç–¥–µ–ª—å–Ω–æ
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º bold
  let processedResult = '';
  const boldSegments = result.split(/<\/?strong[^>]*>/);
  for (let i = 0; i < boldSegments.length; i++) {
    if (i % 2 === 0) {
      // –ù–µ—á–µ—Ç–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã - –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
      processedResult += boldSegments[i];
    } else {
      // –ß–µ—Ç–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã - —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ <strong>...</strong>
      processedResult += `<b>${boldSegments[i]}</b>`;
    }
  }
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º italic
  result = processedResult;
  processedResult = '';
  const italicSegments = result.split(/<\/?em[^>]*>/);
  for (let i = 0; i < italicSegments.length; i++) {
    if (i % 2 === 0) {
      // –ù–µ—á–µ—Ç–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã - –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
      processedResult += italicSegments[i];
    } else {
      // –ß–µ—Ç–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã - —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ <em>...</em>
      processedResult += `<i>${italicSegments[i]}</i>`;
    }
  }
  
  // 4. –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–≥–∏
  result = processedResult.replace(/<\/?(?!b|i|u|s|code|pre|a\b)[^>]+>/gi, '');
  
  return result;
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
 * @param {string} text –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} parse_mode –†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ (HTML –∏–ª–∏ Markdown)
 * @returns {Promise<any>} –û—Ç–≤–µ—Ç –æ—Ç Telegram API
 */
async function sendTelegramMessage(text, parse_mode = 'HTML') {
  const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
  const data = {
    chat_id: TELEGRAM_CHAT_ID,
    text,
    parse_mode
  };
  
  try {
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (${text.length} —Å–∏–º–≤–æ–ª–æ–≤)...`);
    const response = await axios.post(url, data);
    console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API:', JSON.stringify(response.data, null, 2));
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error.response?.data || error.message);
    throw error;
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —Å–ø–æ—Å–æ–±–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTML:

// 1. –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π - –æ—á–∏—Å—Ç–∫–∞ –æ—Ç HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
async function testPlainText() {
  console.log('\n=== –¢–ï–°–¢ 1: –ü–†–û–°–¢–û–ô –¢–ï–ö–°–¢ –ë–ï–ó –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø ===');
  
  const plainText = testHtml.replace(/<[^>]+>/g, '');
  
  try {
    await sendTelegramMessage(plainText);
    console.log('‚úÖ –¢–µ—Å—Ç 1 —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω:', error.message);
  }
}

// 2. –ë–∞–∑–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ HTML —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–µ–≥–æ–≤
async function testBasicHtmlCleaning() {
  console.log('\n=== –¢–ï–°–¢ 2: –ë–ê–ó–û–í–ê–Ø –û–ß–ò–°–¢–ö–ê HTML ===');
  
  const cleanedHtml = cleanHtml(testHtml);
  
  try {
    await sendTelegramMessage(cleanedHtml);
    console.log('‚úÖ –¢–µ—Å—Ç 2 —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω:', error.message);
  }
}

// 3. –†—É—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ HTML
async function testManualHtmlProcessing() {
  console.log('\n=== –¢–ï–°–¢ 3: –†–£–ß–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê HTML ===');
  
  const processedHtml = manualHtmlProcessing(testHtml);
  const fixedHtml = fixUnclosedTags(processedHtml);
  
  try {
    await sendTelegramMessage(fixedHtml);
    console.log('‚úÖ –¢–µ—Å—Ç 3 —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
async function runAllTests() {
  try {
    await testPlainText();
    await testBasicHtmlCleaning();
    await testManualHtmlProcessing();
    console.log('\n–í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Telegram.');
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runAllTests();