/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * 
 * –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ 'published' –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
 * 2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ 'published' —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞—Ç—É—Å 'published'
 * 
 * –ó–∞–ø—É—Å–∫: node test-platform-status-update.js ID_–ö–û–ù–¢–ï–ù–¢–ê –ü–õ–ê–¢–§–û–†–ú–ê
 * –ü—Ä–∏–º–µ—Ä: node test-platform-status-update.js 02bc0dc0-4a3d-4926-adbc-260f8ac2f3fd telegram
 */

import axios from 'axios';
import fs from 'fs';
import 'dotenv/config';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_URL = 'http://localhost:5000';
const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
const DIRECTUS_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
const DIRECTUS_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD || '123456789';

// –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const CONTENT_ID = process.argv[2] || '02bc0dc0-4a3d-4926-adbc-260f8ac2f3fd';
const PLATFORM = process.argv[3] || 'telegram';

// –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
const directusApi = axios.create({
  baseURL: DIRECTUS_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function waitFor(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Directus
async function authenticate() {
  try {
    console.log(`\nüîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${DIRECTUS_EMAIL}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ Directus
    const response = await directusApi.post('/auth/login', {
      email: DIRECTUS_EMAIL,
      password: DIRECTUS_PASSWORD
    });
    
    if (!response.data || !response.data.data || !response.data.data.access_token) {
      console.error('‚ùå –û—Ç–≤–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω:', response.data);
      return null;
    }
    
    const token = response.data.data.access_token;
    console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –¥–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${token.length}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    directusApi.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;
    
    return token;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function getContent(id) {
  try {
    console.log(`\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å ID: ${id}`);
    const response = await api.get(`/api/campaign-content/${id}`);
    
    let contentData = response.data;
    if (response.data && response.data.data) {
      contentData = response.data.data;
    }
    
    return contentData;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º
async function setupPlatformStatuses(id, platforms) {
  try {
    console.log(`\nüîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${id}`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const contentResponse = await directusApi.get(`/items/campaign_content/${id}`);
    if (!contentResponse.data || !contentResponse.data.data) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ Directus');
      return false;
    }
    
    const contentData = contentResponse.data.data;
    const socialPlatforms = contentData.social_platforms || {};
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å 'pending' –¥–ª—è –≤—Å–µ—Ö —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
    for (const platform of platforms) {
      socialPlatforms[platform] = {
        ...(socialPlatforms[platform] || {}),
        status: 'pending'
      };
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Directus
    const updateResponse = await directusApi.patch(`/items/campaign_content/${id}`, {
      status: 'scheduled',
      social_platforms: socialPlatforms
    });
    
    if (!updateResponse.data) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Directus');
      return false;
    }
    
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ 'pending'`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return false;
  }
}

// –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function requestPublish(id, platforms) {
  try {
    console.log(`\nüöÄ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${id} –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${platforms.join(', ')}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é
    const response = await api.post(`/api/publish/${id}`, {
      platforms: platforms
    });
    
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:`, response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ Directus
async function updatePlatformStatus(id, platform, newStatus) {
  try {
    console.log(`\nüìù –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ${platform} –Ω–∞ ${newStatus} –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ${id}`);
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const contentResponse = await directusApi.get(`/items/campaign_content/${id}`);
    if (!contentResponse.data || !contentResponse.data.data) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ Directus');
      return false;
    }
    
    const contentData = contentResponse.data.data;
    const socialPlatforms = contentData.social_platforms || {};
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    socialPlatforms[platform] = {
      ...(socialPlatforms[platform] || {}),
      status: newStatus,
      publishedAt: new Date().toISOString()
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Directus
    const updateResponse = await directusApi.patch(`/items/campaign_content/${id}`, {
      social_platforms: socialPlatforms
    });
    
    if (!updateResponse.data) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Directus');
      return false;
    }
    
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ${platform} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${newStatus}`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
function checkPublicationStatuses(content, platforms) {
  console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:`);
  console.log(`  –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${content.status || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
  
  if (!content.socialPlatforms) {
    console.log('  –î–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    return false;
  }
  
  let allPublished = true;
  for (const platform of platforms) {
    const platformData = content.socialPlatforms[platform];
    console.log(`  ${platform}: ${platformData?.status || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
    
    if (!platformData || platformData.status !== 'published') {
      allPublished = false;
    }
  }
  
  console.log(`  –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã: ${allPublished ? '–î–∞' : '–ù–µ—Ç'}`);
  
  return {
    allPublished,
    contentStatus: content.status
  };
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
async function runTest() {
  console.log('====================================');
  console.log('üß™ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê –ö–û–ù–¢–ï–ù–¢–ê üß™');
  console.log('====================================');
  console.log(`üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: ${CONTENT_ID}`);
  console.log(`üì± –¢–µ—Å—Ç–∏—Ä—É–µ–º–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${PLATFORM}`);
  
  try {
    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const token = await authenticate();
    if (!token) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const initialContent = await getContent(CONTENT_ID);
    if (!initialContent) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    console.log(`\nüìÑ –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`);
    console.log(`  –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${initialContent.title || '(–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞)'}`);
    console.log(`  –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${initialContent.contentType || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    console.log(`  –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å: ${initialContent.status || '–Ω–µ –∑–∞–¥–∞–Ω'}`);
    
    // 3. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º (–≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)
    const allPlatforms = ['telegram', 'vk', 'instagram'];
    await setupPlatformStatuses(CONTENT_ID, allPlatforms);
    
    // 4. –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
    const preparedContent = await getContent(CONTENT_ID);
    checkPublicationStatuses(preparedContent, allPlatforms);
    
    // 5. –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
    await requestPublish(CONTENT_ID, [PLATFORM]);
    
    // 6. –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    console.log('\n‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞...');
    await waitFor(5000);
    
    // 7. –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
    const afterSinglePublishContent = await getContent(CONTENT_ID);
    const singlePublishResult = checkPublicationStatuses(afterSinglePublishContent, allPlatforms);
    
    // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –∞–ª–≥–æ—Ä–∏—Ç–º–∞: –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è scheduled
    if (singlePublishResult.contentStatus === 'scheduled') {
      console.log('\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–ª—Å—è "scheduled" –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É');
    } else {
      console.log(`\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "${singlePublishResult.contentStatus}" –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É`);
    }
    
    // 9. –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    const remainingPlatforms = allPlatforms.filter(p => p !== PLATFORM);
    for (const platform of remainingPlatforms) {
      await updatePlatformStatus(CONTENT_ID, platform, 'published');
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
      await waitFor(1000);
    }
    
    // 10. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    const finalContent = await getContent(CONTENT_ID);
    const finalResult = checkPublicationStatuses(finalContent, allPlatforms);
    
    // 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –∞–ª–≥–æ—Ä–∏—Ç–º–∞: –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å –¥–æ–ª–∂–µ–Ω —Å—Ç–∞—Ç—å published
    if (finalResult.allPublished && finalResult.contentStatus === 'published') {
      console.log('\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "published" –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã');
    } else {
      console.log(`\n‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ "published" (—Ç–µ–∫—É—â–∏–π: "${finalResult.contentStatus}") –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–æ –≤—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã`);
    }
    
    console.log('\n====================================');
    console.log('‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');
    console.log('====================================');
  } catch (error) {
    console.error(`\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
    if (error.stack) {
      console.error(error.stack);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
runTest();