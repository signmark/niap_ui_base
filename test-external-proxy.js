#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ–∫—Å–∏
 */

import fetch from 'node-fetch';

async function testExternalProxy() {
  // –ü–æ–ª—É—á–∞–µ–º –¥–æ–º–µ–Ω Replit
  const replitDomain = process.env.REPLIT_DEV_DOMAIN || `${process.env.REPL_SLUG}-${process.env.REPL_OWNER}.replit.dev`;
  
  if (!replitDomain) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –¥–æ–º–µ–Ω Replit');
    return null;
  }
  
  console.log('üåê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ù–ï–®–ù–ï–ì–û –ü–†–û–ö–°–ò');
  console.log('='.repeat(50));
  console.log(`üîó Replit –¥–æ–º–µ–Ω: ${replitDomain}`);
  
  const videoId = 'instagram_test_1755687085314.mp4';
  const externalProxyUrl = `https://${replitDomain}/api/instagram-video-proxy/${videoId}`;
  
  console.log(`üìπ –í–Ω–µ—à–Ω–∏–π –ø—Ä–æ–∫—Å–∏ URL: ${externalProxyUrl}`);
  
  try {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø...');
    
    const response = await fetch(externalProxyUrl, { method: 'HEAD' });
    
    console.log(`üìä HTTP Status: ${response.status}`);
    console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:`);
    console.log(`  Content-Type: ${response.headers.get('content-type')}`);
    console.log(`  Accept-Ranges: ${response.headers.get('accept-ranges')}`);
    console.log(`  Content-Length: ${response.headers.get('content-length')}`);
    
    if (response.status === 200 && response.headers.get('accept-ranges') === 'bytes') {
      console.log('\nüéâ –í–ù–ï–®–ù–ò–ô –ü–†–û–ö–°–ò –†–ê–ë–û–¢–ê–ï–¢!');
      console.log(`üåê –ì–æ—Ç–æ–≤—ã–π URL –¥–ª—è Instagram: ${externalProxyUrl}`);
      
      // –¢–µ—Å—Ç Range –∑–∞–ø—Ä–æ—Å–∞
      console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º Range –∑–∞–ø—Ä–æ—Å...');
      const rangeResponse = await fetch(externalProxyUrl, {
        headers: { 'Range': 'bytes=0-1023' }
      });
      
      if (rangeResponse.status === 206) {
        console.log('‚úÖ Range –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤–Ω–µ—à–Ω–µ (HTTP 206)');
        console.log(`üìã Content-Range: ${rangeResponse.headers.get('content-range')}`);
      }
      
      return externalProxyUrl;
    } else {
      console.log(`\n‚ùå –í–Ω–µ—à–Ω–∏–π –ø—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${response.status}`);
      return null;
    }
  } catch (error) {
    console.error(`üí• –û—à–∏–±–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞: ${error.message}`);
    return null;
  }
}

async function main() {
  const externalUrl = await testExternalProxy();
  
  if (externalUrl) {
    console.log('\n' + '='.repeat(60));
    console.log('üèÜ –ì–û–¢–û–í–ê–Ø –í–ù–ï–®–ù–Ø–Ø –°–°–´–õ–ö–ê –î–õ–Ø INSTAGRAM:');
    console.log(`üîó ${externalUrl}`);
    console.log('='.repeat(60));
  } else {
    console.log('\nüí• –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  }
}

main().catch(console.error);