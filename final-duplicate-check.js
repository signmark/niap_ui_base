#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –≤–Ω–µ–¥—Ä–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã –∑–∞—â–∏—Ç—ã
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

function checkSchedulerProtection() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–¢–´ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –û–¢ –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø ===\n');
  
  try {
    const schedulerPath = path.join(__dirname, 'server/services/publish-scheduler.ts');
    const content = fs.readFileSync(schedulerPath, 'utf8');
    
    const checks = [];
    
    // 1. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ isProcessing
    const hasProcessingLock = content.includes('private isProcessing = false');
    const hasProcessingCheck = content.includes('if (this.isProcessing)');
    const hasProcessingTimeout = content.includes('processingDuration < 60000');
    checks.push({
      name: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ isProcessing',
      status: hasProcessingLock && hasProcessingCheck,
      details: `–û–±—ä—è–≤–ª–µ–Ω–∏–µ: ${hasProcessingLock}, –ü—Ä–æ–≤–µ—Ä–∫–∞: ${hasProcessingCheck}, –¢–∞–π–º–∞—É—Ç: ${hasProcessingTimeout}`
    });
    
    // 2. –°–±—Ä–æ—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ finally
    const hasFinallyBlock = content.includes('} finally {') && content.includes('this.isProcessing = false');
    checks.push({
      name: '–°–±—Ä–æ—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ finally',
      status: hasFinallyBlock,
      details: `Finally –±–ª–æ–∫ —Å isProcessing = false: ${hasFinallyBlock}`
    });
    
    // 3. –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ VK
    const hasTimeValidation = content.includes('timeUntilPublish <= 60000');
    checks.push({
      name: '–ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ VK',
      status: hasTimeValidation,
      details: `–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${hasTimeValidation}`
    });
    
    // 4. –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    const intervalMatch = content.match(/checkIntervalMs\s*=\s*(\d+)/);
    const interval = intervalMatch ? parseInt(intervalMatch[1]) : 0;
    const intervalOk = interval >= 20000;
    checks.push({
      name: '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞',
      status: intervalOk,
      details: `–ò–Ω—Ç–µ—Ä–≤–∞–ª: ${interval}ms (${interval/1000}—Å), –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π: ${intervalOk}`
    });
    
    // 5. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
    const instanceMatches = content.match(/new\s+PublishScheduler/g);
    const singleInstance = !instanceMatches || instanceMatches.length <= 1;
    checks.push({
      name: '–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞',
      status: singleInstance,
      details: `–ù–∞–π–¥–µ–Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤: ${instanceMatches ? instanceMatches.length : 0}`
    });
    
    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:');
    console.log('==================');
    
    let passedChecks = 0;
    checks.forEach((check, index) => {
      const icon = check.status ? '‚úÖ' : '‚ùå';
      console.log(`${index + 1}. ${icon} ${check.name}`);
      console.log(`   ${check.details}\n`);
      if (check.status) passedChecks++;
    });
    
    // –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
    const score = (passedChecks / checks.length) * 100;
    console.log(`üìä –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê: ${passedChecks}/${checks.length} (${score.toFixed(1)}%)`);
    
    if (score >= 90) {
      console.log('üéâ –û–¢–õ–ò–ß–ù–û: –°–∏—Å—Ç–µ–º–∞ –∏–º–µ–µ—Ç –Ω–∞–¥–µ–∂–Ω—É—é –∑–∞—â–∏—Ç—É –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è!');
    } else if (score >= 70) {
      console.log('‚ö†Ô∏è  –•–û–†–û–®–û: –°–∏—Å—Ç–µ–º–∞ –∏–º–µ–µ—Ç –±–∞–∑–æ–≤—É—é –∑–∞—â–∏—Ç—É, –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è');
    } else {
      console.log('‚ùå –ö–†–ò–¢–ò–ß–ù–û: –°–∏—Å—Ç–µ–º–∞ —É—è–∑–≤–∏–º–∞ –¥–ª—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π');
    }
    
    return score >= 90;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error.message);
    return false;
  }
}

function checkVKTimeProtection() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–¢–´ –û–¢ –ü–†–ï–ñ–î–ï–í–†–ï–ú–ï–ù–ù–û–ô –ü–£–ë–õ–ò–ö–ê–¶–ò–ò VK ===\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞—â–∏—Ç–æ–π)
    const schedulerPath = path.join(__dirname, 'server/services/publish-scheduler.ts');
    const content = fs.readFileSync(schedulerPath, 'utf8');
    
    // –ò—â–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è VK –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ
    const hasVKTimeCheck = content.includes('timeUntilPublish <= 60000') || 
                          content.includes('timeUntilPublish < 60000');
    
    console.log(`VK –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: ${hasVKTimeCheck ? '‚úÖ –ù–ê–ô–î–ï–ù–ê' : '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê'}`);
    
    if (hasVKTimeCheck) {
      console.log('‚úÖ VK –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ');
      console.log('   –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞—á–Ω—É—Ç—Å—è —Ä–∞–Ω—å—à–µ —á–µ–º –∑–∞ 1 –º–∏–Ω—É—Ç—É –¥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
    } else {
      console.log('‚ùå VK –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –º–æ–≥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏');
    }
    
    return hasVKTimeCheck;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ VK –∑–∞—â–∏—Ç—ã:', error.message);
    return false;
  }
}

function checkLogAnalysis() {
  console.log('\n=== –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í –î–õ–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø –†–ê–ë–û–¢–´ ===\n');
  
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:');
  console.log('1. "–ë–õ–û–ö–ò–†–û–í–ö–ê: –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è" - —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É –∑–∞—â–∏—Ç—ã');
  console.log('2. "–†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê: –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É" - —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–±—Ä–æ—Å');
  console.log('3. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è');
  
  return true;
}

async function main() {
  console.log('üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–©–ò–¢–´ –û–¢ –î–£–ë–õ–ò–†–û–í–ê–ù–ò–Ø');
  console.log('==============================================');
  
  const results = [];
  
  results.push(checkSchedulerProtection());
  results.push(checkVKTimeProtection());
  results.push(checkLogAnalysis());
  
  const allPassed = results.every(result => result);
  
  console.log('\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
  console.log('===================');
  
  if (allPassed) {
    console.log('üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π.');
    console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∏–º–µ–µ—Ç –Ω–∞–¥–µ–∂–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –æ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
    console.log('‚úÖ VK –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É');
  } else {
    console.log('‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤—ã—à–µ –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.');
  }
}

main().catch(console.error);