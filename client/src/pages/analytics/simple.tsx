import { useEffect, useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Activity, BarChart3, Users, TrendingUp } from 'lucide-react';

interface AnalyticsData {
  contentCount: number;
  keywordsCount: number;
  platformsStats: any;
  topPosts: any;
  status: any;
}

export default function SimpleAnalytics() {
  const [data, setData] = useState<AnalyticsData>({
    contentCount: 0,
    keywordsCount: 0,
    platformsStats: null,
    topPosts: null,
    status: null
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const token = localStorage.getItem('token');
  const campaignId = '46868c44-c6a4-4bed-accf-9ad07bba790e';

  useEffect(() => {
    const fetchAllData = async () => {
      if (!token) {
        setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        setLoading(false);
        return;
      }

      try {
        setLoading(true);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [contentRes, keywordsRes, platformsRes, postsRes, statusRes] = await Promise.all([
          fetch(`/api/analytics/content-count?campaignId=${campaignId}`, {
            headers: { 'Authorization': `Bearer ${token}` }
          }),
          fetch(`/api/analytics/keywords-count?campaignId=${campaignId}`, {
            headers: { 'Authorization': `Bearer ${token}` }
          }),
          fetch(`/api/analytics/platforms-stats?campaignId=${campaignId}&period=7`, {
            headers: { 'Authorization': `Bearer ${token}` }
          }),
          fetch(`/api/analytics/top-posts?campaignId=${campaignId}`, {
            headers: { 'Authorization': `Bearer ${token}` }
          }),
          fetch(`/api/analytics/status`, {
            headers: { 'Authorization': `Bearer ${token}` }
          })
        ]);

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã
        const contentData = await contentRes.json();
        const keywordsData = await keywordsRes.json();
        const platformsData = await platformsRes.json();
        const postsData = await postsRes.json();
        const statusData = await statusRes.json();

        console.log('Loaded data:', {
          content: contentData,
          keywords: keywordsData,
          platforms: platformsData,
          posts: postsData,
          status: statusData
        });

        setData({
          contentCount: contentData.data?.count || contentData.count || 0,
          keywordsCount: keywordsData.data?.count || keywordsData.count || 0,
          platformsStats: platformsData.data || platformsData,
          topPosts: postsData.data || postsData,
          status: statusData.status || statusData
        });

      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    fetchAllData();
  }, [token, campaignId]);

  if (loading) {
    return (
      <div className="container mx-auto p-6">
        <div className="flex items-center justify-center h-64">
          <div className="text-lg">–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...</div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="container mx-auto p-6">
        <div className="text-red-500 text-center">{error}</div>
      </div>
    );
  }

  return (
    <div className="container mx-auto p-6 space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-3xl font-bold">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</h1>
        <div className="text-sm text-muted-foreground">
          –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ü—É–±–ª–∏–∫–∞—Ü–∏–∏</CardTitle>
            <BarChart3 className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{data.contentCount}</div>
            <p className="text-xs text-muted-foreground">
              –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</CardTitle>
            <Activity className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{data.keywordsCount}</div>
            <p className="text-xs text-muted-foreground">
              –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {data.platformsStats?.totalPosts || 202}
            </div>
            <p className="text-xs text-muted-foreground">
              –í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            </p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–°—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∞</CardTitle>
            <TrendingUp className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {data.status?.isCollecting ? 'üîÑ' : '‚úÖ'}
            </div>
            <p className="text-xs text-muted-foreground">
              {data.status?.isCollecting ? '–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö' : '–ì–æ—Ç–æ–≤–æ'}
            </p>
          </CardContent>
        </Card>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º */}
      {data.platformsStats && (
        <Card>
          <CardHeader>
            <CardTitle>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º</CardTitle>
            <CardDescription>–í–∞—à–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º —Å–µ—Ç—è–º</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {data.platformsStats.platforms && (
                <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
                  {data.platformsStats.platforms.map((platform: string, index: number) => (
                    <div key={index} className="bg-muted p-4 rounded-lg">
                      <div className="font-medium">{platform}</div>
                    </div>
                  ))}
                </div>
              )}
              
              {data.platformsStats.aggregated && (
                <div className="mt-4">
                  <h4 className="font-semibold mb-2">–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4>
                  <div className="grid gap-2 md:grid-cols-3">
                    <div>–í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π: {data.platformsStats.aggregated.totalPosts}</div>
                    <div>–í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {data.platformsStats.aggregated.totalViews}</div>
                    <div>–í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: {data.platformsStats.aggregated.totalLikes}</div>
                  </div>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      )}

      {/* –¢–æ–ø–æ–≤—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
      {data.topPosts && (
        <Card>
          <CardHeader>
            <CardTitle>–¢–æ–ø–æ–≤—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</CardTitle>
            <CardDescription>–°–∞–º—ã–µ —É—Å–ø–µ—à–Ω—ã–µ –ø–æ—Å—Ç—ã</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {data.topPosts.topByViews && data.topPosts.topByViews.length > 0 ? (
                <div>
                  <h4 className="font-semibold mb-2">–ü–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º:</h4>
                  {data.topPosts.topByViews.slice(0, 3).map((post: any, index: number) => (
                    <div key={index} className="bg-muted p-3 rounded mb-2">
                      <div className="font-medium">{post.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</div>
                      <div className="text-sm text-muted-foreground">
                        –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {post.views || 0}
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="text-muted-foreground">–î–∞–Ω–Ω—ã–µ –æ —Ç–æ–ø–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏—è—Ö –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...</div>
              )}
            </div>
          </CardContent>
        </Card>
      )}

      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle>–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="text-sm space-y-2">
            <div>‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏–∏: {data.contentCount} –∑–∞–≥—Ä—É–∂–µ–Ω–æ</div>
            <div>‚úÖ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {data.keywordsCount} –Ω–∞–π–¥–µ–Ω–æ</div>
            <div>‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º: {data.platformsStats ? '–∑–∞–≥—Ä—É–∂–µ–Ω–∞' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</div>
            <div>‚úÖ –¢–æ–ø–æ–≤—ã–µ –ø–æ—Å—Ç—ã: {data.topPosts ? '–∑–∞–≥—Ä—É–∂–µ–Ω—ã' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</div>
            <div>‚úÖ –°—Ç–∞—Ç—É—Å: {data.status ? '–ø–æ–ª—É—á–µ–Ω' : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}