import { useEffect, useState } from 'react';
import { useLocation } from 'wouter';

export default function InstagramCallback() {
  const [, setLocation] = useLocation();
  const [status, setStatus] = useState<'processing' | 'success' | 'error'>('processing');
  const [message, setMessage] = useState('–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Facebook...');

  useEffect(() => {
    const handleCallback = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
        const urlParams = new URLSearchParams(window.location.search);
        const code = urlParams.get('code');
        const state = urlParams.get('state');
        const error = urlParams.get('error');

        console.log('üî• CALLBACK RECEIVED:', { code, state, error });

        if (error) {
          throw new Error(`Facebook OAuth error: ${error}`);
        }

        if (!code || !state) {
          throw new Error('Missing authorization code or state parameter');
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ N8N webhook –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        const response = await fetch('https://n8n.roboflow.space/webhook/authorize-ig', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            code,
            state,
            callback_type: 'facebook_oauth'
          })
        });

        if (!response.ok) {
          throw new Error(`N8N processing failed: ${response.status}`);
        }

        setStatus('success');
        setMessage('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Instagram —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          window.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º popup –æ–∫–Ω–æ
        }, 3000);

      } catch (error) {
        console.error('Callback processing error:', error);
        setStatus('error');
        setMessage((error as Error).message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    };

    handleCallback();
  }, []);

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50">
      <div className="max-w-md w-full space-y-8 p-8">
        <div className="text-center">
          <h2 className="text-3xl font-extrabold text-gray-900">
            Instagram OAuth Callback
          </h2>
          
          <div className="mt-6">
            {status === 'processing' && (
              <div className="flex items-center justify-center space-x-2">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                <span className="text-gray-600">{message}</span>
              </div>
            )}
            
            {status === 'success' && (
              <div className="text-green-600">
                <div className="text-5xl mb-4">‚úÖ</div>
                <p className="text-lg font-medium">{message}</p>
                <p className="text-sm text-gray-500 mt-2">
                  –û–∫–Ω–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
                </p>
              </div>
            )}
            
            {status === 'error' && (
              <div className="text-red-600">
                <div className="text-5xl mb-4">‚ùå</div>
                <p className="text-lg font-medium">–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</p>
                <p className="text-sm text-gray-700 mt-2">{message}</p>
                <button 
                  onClick={() => window.close()}
                  className="mt-4 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700"
                >
                  –ó–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}