import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Loader2, 
  CheckCircle, 
  AlertCircle, 
  ExternalLink, 
  Facebook, 
  Instagram, 
  Settings, 
  Copy,
  ChevronRight,
  User,
  Key,
  Link as LinkIcon,
  Users
} from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { apiRequest } from '@/lib/queryClient';
import FacebookGroupsSelector from './FacebookGroupsSelector';

interface InstagramSetupWizardProps {
  campaignId: string;
  instagramSettings?: {
    appId?: string;
    appSecret?: string;
    instagramId?: string;
    accessToken?: string;
  };
  onSettingsUpdate?: (settings: any) => void;
}

const InstagramSetupWizardComplete: React.FC<InstagramSetupWizardProps> = ({ 
  campaignId, 
  instagramSettings = {}, 
  onSettingsUpdate 
}) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [formData, setFormData] = useState({
    appId: instagramSettings.appId || '',
    appSecret: instagramSettings.appSecret || '',
    instagramId: instagramSettings.instagramId || '',
    accessToken: instagramSettings.accessToken || ''
  });
  const [loading, setLoading] = useState(false);
  const [oauthLoading, setOauthLoading] = useState(false);
  const [authUrl, setAuthUrl] = useState('');
  const [facebookToken, setFacebookToken] = useState('');
  
  const { toast } = useToast();

  // Webhook URL –¥–ª—è N8N –∫–æ–ª–±–µ–∫–∞
  const webhookUrl = 'https://n8n.roboflow.space/webhook/instagram-auth';
  const redirectUri = `${window.location.origin}/instagram-callback`;

  useEffect(() => {
    if (instagramSettings) {
      setFormData({
        appId: instagramSettings.appId || '',
        appSecret: instagramSettings.appSecret || '',
        instagramId: instagramSettings.instagramId || '',
        accessToken: instagramSettings.accessToken || ''
      });
      
      // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É 4
      if (instagramSettings.appId && instagramSettings.appSecret) {
        setCurrentStep(4);
      }
    }
  }, [instagramSettings]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ postMessage –æ—Ç OAuth callback
  useEffect(() => {
    const handleMessage = (event: MessageEvent) => {
      if (event.origin !== window.location.origin) return;
      
      if (event.data.type === 'INSTAGRAM_OAUTH_SUCCESS') {
        console.log('üéâ OAUTH SUCCESS - Received from callback:', event.data.data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if (event.data.data.token) {
          setFormData(prev => ({
            ...prev,
            accessToken: event.data.data.token
          }));
          
          toast({
            title: "–£—Å–ø–µ—à–Ω–æ!",
            description: "Instagram –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω",
            variant: "default"
          });
          
          // –í—ã–∑—ã–≤–∞–µ–º callback –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
          // –≠—Ç–æ—Ç callback –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
          if (onSettingsUpdate) {
            onSettingsUpdate({
              ...event.data.data,
              needsRefresh: true // –§–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            });
          }
        }
      }
    };

    window.addEventListener('message', handleMessage);
    return () => window.removeEventListener('message', handleMessage);
  }, [onSettingsUpdate, toast]);

  // –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ OAuth callback –æ–∫–Ω–∞
  useEffect(() => {
    const handleMessage = (event: MessageEvent) => {
      console.log('üì° WIZARD - Message received from callback:', event.data);
      
      if (event.origin !== window.location.origin) {
        console.log('‚ùå WIZARD - Origin mismatch, ignoring message');
        return;
      }

      if (event.data.type === 'INSTAGRAM_OAUTH_SUCCESS') {
        console.log('‚úÖ WIZARD - OAuth success message received!');
        console.log('üìã WIZARD - OAuth data:', event.data.data);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        if (event.data.data.token) {
          console.log('üîë WIZARD - Updating accessToken in form:', event.data.data.token.substring(0, 20) + '...');
          setFormData(prev => ({
            ...prev,
            accessToken: event.data.data.token
          }));
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è Facebook –≥—Ä—É–ø–ø –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É 5
          setFacebookToken(event.data.data.token);
          setCurrentStep(5);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ callback
        if (onSettingsUpdate && event.data.data) {
          console.log('üîÑ WIZARD - Calling onSettingsUpdate callback');
          onSettingsUpdate(event.data.data);
        }
        
        toast({
          title: "Instagram –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!",
          description: "–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏"
        });
        
        console.log('‚úÖ WIZARD - OAuth processing complete, stopping loading state');
        setOauthLoading(false);
      }
    };

    window.addEventListener('message', handleMessage);
    return () => window.removeEventListener('message', handleMessage);
  }, [onSettingsUpdate, toast]);

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    toast({
      title: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
      description: "–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞"
    });
  };

  const startOAuthFlow = async () => {
    if (!formData.appId || !formData.appSecret) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ App ID –∏ App Secret"
      });
      return;
    }

    setOauthLoading(true);
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥ –∏–∑ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è OAuth URL
      const response = await fetch('/api/instagram/auth/start', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          appId: formData.appId,
          appSecret: formData.appSecret,
          redirectUri: redirectUri,
          webhookUrl: webhookUrl,
          instagramId: formData.instagramId,
          campaignId: campaignId
        })
      });

      const data = await response.json();
      
      if (data.authUrl) {
        setAuthUrl(data.authUrl);
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º OAuth –æ–∫–Ω–æ
        window.open(data.authUrl, 'instagram-auth', 'width=600,height=700');
        
        toast({
          title: "OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è",
          description: "–û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Instagram"
        });
      } else {
        throw new Error(data.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å URL –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('OAuth error:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ OAuth",
        description: error instanceof Error ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
      });
    } finally {
      setOauthLoading(false);
    }
  };

  const handleSaveSettings = async () => {
    if (!formData.appId || !formData.appSecret) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è"
      });
      return;
    }

    setLoading(true);
    
    try {
      await apiRequest(`/api/campaigns/${campaignId}/instagram-settings`, {
        method: 'PATCH',
        data: {
          appId: formData.appId,
          appSecret: formData.appSecret,
          instagramId: formData.instagramId,
          accessToken: formData.accessToken
        }
      });

      toast({
        title: "–£—Å–ø–µ—Ö!",
        description: "Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
      });

      if (onSettingsUpdate) {
        onSettingsUpdate(formData);
      }
    } catch (error) {
      console.error('Error saving Instagram settings:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
      });
    } finally {
      setLoading(false);
    }
  };

  const renderStep1 = () => (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Facebook className="h-5 w-5 text-blue-600" />
          –®–∞–≥ 1: –°–æ–∑–¥–∞–π—Ç–µ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É
        </CardTitle>
        <CardDescription>
          –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –Ω–µ–π Instagram –∞–∫–∫–∞—É–Ω—Ç
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <Alert>
          <Instagram className="h-4 w-4" />
          <AlertDescription>
            Instagram API —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Facebook Business. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –±–∏–∑–Ω–µ—Å –∞–∫–∫–∞—É–Ω—Ç Instagram, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
          </AlertDescription>
        </Alert>
        
        <div className="space-y-3">
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">1</Badge>
            <div>
              <h4 className="font-medium">–°–æ–∑–¥–∞–π—Ç–µ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É</h4>
              <p className="text-sm text-muted-foreground">
                –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <strong>facebook.com</strong> –∏ —Å–æ–∑–¥–∞–π—Ç–µ –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
              </p>
              <Button variant="outline" size="sm" className="mt-2" asChild>
                <a href="https://www.facebook.com/pages/create" target="_blank" rel="noopener noreferrer">
                  –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É <ExternalLink className="ml-1 h-3 w-3" />
                </a>
              </Button>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">2</Badge>
            <div>
              <h4 className="font-medium">–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ Instagram –≤ –±–∏–∑–Ω–µ—Å —Ä–µ–∂–∏–º</h4>
              <p className="text-sm text-muted-foreground">
                –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Instagram: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ê–∫–∫–∞—É–Ω—Ç ‚Üí –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
              </p>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">3</Badge>
            <div>
              <h4 className="font-medium">–ü—Ä–∏–≤—è–∂–∏—Ç–µ Instagram –∫ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü–µ</h4>
              <p className="text-sm text-muted-foreground">
                –í Instagram: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–∏–∑–Ω–µ—Å ‚Üí –ü—Ä–∏–≤—è–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É Facebook
              </p>
            </div>
          </div>
        </div>

        <Button onClick={() => setCurrentStep(2)} className="w-full">
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å <ChevronRight className="ml-1 h-4 w-4" />
        </Button>
      </CardContent>
    </Card>
  );

  const renderStep2 = () => (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Settings className="h-5 w-5 text-blue-600" />
          –®–∞–≥ 2: –°–æ–∑–¥–∞–π—Ç–µ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        </CardTitle>
        <CardDescription>
          –°–æ–∑–¥–∞–π—Ç–µ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API –∫–ª—é—á–µ–π
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-3">
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">1</Badge>
            <div>
              <h4 className="font-medium">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Facebook Developers</h4>
              <Button variant="outline" size="sm" className="mt-2" asChild>
                <a href="https://developers.facebook.com/apps/" target="_blank" rel="noopener noreferrer">
                  –û—Ç–∫—Ä—ã—Ç—å developers.facebook.com <ExternalLink className="ml-1 h-3 w-3" />
                </a>
              </Button>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">2</Badge>
            <div>
              <h4 className="font-medium">–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h4>
              <p className="text-sm text-muted-foreground mb-2">
                –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: <strong>"Business"</strong> –∏–ª–∏ <strong>"Other"</strong>
              </p>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">3</Badge>
            <div>
              <h4 className="font-medium">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ redirect URI</h4>
              <p className="text-sm text-muted-foreground mb-2">
                –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π redirect URI:
              </p>
              <div className="bg-gray-100 dark:bg-gray-800 p-3 rounded-md flex items-center justify-between">
                <code className="text-sm">{redirectUri}</code>
                <Button size="sm" variant="ghost" onClick={() => copyToClipboard(redirectUri)}>
                  <Copy className="h-3 w-3" />
                </Button>
              </div>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">4</Badge>
            <div>
              <h4 className="font-medium">–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h4>
              <p className="text-sm text-muted-foreground mb-2">
                –í —Ä–∞–∑–¥–µ–ª–µ "Products" –¥–æ–±–∞–≤—å—Ç–µ:
              </p>
              <ul className="text-sm text-muted-foreground list-disc list-inside space-y-1">
                <li><strong>"Instagram Basic Display"</strong> - –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Instagram</li>
                <li><strong>"Facebook Login"</strong> - –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</li>
              </ul>
            </div>
          </div>
          
          <div className="flex items-start gap-3">
            <Badge variant="outline" className="mt-1">5</Badge>
            <div>
              <h4 className="font-medium">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è</h4>
              <p className="text-sm text-muted-foreground mb-2">
                –í Instagram Basic Display ‚Üí Settings –¥–æ–±–∞–≤—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:
              </p>
              <div className="bg-gray-100 dark:bg-gray-800 p-2 rounded text-xs font-mono">
                email,<br/>
                public_profile
              </div>
              <p className="text-xs text-yellow-600 mt-2">
                ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç. 
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ App Review.
              </p>
            </div>
          </div>
        </div>

        <div className="flex gap-2">
          <Button variant="outline" onClick={() => setCurrentStep(1)}>
            –ù–∞–∑–∞–¥
          </Button>
          <Button onClick={() => setCurrentStep(3)} className="flex-1">
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å <ChevronRight className="ml-1 h-4 w-4" />
          </Button>
        </div>
      </CardContent>
    </Card>
  );

  const renderStep3 = () => (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Key className="h-5 w-5 text-blue-600" />
          –®–∞–≥ 3: –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </CardTitle>
        <CardDescription>
          –°–∫–æ–ø–∏—Ä—É–π—Ç–µ App ID –∏ App Secret –∏–∑ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <Alert>
          <AlertCircle className="h-4 w-4" />
          <AlertDescription>
            <strong>–í–∞–∂–Ω–æ:</strong> –≠—Ç–æ –ù–ï —Ç–æ–∫–µ–Ω—ã Instagram! –ù—É–∂–Ω—ã –∏–º–µ–Ω–Ω–æ App ID –∏ App Secret –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–∞–∑–¥–µ–ª–µ "Basic Settings"
          </AlertDescription>
        </Alert>

        <div className="space-y-4">
          <div>
            <Label htmlFor="appId">Facebook App ID *</Label>
            <Input
              id="appId"
              type="text"
              placeholder="–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: 1234567890123456"
              value={formData.appId}
              onChange={(e) => {
                // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
                const value = e.target.value.replace(/\D/g, '');
                setFormData(prev => ({ ...prev, appId: value }));
              }}
            />
            <p className="text-xs text-muted-foreground mt-1">
              15-16 —Ü–∏—Ñ—Ä –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ù–ï Instagram —Ç–æ–∫–µ–Ω!)
            </p>
            {formData.appId && formData.appId.length < 10 && (
              <p className="text-xs text-red-500 mt-1">
                –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π App ID - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å
              </p>
            )}
          </div>

          <div>
            <Label htmlFor="appSecret">Facebook App Secret *</Label>
            <Input
              id="appSecret"
              type="password"
              placeholder="–°—Ç—Ä–æ–∫–∞ –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ü–∏—Ñ—Ä"
              value={formData.appSecret}
              onChange={(e) => setFormData(prev => ({ ...prev, appSecret: e.target.value }))}
            />
            <p className="text-xs text-muted-foreground mt-1">
              –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            </p>
          </div>

          <div>
            <Label htmlFor="accessToken">Access Token</Label>
            <Input
              id="accessToken"
              type="text"
              placeholder="–ë—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
              value={formData.accessToken}
              onChange={(e) => setFormData(prev => ({ ...prev, accessToken: e.target.value }))}
              readOnly
            />
            <p className="text-xs text-muted-foreground mt-1">
              {formData.accessToken ? '–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω ‚úì' : '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ —à–∞–≥—É 4'}
            </p>
          </div>
          
          <div>
            <Label htmlFor="instagramId">Instagram Business Account ID (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
            <Input
              id="instagramId"
              type="text"
              placeholder="–ï—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω, –≤–≤–µ–¥–∏—Ç–µ Instagram ID"
              value={formData.instagramId}
              onChange={(e) => setFormData(prev => ({ ...prev, instagramId: e.target.value }))}
            />
            <p className="text-xs text-muted-foreground mt-1">
              –ë—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            </p>
          </div>
        </div>

        <div className="flex gap-2">
          <Button variant="outline" onClick={() => setCurrentStep(2)}>
            –ù–∞–∑–∞–¥
          </Button>
          <Button 
            onClick={() => setCurrentStep(4)} 
            className="flex-1"
            disabled={!formData.appId || !formData.appSecret}
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å <ChevronRight className="ml-1 h-4 w-4" />
          </Button>
        </div>
      </CardContent>
    </Card>
  );

  const renderStep4 = () => (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <LinkIcon className="h-5 w-5 text-green-600" />
          –®–∞–≥ 4: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Instagram
        </CardTitle>
        <CardDescription>
          –ü–æ–ª—É—á–∏—Ç–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ OAuth
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <Alert>
          <Instagram className="h-4 w-4" />
          <AlertDescription>
            –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–º–ø–∞–Ω–∏–∏
          </AlertDescription>
        </Alert>

        <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
          <h4 className="font-medium text-blue-900 dark:text-blue-100 mb-2">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h4>
          <ol className="text-sm text-blue-800 dark:text-blue-200 space-y-1 list-decimal list-inside">
            <li>–û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Facebook</li>
            <li>–í—ã –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ Instagram Business –∞–∫–∫–∞—É–Ω—Ç—É</li>
            <li>–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–∏—Ç –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ç–æ–∫–µ–Ω –∏ –æ–±–º–µ–Ω—è–µ—Ç –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π</li>
            <li>–í—Å–µ –¥–∞–Ω–Ω—ã–µ Instagram —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —ç—Ç–æ–π –∫–∞–º–ø–∞–Ω–∏–∏</li>
            <li>–ì–æ—Ç–æ–≤–æ! –ú–æ–∂–Ω–æ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≤ Instagram</li>
          </ol>
        </div>

        <div className="flex gap-2">
          <Button variant="outline" onClick={() => setCurrentStep(3)}>
            –ù–∞–∑–∞–¥
          </Button>
          <Button 
            onClick={startOAuthFlow}
            disabled={oauthLoading || !formData.appId || !formData.appSecret}
            className="flex-1"
          >
            {oauthLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
            –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å Instagram
          </Button>
        </div>

        <Separator />

        <div className="space-y-3">
          <h4 className="font-medium">–ò–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –≥—Ä—É–ø–ø–∞–º:</h4>
          <div className="flex gap-2">
            <Button 
              onClick={handleSaveSettings}
              variant="outline"
              disabled={loading}
              className="flex-1"
            >
              {loading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
            <Button 
              onClick={() => {
                setFacebookToken(formData.accessToken);
                setCurrentStep(5);
              }}
              disabled={!formData.accessToken}
              className="flex-1"
            >
              –ö –≥—Ä—É–ø–ø–∞–º Facebook <ChevronRight className="ml-1 h-4 w-4" />
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const renderStep5 = () => (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Users className="h-5 w-5 text-purple-600" />
          –®–∞–≥ 5: Facebook –ì—Ä—É–ø–ø—ã (–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
        </CardTitle>
        <CardDescription>
          –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Facebook –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ Pages API
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <Alert>
          <Facebook className="h-4 w-4" />
          <AlertDescription>
            –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –≥—Ä—É–ø–ø—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–∞—à–∏–º–∏ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏. 
            –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—ã –±–µ–∑ App Review –ø—Ä–æ—Ü–µ—Å—Å–∞.
          </AlertDescription>
        </Alert>

        <div className="bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg">
          <h4 className="font-medium text-purple-900 dark:text-purple-100 mb-2">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≥—Ä—É–ø–ø–∞–º–∏:</h4>
          <ol className="text-sm text-purple-800 dark:text-purple-200 space-y-1 list-decimal list-inside">
            <li>–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à Instagram/Facebook —Ç–æ–∫–µ–Ω</li>
            <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ Pages API</li>
            <li>–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—ã –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</li>
            <li>–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —ç—Ç–æ–π –∫–∞–º–ø–∞–Ω–∏–∏</li>
            <li>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ N8N –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π</li>
          </ol>
        </div>

        {facebookToken && (
          <FacebookGroupsSelector 
            campaignId={campaignId}
            accessToken={facebookToken}
            onGroupsSelected={(groups) => {
              toast({
                title: "Facebook –≥—Ä—É–ø–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
                description: `–í—ã–±—Ä–∞–Ω–æ ${groups.length} –≥—Ä—É–ø–ø –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏`,
              });
            }}
          />
        )}

        <div className="flex gap-2">
          <Button variant="outline" onClick={() => setCurrentStep(4)}>
            –ù–∞–∑–∞–¥
          </Button>
          <Button 
            onClick={() => {
              toast({
                title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                description: "Instagram –∏ Facebook –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
              });
              onSettingsUpdate?.(formData);
            }}
            className="flex-1"
          >
            –ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É <CheckCircle className="ml-1 h-4 w-4" />
          </Button>
        </div>

        <Separator />

        <div className="text-center">
          <p className="text-sm text-muted-foreground">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä—É–ø–ø –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä—É–ø–ø—ã –ø–æ–∑–∂–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–º–ø–∞–Ω–∏–∏.
          </p>
        </div>
      </CardContent>
    </Card>
  );

  const resetWizard = () => {
    setFormData({
      appId: '',
      appSecret: '',
      accessToken: '',
      instagramId: ''
    });
    setCurrentStep(1);
    setFacebookToken('');
    toast({
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã",
      description: "–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å –Ω–æ–≤—ã–º Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º"
    });
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h3 className="text-lg font-semibold">Instagram API Setup Wizard</h3>
        <div className="flex items-center gap-2">
          <Button variant="ghost" size="sm" onClick={resetWizard}>
            –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </Button>
          <Badge variant="outline">–®–∞–≥ {currentStep} –∏–∑ 5</Badge>
        </div>
      </div>

      {/* Progress indicator */}
      <div className="flex items-center space-x-2">
        {[1, 2, 3, 4, 5].map((step) => (
          <div key={step} className="flex items-center">
            <div 
              className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${
                step <= currentStep 
                  ? 'bg-blue-600 text-white' 
                  : 'bg-gray-200 text-gray-600'
              }`}
            >
              {step < currentStep ? <CheckCircle className="h-4 w-4" /> : step}
            </div>
            {step < 5 && (
              <div className={`flex-1 h-1 ${step < currentStep ? 'bg-blue-600' : 'bg-gray-200'}`} />
            )}
          </div>
        ))}
      </div>

      {/* Step content */}
      <div>
        {currentStep === 1 && renderStep1()}
        {currentStep === 2 && renderStep2()}
        {currentStep === 3 && renderStep3()}
        {currentStep === 4 && renderStep4()}
        {currentStep === 5 && renderStep5()}
      </div>
    </div>
  );
};

export default InstagramSetupWizardComplete;