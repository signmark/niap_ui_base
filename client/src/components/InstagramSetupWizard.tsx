import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Separator } from '@/components/ui/separator';
import { ExternalLink, CheckCircle, AlertCircle, Instagram, Facebook } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { apiRequest } from '@/lib/queryClient';
import { useAuthStore } from '@/lib/store';

interface InstagramAccount {
  instagramId: string;
  username: string;
  name: string;
  profilePicture?: string;
  pageId: string;
  pageName: string;
}

interface InstagramSetupData {
  connected: boolean;
  appId?: string;
  appSecret?: string;
  instagramId?: string;
  setupCompletedAt?: string;
}

interface InstagramSetupWizardProps {
  campaignId: string;
  instagramSettings?: {
    appId?: string;
    appSecret?: string;
    instagramId?: string;
  };
  onSettingsUpdate?: (settings: any) => void;
}

const InstagramSetupWizard: React.FC<InstagramSetupWizardProps> = ({ 
  campaignId, 
  instagramSettings = {}, 
  onSettingsUpdate 
}) => {
  const [formData, setFormData] = useState({
    appId: instagramSettings.appId || '',
    appSecret: instagramSettings.appSecret || '',
    instagramId: instagramSettings.instagramId || ''
  });
  const [loading, setLoading] = useState(false);
  
  const { toast } = useToast();
  const { userId } = useAuthStore();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  useEffect(() => {
    if (instagramSettings) {
      setFormData({
        appId: instagramSettings.appId || '',
        appSecret: instagramSettings.appSecret || '',
        instagramId: instagramSettings.instagramId || ''
      });
    }
  }, [instagramSettings]);

  const handleSaveSettings = async () => {
    console.log('üî• SAVE INSTAGRAM SETTINGS CALLED');
    console.log('üî• FORM DATA:', formData);
    console.log('üî• CAMPAIGN ID:', campaignId);
    
    if (!formData.appId || !formData.appSecret) {
      console.log('üî• VALIDATION FAILED - missing fields');
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ App ID –∏ App Secret",
        variant: "destructive"
      });
      return;
    }

    console.log('üî• VALIDATION PASSED');
    setLoading(true);

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Instagram –≤ JSON –∫–∞–º–ø–∞–Ω–∏–∏
      const instagramConfig = {
        appId: formData.appId,
        appSecret: formData.appSecret,
        instagramId: formData.instagramId || '',
        setupCompletedAt: new Date().toISOString()
      };

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ social_media_settings
      const response = await apiRequest(`/api/campaigns/${campaignId}/instagram-settings`, {
        method: 'PATCH',
        data: instagramConfig
      });

      if (response) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        if (onSettingsUpdate) {
          onSettingsUpdate({ instagram: instagramConfig });
        }

        toast({
          title: "–£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ",
          description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Instagram —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∫–∞–º–ø–∞–Ω–∏–∏",
          variant: "default"
        });
      }
      
    } catch (error) {
      console.error('Error saving Instagram settings:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: (error as any)?.message || "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫",
        variant: "destructive"
      });
    } finally {
      setLoading(false);
    }
  };



  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const hasSettings = formData.appId && formData.appSecret;

  if (step === 'loading') {
    return (
      <Card className="w-full max-w-2xl mx-auto">
        <CardContent className="pt-6">
          <div className="flex items-center justify-center space-x-2">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
            <span>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Instagram...</span>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (step === 'success' && instagramData?.connected) {
    return (
      <Card className="w-full max-w-2xl mx-auto">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <CheckCircle className="h-6 w-6 text-green-600" />
            <span>Instagram –ø–æ–¥–∫–ª—é—á–µ–Ω</span>
          </CardTitle>
          <CardDescription>
            –í–∞—à Instagram Business –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ SMM Manager
          </CardDescription>
        </CardHeader>
        <CardContent>
          {instagramData.expired && (
            <Alert className="mb-4">
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏—Å—Ç–µ–∫. –û–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
                <Button onClick={handleRefreshToken} className="ml-2" size="sm">
                  –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
                </Button>
              </AlertDescription>
            </Alert>
          )}

          <div className="space-y-4">
            <div>
              <Label className="text-sm font-medium">–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã Instagram:</Label>
              <div className="mt-2 space-y-2">
                {instagramData.instagramAccounts?.map((account) => (
                  <div key={account.instagramId} className="flex items-center space-x-3 p-3 border rounded-lg">
                    {account.profilePicture && (
                      <img 
                        src={account.profilePicture} 
                        alt={account.username}
                        className="w-10 h-10 rounded-full"
                      />
                    )}
                    <div className="flex-1">
                      <div className="flex items-center space-x-2">
                        <Instagram className="h-4 w-4 text-pink-600" />
                        <span className="font-medium">@{account.username}</span>
                        <Badge variant="secondary">{account.name}</Badge>
                      </div>
                      <div className="text-sm text-gray-500">
                        ID: {account.instagramId}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            <Separator />

            <div className="flex justify-between items-center">
              <div className="text-sm text-gray-500">
                –ü–æ–¥–∫–ª—é—á–µ–Ω–æ: {new Date(instagramData.setupCompletedAt!).toLocaleString('ru-RU')}
                {instagramData.tokenExpiresAt && (
                  <div>–¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫–∞–µ—Ç: {new Date(instagramData.tokenExpiresAt).toLocaleString('ru-RU')}</div>
                )}
              </div>
              <Button onClick={handleDisconnect} variant="outline" size="sm">
                –û—Ç–∫–ª—é—á–∏—Ç—å Instagram
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (step === 'instructions') {
    return (
      <Card className="w-full max-w-2xl mx-auto">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Instagram className="h-6 w-6 text-pink-600" />
            <span>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Instagram Business</span>
          </CardTitle>
          <CardDescription>
            –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ Instagram —á–µ—Ä–µ–∑ Facebook Business API
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <Alert>
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                <strong>–í–∞–∂–Ω–æ:</strong> –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram —Ç—Ä–µ–±—É–µ—Ç—Å—è Instagram Business –∞–∫–∫–∞—É–Ω—Ç, 
                –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –∏ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏.
              </AlertDescription>
            </Alert>

            <div className="space-y-4">
              <h3 className="font-semibold">–®–∞–≥ 1: –°–æ–∑–¥–∞–π—Ç–µ Facebook Business —Å—Ç—Ä–∞–Ω–∏—Ü—É</h3>
              <p className="text-sm text-gray-600">
                –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç Facebook Business —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å–æ–∑–¥–∞–π—Ç–µ –µ—ë –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –∫ –Ω–µ–π –≤–∞—à Instagram Business –∞–∫–∫–∞—É–Ω—Ç.
              </p>
              <Button variant="outline" asChild>
                <a href="https://business.facebook.com/pages/create" target="_blank" rel="noopener noreferrer">
                  <Facebook className="h-4 w-4 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É
                  <ExternalLink className="h-4 w-4 ml-2" />
                </a>
              </Button>
            </div>

            <div className="space-y-4">
              <h3 className="font-semibold">–®–∞–≥ 2: –°–æ–∑–¥–∞–π—Ç–µ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h3>
              <p className="text-sm text-gray-600">
                –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Facebook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è App ID –∏ App Secret.
              </p>
              <Button variant="outline" asChild>
                <a href="https://developers.facebook.com/apps/create/" target="_blank" rel="noopener noreferrer">
                  <ExternalLink className="h-4 w-4 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å Facebook App
                </a>
              </Button>
              
              <div className="bg-gray-50 p-4 rounded-lg text-sm">
                <p><strong>–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</strong></p>
                <ul className="list-disc list-inside mt-2 space-y-1">
                  <li>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø "Consumer" –∏–ª–∏ "Business"</li>
                  <li>–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç "Facebook Login"</li>
                  <li>–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–¥—É–∫—Ç "Instagram Basic Display" (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)</li>
                  <li>–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö OAuth –¥–æ–±–∞–≤—å—Ç–µ Redirect URI: <code className="bg-white px-1 rounded">https://n8n.roboflow.space/webhook/authorize-ig</code></li>
                </ul>
              </div>
            </div>

            <div className="space-y-4">
              <h3 className="font-semibold">–®–∞–≥ 3: –ü–æ–ª—É—á–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è</h3>
              <p className="text-sm text-gray-600">
                –í Facebook App Dashboard –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:
              </p>
              <div className="bg-blue-50 p-4 rounded-lg">
                <ul className="text-sm space-y-1">
                  <li>‚Ä¢ <code>pages_manage_posts</code> - –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤</li>
                  <li>‚Ä¢ <code>pages_read_engagement</code> - –¥–ª—è —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</li>
                  <li>‚Ä¢ <code>pages_show_list</code> - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü</li>
                  <li>‚Ä¢ <code>instagram_basic</code> - –±–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ Instagram</li>
                  <li>‚Ä¢ <code>instagram_content_publish</code> - –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Instagram</li>
                </ul>
              </div>
            </div>

            <Button onClick={() => setStep('form')} className="w-full">
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            </Button>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</CardTitle>
        <CardDescription>
          –í–≤–µ–¥–∏—Ç–µ App ID –∏ App Secret –≤–∞—à–µ–≥–æ Facebook –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={(e) => { e.preventDefault(); handleStartOAuth(); }} className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="appId">App ID *</Label>
            <Input
              id="appId"
              type="text"
              value={formData.appId}
              onChange={(e) => setFormData(prev => ({ ...prev, appId: e.target.value }))}
              placeholder="–í–≤–µ–¥–∏—Ç–µ App ID –∏–∑ Facebook Developer Console"
              required
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="appSecret">App Secret *</Label>
            <Input
              id="appSecret"
              type="password"
              value={formData.appSecret}
              onChange={(e) => setFormData(prev => ({ ...prev, appSecret: e.target.value }))}
              placeholder="–í–≤–µ–¥–∏—Ç–µ App Secret –∏–∑ Facebook Developer Console"
              required
            />
          </div>



          <div className="space-y-2">
            <Label htmlFor="instagramId">Instagram Business Account ID (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
            <Input
              id="instagramId"
              type="text"
              value={formData.instagramId}
              onChange={(e) => setFormData(prev => ({ ...prev, instagramId: e.target.value }))}
              placeholder="17841400455970028"
            />
            <p className="text-xs text-gray-500">
              –ï—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ ID –≤–∞—à–µ–≥–æ Instagram Business –∞–∫–∫–∞—É–Ω—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ
            </p>
          </div>

          <div className="flex space-x-2">
            <Button 
              type="button" 
              variant="outline" 
              onClick={() => setStep('instructions')}
              className="flex-1"
            >
              –ù–∞–∑–∞–¥
            </Button>
            <Button 
              type="submit" 
              disabled={loading || !formData.appId || !formData.appSecret}
              className="flex-1"
            >
              {loading ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...' : '–ü–æ–¥–∫–ª—é—á–∏—Ç—å Instagram'}
            </Button>
          </div>
        </form>
      </CardContent>
    </Card>
  );
};

export default InstagramSetupWizard;