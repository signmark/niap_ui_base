import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Check, ChevronsUpDown, Loader2, Search } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogClose
} from "@/components/ui/dialog";
import { apiRequest } from "@/lib/queryClient";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import { cn } from "@/lib/utils";
import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from "@/components/ui/command";

interface Platform {
  id: string;
  name: string;
  value: string;
  icon: React.ReactNode;
  checked: boolean;
}

const DEFAULT_PROMPT = `–ù–∞–π–¥–∏ TOP-5 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ Instagram –∏ Telegram –ø–æ —Ç–µ–º–µ: {keyword}

–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —É–∫–∞–∂–∏:
1. –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–∏–º–≤–æ–ª–æ–º @
2. –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
3. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å –±—É–∫–≤–∞–º–∏ K –∏–ª–∏ M
4. –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ

–§–æ—Ä–º–∞—Ç –¥–ª—è Instagram –∞–∫–∫–∞—É–Ω—Ç–æ–≤:
**@username** - –ù–∞–∑–≤–∞–Ω–∏–µ (500K –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤) - –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
https://www.instagram.com/username/ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–§–æ—Ä–º–∞—Ç –¥–ª—è Telegram –∫–∞–Ω–∞–ª–æ–≤:
**@username** - –ù–∞–∑–≤–∞–Ω–∏–µ (500K –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤) - –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
https://t.me/username/ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏, –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–≤–∞–π –∫–∞–Ω–∞–ª–∞–º —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.`;

/**
 * –î–∏–∞–ª–æ–≥ –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞.
 */
export function SourcesSearchDialog({
  campaignId,
  keyword,
  onClose,
  onSearch
}: {
  campaignId: string;
  keyword: string;
  onClose: () => void;
  onSearch: (sources: any[]) => void;
}) {
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(false);
  const [prompt, setPrompt] = useState(DEFAULT_PROMPT.replace('{keyword}', keyword));
  const [isPromptOpen, setIsPromptOpen] = useState(false);
  
  const [platforms, setPlatforms] = useState<Platform[]>([
    {
      id: "instagram",
      name: "Instagram",
      value: "instagram",
      icon: <span className="mr-2 text-pink-500">üì∏</span>,
      checked: true
    },
    {
      id: "telegram",
      name: "Telegram",
      value: "telegram",
      icon: <span className="mr-2 text-blue-500">üì±</span>,
      checked: true
    },
    {
      id: "vkontakte",
      name: "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ",
      value: "vkontakte",
      icon: <span className="mr-2 text-blue-600">üåê</span>,
      checked: false
    },
    {
      id: "facebook",
      name: "Facebook",
      value: "facebook",
      icon: <span className="mr-2 text-blue-700">üë•</span>,
      checked: false
    },
    {
      id: "youtube",
      name: "YouTube",
      value: "youtube",
      icon: <span className="mr-2 text-red-600">üì∫</span>,
      checked: false
    }
  ]);

  const handleCheckboxChange = (id: string) => {
    setPlatforms(platforms.map(platform => 
      platform.id === id ? { ...platform, checked: !platform.checked } : platform
    ));
  };

  const handleSearch = async () => {
    const selectedPlatforms = platforms.filter(p => p.checked).map(p => p.value);
    
    if (selectedPlatforms.length === 0) {
      toast({
        title: "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);
    try {
      const response = await apiRequest(`/api/sources/search`, {
        method: "POST",
        data: {
          keyword,
          campaignId,
          platforms: selectedPlatforms,
          customPrompt: isPromptOpen ? prompt : undefined
        }
      });

      if (response.success && response.data?.sources) {
        onSearch(response.data.sources);
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞",
          description: response.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞",
          variant: "destructive"
        });
      }
    } catch (error) {
      console.error("Error searching sources:", error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <DialogContent className="max-w-lg">
      <DialogHeader>
        <DialogTitle>–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</DialogTitle>
        <DialogDescription>
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: <strong>{keyword}</strong>
        </DialogDescription>
      </DialogHeader>

      <div className="space-y-4 py-4">
        {platforms.map((platform) => (
          <div key={platform.id} className="flex items-center space-x-2">
            <Checkbox 
              id={platform.id} 
              checked={platform.checked} 
              onCheckedChange={() => handleCheckboxChange(platform.id)}
            />
            <Label htmlFor={platform.id} className="flex items-center cursor-pointer">
              {platform.icon} {platform.name}
            </Label>
          </div>
        ))}

        <div className="mt-6">
          <Popover open={isPromptOpen} onOpenChange={setIsPromptOpen}>
            <PopoverTrigger asChild>
              <Button
                variant="outline"
                role="combobox"
                aria-expanded={isPromptOpen}
                className="w-full justify-between"
              >
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–º–ø—Ç
                <ChevronsUpDown className="ml-2 h-4 w-4 shrink-0 opacity-50" />
              </Button>
            </PopoverTrigger>
            <PopoverContent className="w-[550px] p-0">
              <div className="p-4 space-y-4">
                <Label htmlFor="prompt">–ü—Ä–æ–º–ø—Ç –¥–ª—è Perplexity API</Label>
                <Textarea
                  id="prompt"
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  rows={12}
                  className="w-full"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
                />
                <div className="flex justify-between">
                  <Button 
                    variant="outline" 
                    onClick={() => setPrompt(DEFAULT_PROMPT.replace('{keyword}', keyword))}
                    size="sm"
                  >
                    –°–±—Ä–æ—Å–∏—Ç—å
                  </Button>
                  <Button onClick={() => setIsPromptOpen(false)} size="sm">
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                  </Button>
                </div>
              </div>
            </PopoverContent>
          </Popover>
        </div>
      </div>

      <DialogFooter className="gap-2">
        <Button variant="outline" onClick={onClose} disabled={isLoading}>
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button onClick={handleSearch} disabled={isLoading}>
          {isLoading ? (
            <>
              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              –ü–æ–∏—Å–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...
            </>
          ) : (
            <>
              <Search className="mr-2 h-4 w-4" />
              –ò—Å–∫–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏
            </>
          )}
        </Button>
      </DialogFooter>
    </DialogContent>
  );
}