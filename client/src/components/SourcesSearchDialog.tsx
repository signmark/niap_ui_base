import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Check, ChevronsUpDown, Loader2, Search } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogClose
} from "@/components/ui/dialog";
import { apiRequest } from "@/lib/queryClient";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import { cn } from "@/lib/utils";
import { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem } from "@/components/ui/command";

interface Platform {
  id: string;
  name: string;
  value: string;
  icon: React.ReactNode;
  checked: boolean;
}

const DEFAULT_PROMPT = `–ù–∞–π–¥–∏ TOP-5 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ Instagram –∏ Telegram –ø–æ —Ç–µ–º–µ: {keyword}

–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —É–∫–∞–∂–∏:
1. –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–∏–º–≤–æ–ª–æ–º @
2. –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
3. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å –±—É–∫–≤–∞–º–∏ K –∏–ª–∏ M
4. –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ

–§–æ—Ä–º–∞—Ç –¥–ª—è Instagram –∞–∫–∫–∞—É–Ω—Ç–æ–≤:
**@username** - –ù–∞–∑–≤–∞–Ω–∏–µ (500K –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤) - –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
https://www.instagram.com/username/ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–§–æ—Ä–º–∞—Ç –¥–ª—è Telegram –∫–∞–Ω–∞–ª–æ–≤:
**@username** - –ù–∞–∑–≤–∞–Ω–∏–µ (500K –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤) - –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
https://t.me/username/ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏, –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–≤–∞–π –∫–∞–Ω–∞–ª–∞–º —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.`;

/**
 * –î–∏–∞–ª–æ–≥ –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–º–ø—Ç–∞.
 */
export function SourcesSearchDialog({
  campaignId,
  keyword,
  onClose,
  onSearch,
  open,
  onOpenChange
}: {
  campaignId: string;
  keyword: string;
  onClose: () => void;
  onSearch: (sources: any[]) => void;
  open: boolean;
  onOpenChange: (open: boolean) => void;
}) {
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(false);
  const [prompt, setPrompt] = useState(DEFAULT_PROMPT.replace('{keyword}', keyword));
  const [isPromptOpen, setIsPromptOpen] = useState(false);
  
  const [platforms, setPlatforms] = useState<Platform[]>([
    {
      id: "instagram",
      name: "Instagram",
      value: "instagram",
      icon: <span className="mr-2 text-pink-500">üì∏</span>,
      checked: true
    },
    {
      id: "telegram",
      name: "Telegram",
      value: "telegram",
      icon: <span className="mr-2 text-blue-500">üì±</span>,
      checked: true
    },
    {
      id: "vkontakte",
      name: "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ",
      value: "vkontakte",
      icon: <span className="mr-2 text-blue-600">üåê</span>,
      checked: false
    },
    {
      id: "facebook",
      name: "Facebook",
      value: "facebook",
      icon: <span className="mr-2 text-blue-700">üë•</span>,
      checked: false
    },
    {
      id: "youtube",
      name: "YouTube",
      value: "youtube",
      icon: <span className="mr-2 text-red-600">üì∫</span>,
      checked: false
    }
  ]);

  const handleCheckboxChange = (id: string) => {
    setPlatforms(platforms.map(platform => 
      platform.id === id ? { ...platform, checked: !platform.checked } : platform
    ));
  };

  const handleSearch = async () => {
    const selectedPlatforms = platforms.filter(p => p.checked).map(p => p.value);
    
    console.log("üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:");
    console.log("üîë –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ:", keyword);
    console.log("üìÇ ID –∫–∞–º–ø–∞–Ω–∏–∏:", campaignId);
    console.log("üì± –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:", selectedPlatforms);
    
    if (selectedPlatforms.length === 0) {
      console.log("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã");
      toast({
        title: "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞",
        variant: "destructive"
      });
      return;
    }

    setIsLoading(true);
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ API –∫–ª—é—á–µ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      try {
        const keysStatus = await apiRequest('/api/debug/api-keys');
        console.log("üìä –°—Ç–∞—Ç—É—Å API –∫–ª—é—á–µ–π:", keysStatus);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∫–ª—é—á Perplexity - –û–ë–ù–û–í–õ–ï–ù–û: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É,
      // —Ç–∞–∫ –∫–∞–∫ –∫–ª—é—á–∏ –µ—Å—Ç—å –≤ Directus, –∏ –º—ã –ø–æ–ª–∞–≥–∞–µ–º—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
      if (keysStatus?.data?.serviceResults) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞ –≤ –º–∞—Å—Å–∏–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        const perplexityKey = keysStatus.data.serviceResults.find(
          (service: any) => service.service === 'perplexity'
        );
        
        console.log("üîë –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—é—á–µ Perplexity:", perplexityKey);
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –±–ª–æ–∫–∏—Ä—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É, –ø—É—Å—Ç—å –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–π–¥—ë—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä 
        // –∫–æ—Ç–æ—Ä—ã–π —Å–∞–º –Ω–∞–π–¥–µ—Ç –∫–ª—é—á –≤ –ë–î
        if (perplexityKey && !perplexityKey.keyExists) {
          console.log("‚ö†Ô∏è API –∫–ª—é—á Perplexity –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫");
        }
      } else {
        console.log("‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API –∫–ª—é—á–µ–π:", keysStatus?.data);
      }
      } catch (keyError) {
        console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API –∫–ª—é—á–µ–π:", keyError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–µ–π
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      const authToken = localStorage.getItem('auth_token');
      if (!authToken) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –≤ localStorage");
        toast({
          title: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
          description: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞.",
          variant: "destructive"
        });
        setIsLoading(false);
        return;
      }
      
      console.log("üîë –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤):", authToken.substring(0, 10) + "...");
      
      console.log("üìù –ó–∞–ø—Ä–æ—Å –∫ API:");
      console.log({
        endpoint: "/api/sources/search",
        method: "POST",
        data: {
          keyword,
          campaignId,
          platforms: selectedPlatforms,
          customPrompt: isPromptOpen ? prompt : undefined
        }
      });
      
      const response = await apiRequest(`/api/sources/search`, {
        method: "POST",
        data: {
          keyword,
          campaignId,
          platforms: selectedPlatforms,
          customPrompt: isPromptOpen ? prompt : undefined
        },
        headers: {
          "Authorization": `Bearer ${authToken}`
        }
      });

      console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç API:", response);

      if (response.data?.sources) {
        console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ ${response.data.sources.length} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤`);
        onSearch(response.data.sources);
      } else {
        console.log("‚ùå –û—à–∏–±–∫–∞: –Ω–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ", response);
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã
        let errorMessage = response.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞";
        if (response.error?.includes("API –∫–ª—é—á Perplexity")) {
          errorMessage = "–î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å API –∫–ª—é—á Perplexity –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏";
        }
        
        toast({
          title: "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞",
          description: errorMessage,
          variant: "destructive"
        });
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:", error);
      
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
      if (error instanceof Error) {
        if (error.message.includes("401")) {
          errorMessage = "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —Å–Ω–æ–≤–∞.";
        } else if (error.message.includes("API –∫–ª—é—á") || error.message.includes("Perplexity")) {
          errorMessage = "–î–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á Perplexity. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.";
        }
      }
      
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: errorMessage,
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-lg">
        <DialogHeader>
          <DialogTitle>–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</DialogTitle>
          <DialogDescription>
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: <strong>{keyword}</strong>
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4 py-4">
          {platforms.map((platform) => (
            <div key={platform.id} className="flex items-center space-x-2">
              <Checkbox 
                id={platform.id} 
                checked={platform.checked} 
                onCheckedChange={() => handleCheckboxChange(platform.id)}
              />
              <Label htmlFor={platform.id} className="flex items-center cursor-pointer">
                {platform.icon} {platform.name}
              </Label>
            </div>
          ))}

          <div className="mt-6">
            <Popover open={isPromptOpen} onOpenChange={setIsPromptOpen}>
              <PopoverTrigger asChild>
                <Button
                  variant="outline"
                  role="combobox"
                  aria-expanded={isPromptOpen}
                  className="w-full justify-between"
                >
                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–º–ø—Ç
                  <ChevronsUpDown className="ml-2 h-4 w-4 shrink-0 opacity-50" />
                </Button>
              </PopoverTrigger>
              <PopoverContent className="w-[550px] p-0">
                <div className="p-4 space-y-4">
                  <Label htmlFor="prompt">–ü—Ä–æ–º–ø—Ç –¥–ª—è Perplexity API</Label>
                  <Textarea
                    id="prompt"
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    rows={12}
                    className="w-full"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"
                  />
                  <div className="flex justify-between">
                    <Button 
                      variant="outline" 
                      onClick={() => setPrompt(DEFAULT_PROMPT.replace('{keyword}', keyword))}
                      size="sm"
                    >
                      –°–±—Ä–æ—Å–∏—Ç—å
                    </Button>
                    <Button onClick={() => setIsPromptOpen(false)} size="sm">
                      –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                    </Button>
                  </div>
                </div>
              </PopoverContent>
            </Popover>
          </div>
        </div>

        <DialogFooter className="gap-2">
          <Button variant="outline" onClick={onClose} disabled={isLoading}>
            –û—Ç–º–µ–Ω–∞
          </Button>
          <Button onClick={handleSearch} disabled={isLoading}>
            {isLoading ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                –ü–æ–∏—Å–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...
              </>
            ) : (
              <>
                <Search className="mr-2 h-4 w-4" />
                –ò—Å–∫–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏
              </>
            )}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}