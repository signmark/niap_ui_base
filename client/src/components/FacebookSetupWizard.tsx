import { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent } from "@/components/ui/card";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { useToast } from "@/hooks/use-toast";
import { Loader2, CheckCircle } from "lucide-react";

const facebookSetupSchema = z.object({
  token: z.string().min(1, "–¢–æ–∫–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"),
});

type FacebookSetupForm = z.infer<typeof facebookSetupSchema>;

interface FacebookPage {
  id: string;
  name: string;
  access_token: string;
  category: string;
  tasks?: string[];
}

interface FacebookSetupWizardProps {
  campaignId: string;
  onComplete: (data: { token: string; pageId: string; pageName: string }) => void;
  onCancel: () => void;
}

export default function FacebookSetupWizard({
  campaignId,
  onComplete,
  onCancel,
}: FacebookSetupWizardProps) {
  const [pages, setPages] = useState<FacebookPage[]>([]);
  const [loadingPages, setLoadingPages] = useState(false);
  const { toast } = useToast();

  const form = useForm<FacebookSetupForm>({
    resolver: zodResolver(facebookSetupSchema),
    defaultValues: {
      token: "",
    },
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Facebook —Ç–æ–∫–µ–Ω–∞
  const debugFacebookToken = async () => {
    const formData = form.getValues();
    const token = formData.token;
    
    if (!token || token.length < 10) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
        variant: "destructive",
      });
      return;
    }

    try {
      const response = await fetch(`/api/facebook/debug-token?token=${encodeURIComponent(token)}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
        }
      });

      const data = await response.json();
      
      if (data.success) {
        const permissions = data.permissions.map((p: any) => p.permission).join(', ');
        const hasPublishToGroups = data.permissions.some((p: any) => p.permission === 'publish_to_groups');
        const hasPagesPosts = data.permissions.some((p: any) => p.permission === 'pages_manage_posts');
        const hasPagesEngagement = data.permissions.some((p: any) => p.permission === 'pages_read_engagement');
        
        console.log('üîç Facebook —Ç–æ–∫–µ–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', {
          permissions,
          hasPublishToGroups,
          hasPagesPosts,
          hasPagesEngagement,
          user: data.user,
          pages: data.pages
        });

        const missingPermissions = [];
        if (!hasPublishToGroups) missingPermissions.push('publish_to_groups');
        if (!hasPagesPosts) missingPermissions.push('pages_manage_posts');
        if (!hasPagesEngagement) missingPermissions.push('pages_read_engagement');

        toast({
          title: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–∞",
          description: missingPermissions.length > 0 
            ? `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${missingPermissions.join(', ')}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Instagram Setup Wizard.`
            : `–¢–æ–∫–µ–Ω –∏–º–µ–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${permissions}`,
          variant: missingPermissions.length > 0 ? "destructive" : "default"
        });
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
          description: data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error('‚ùå Debug token error:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞",
        variant: "destructive",
      });
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö Facebook –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ wizard
  useEffect(() => {
    const loadFacebookSettings = async () => {
      try {
        const response = await fetch(`/api/campaigns/${campaignId}`, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
          }
        });
        
        const data = await response.json();
        if (data.social_media_settings?.facebook?.token) {
          form.setValue('token', data.social_media_settings.facebook.token);
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —É–∂–µ –µ—Å—Ç—å
          fetchFacebookPages();
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Facebook –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      }
    };

    loadFacebookSettings();
  }, [campaignId]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Facebook —Å—Ç—Ä–∞–Ω–∏—Ü
  const fetchFacebookPages = async () => {
    const formData = form.getValues();
    const token = formData.token;
    
    if (!token || token.length < 10) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
        variant: "destructive",
      });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥ –∫–æ–Ω—Å–æ–ª–∏
    if (token.includes('Facebook Wizard:') || token.includes('%20') || token.includes('FacebookSetupWizard')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–ª–µ —Ç–æ–∫–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–π Facebook —Ç–æ–∫–µ–Ω.",
        variant: "destructive",
      });
      return;
    }

    setLoadingPages(true);
    try {
      const response = await fetch(`/api/facebook/pages?token=${encodeURIComponent(token)}`);
      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü');
      }

      if (data.pages && data.pages.length > 0) {
        setPages(data.pages);
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ",
          description: `–ù–∞–π–¥–µ–Ω–æ ${data.pages.length} —Å—Ç—Ä–∞–Ω–∏—Ü`,
        });
      } else {
        toast({
          title: "–í–Ω–∏–º–∞–Ω–∏–µ",
          description: "Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
          variant: "destructive",
        });
      }
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error instanceof Error ? error.message : "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        variant: "destructive",
      });
    } finally {
      setLoadingPages(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Facebook –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–∞—Å—Ç–µ—Ä–∞
  useEffect(() => {
    const loadExistingFacebookSettings = async () => {
      try {
        console.log('üîÑ Loading existing Facebook settings for campaign:', campaignId);
        const response = await fetch(`/api/campaigns/${campaignId}/facebook-settings`, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
          }
        });
        
        if (response.ok) {
          const data = await response.json();
          console.log('üìã Facebook settings loaded:', data);
          
          if (data.success && data.settings && data.settings.token) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
            const token = data.settings.token;
            if (!token.includes('Facebook Wizard:') && !token.includes('%20') && !token.includes('FacebookSetupWizard')) {
              console.log('‚úÖ Setting Facebook token in form:', token.substring(0, 20) + '...');
              form.setValue('token', token);
              
              // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω
              setTimeout(() => {
                fetchFacebookPages();
              }, 500);
            } else {
              console.log('‚ùå Facebook token is corrupted, not loading');
            }
          }
        }
      } catch (error) {
        console.error('Error loading Facebook settings:', error);
      }
    };

    loadExistingFacebookSettings();
  }, [campaignId]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handlePageSelect = (pageId: string, pageName: string) => {
    const token = form.getValues('token');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥ –∫–æ–Ω—Å–æ–ª–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π
    if (token.includes('Facebook Wizard:') || token.includes('%20') || token.includes('FacebookSetupWizard')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–¢–æ–∫–µ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω Facebook.",
        variant: "destructive",
      });
      return;
    }
    
    console.log('Facebook Wizard: –í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', {
      pageId,
      pageName,
      tokenLength: token.length,
      tokenValid: token.length > 50 && !token.includes('Facebook Wizard:')
    });
    
    onComplete({
      token,
      pageId,
      pageName,
    });
    setPages([]); // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    toast({
      title: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–∞",
      description: `–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageName}`,
    });
  };

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h3 className="text-lg font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Facebook</h3>
        <Button variant="outline" onClick={onCancel} size="sm">
          –û—Ç–º–µ–Ω–∞
        </Button>
      </div>

      <div className="space-y-4">
        <Form {...form}>
          <div className="space-y-4">
            {/* –í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ */}
            <FormField
              control={form.control}
              name="token"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Facebook Access Token</FormLabel>
                  <div className="flex space-x-2 mt-1">
                    <FormControl>
                      <Input
                        type="password"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ Facebook Access Token"
                        {...field}
                      />
                    </FormControl>
                    <Button 
                      type="button" 
                      onClick={fetchFacebookPages}
                      disabled={loadingPages || !form.getValues('token')}
                      size="sm"
                    >
                      {loadingPages ? (
                        <>
                          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                          –ü–æ–∏—Å–∫...
                        </>
                      ) : (
                        'üìã –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
                      )}
                    </Button>
                    <Button 
                      type="button" 
                      variant="outline"
                      onClick={debugFacebookToken}
                      disabled={loadingPages || !form.getValues('token')}
                      size="sm"
                    >
                      üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                    </Button>
                  </div>
                  <FormMessage />
                  <div className="text-xs text-muted-foreground">
                    –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ Facebook –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ‚Üí Graph API Explorer
                  </div>
                </FormItem>
              )}
            />
          </div>
        </Form>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü */}
        <div className="bg-blue-50 border border-blue-200 rounded-md p-4 space-y-3">
          <h4 className="font-medium text-blue-800">üìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h4>
          <div className="bg-white border border-blue-200 rounded-md p-3">
            <h5 className="font-medium text-blue-800 mb-2">–®–∞–≥ 1: –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É</h5>
            <p className="text-sm text-blue-700 mb-2">
              –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω—É–∂–Ω–∞ –∏–º–µ–Ω–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (Page), –∞ –Ω–µ –≥—Ä—É–ø–ø–∞ (Group).
            </p>
            <ol className="text-sm text-blue-700 list-decimal list-inside space-y-1">
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ <a href="https://www.facebook.com/pages/create" target="_blank" className="underline font-medium">facebook.com/pages/create</a></li>
              <li>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø "–ë–∏–∑–Ω–µ—Å –∏–ª–∏ –±—Ä–µ–Ω–¥"</li>
              <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –æ–ø–∏—Å–∞–Ω–∏–µ</li>
              <li>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
              <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ "üìã –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã"</li>
            </ol>
            <div className="mt-3">
              <Button 
                onClick={() => window.open('https://www.facebook.com/pages/create', '_blank')}
                size="sm"
                className="bg-blue-600 hover:bg-blue-700"
              >
                üîó –°–æ–∑–¥–∞—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </Button>
            </div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –≥—Ä—É–ø–ø–∞—Ö */}
        {pages.length > 0 ? (
          <div className="space-y-3">
            <div className="flex justify-between items-center">
              <h4 className="font-medium">–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã Facebook:</h4>
              <Button 
                variant="outline" 
                size="sm"
                onClick={() => setPages([])}
              >
                –°–∫—Ä—ã—Ç—å
              </Button>
            </div>
            
            {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –≥—Ä—É–ø–ø–∞—Ö */}
            <div className="bg-orange-50 border border-orange-200 rounded-md p-3">
              <h5 className="font-medium text-orange-800 mb-2">‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞</h5>
              <p className="text-sm text-orange-700">
                –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç - —ç—Ç–æ –≥—Ä—É–ø–ø–∞, —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—É—é Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.
              </p>
              <Button 
                onClick={() => window.open('https://www.facebook.com/pages/create', '_blank')}
                size="sm"
                variant="outline"
                className="mt-2"
              >
                üìã –°–æ–∑–¥–∞—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </Button>
            </div>
            
            <div className="space-y-2 max-h-64 overflow-y-auto">
              {pages.map((page) => (
                <Card key={page.id} className="cursor-pointer hover:bg-gray-100 transition-colors">
                  <CardContent className="p-3">
                    <div className="flex justify-between items-center">
                      <div className="flex items-center space-x-3">
                        <div className="w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center">
                          <span className="text-blue-600 dark:text-blue-400 font-semibold">
                            {page.name.charAt(0).toUpperCase()}
                          </span>
                        </div>
                        <div>
                          <h5 className="font-semibold">{page.name}</h5>
                          <p className="text-sm text-gray-600">{page.category}</p>
                          <span className="text-xs text-gray-500">ID: {page.id}</span>
                          <div className="text-xs text-blue-600 mt-1">
                            ‚ÑπÔ∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –∞ –Ω–µ –≥—Ä—É–ø–ø–∞
                          </div>
                        </div>
                      </div>
                      <div className="flex flex-col space-y-1">
                        <Button 
                          onClick={() => handlePageSelect(page.id, page.name)}
                          disabled={loadingPages}
                          size="sm"
                          variant="outline"
                        >
                          –í—ã–±—Ä–∞—Ç—å
                        </Button>
                        <Button 
                          onClick={() => window.open(`https://facebook.com/${page.id}`, '_blank')}
                          size="sm"
                          variant="ghost"
                          className="text-xs"
                        >
                          –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        ) : (
          // –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ "–ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã" –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏
          form.getValues('token') && (
            <div className="bg-red-50 border border-red-200 rounded-md p-4 space-y-3">
              <h4 className="font-medium text-red-800">‚ùå Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
              <p className="text-sm text-red-700">
                –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Facebook —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.
              </p>
              <div className="bg-white border border-red-200 rounded-md p-3">
                <h5 className="font-medium text-red-800 mb-2">–°–æ–∑–¥–∞–π—Ç–µ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É:</h5>
                <ol className="text-sm text-red-700 list-decimal list-inside space-y-1">
                  <li>–û—Ç–∫—Ä–æ–π—Ç–µ <strong>facebook.com/pages/create</strong></li>
                  <li>–í—ã–±–µ—Ä–∏—Ç–µ "–ë–∏–∑–Ω–µ—Å –∏–ª–∏ –±—Ä–µ–Ω–¥"</li>
                  <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏</li>
                  <li>–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫</li>
                </ol>
                <Button 
                  onClick={() => window.open('https://www.facebook.com/pages/create', '_blank')}
                  size="sm"
                  className="mt-3 bg-blue-600 hover:bg-blue-700"
                >
                  üîó –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                </Button>
              </div>
            </div>
          )
        )}
      </div>
    </div>
  );
}