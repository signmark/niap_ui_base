import { useState, useEffect } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent } from "@/components/ui/card";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { useToast } from "@/hooks/use-toast";
import { Loader2, CheckCircle } from "lucide-react";

const facebookSetupSchema = z.object({
  token: z.string().min(1, "–¢–æ–∫–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"),
  manualPageId: z.string().optional(),
  manualPageName: z.string().optional(),
});

type FacebookSetupForm = z.infer<typeof facebookSetupSchema>;

interface FacebookPage {
  id: string;
  name: string;
  access_token: string;
  category: string;
  tasks?: string[];
}

interface FacebookSetupWizardProps {
  campaignId: string;
  onComplete: (data: { token: string; pageId: string; pageName: string }) => void;
  onCancel: () => void;
}

export default function FacebookSetupWizard({
  campaignId,
  onComplete,
  onCancel,
}: FacebookSetupWizardProps) {
  const [pages, setPages] = useState<any[]>([]);
  const [isPagesLoading, setIsPagesLoading] = useState(false);
  const [showManualInput, setShowManualInput] = useState(false);
  const { toast } = useToast();

  const form = useForm<FacebookSetupForm>({
    resolver: zodResolver(facebookSetupSchema),
    defaultValues: {
      token: "",
      manualPageId: "",
      manualPageName: "",
    },
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Facebook —Ç–æ–∫–µ–Ω–∞
  const debugFacebookToken = async () => {
    const formData = form.getValues();
    const token = formData.token;
    
    if (!token || token.length < 10) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
        variant: "destructive",
      });
      return;
    }

    try {
      const response = await fetch(`/api/facebook/debug-token?token=${encodeURIComponent(token)}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
        }
      });

      const data = await response.json();
      
      if (data.success) {
        const permissions = data.permissions.map((p: any) => p.permission).join(', ');
        const hasPublishToGroups = data.permissions.some((p: any) => p.permission === 'publish_to_groups');
        const hasPagesPosts = data.permissions.some((p: any) => p.permission === 'pages_manage_posts');
        const hasPagesEngagement = data.permissions.some((p: any) => p.permission === 'pages_read_engagement');
        const hasInstagramBasic = data.permissions.some((p: any) => p.permission === 'instagram_basic');
        const hasInstagramPublish = data.permissions.some((p: any) => p.permission === 'instagram_content_publish');
        
        console.log('üîç Facebook —Ç–æ–∫–µ–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', {
          permissions,
          hasPublishToGroups,
          hasPagesPosts,
          hasPagesEngagement,
          hasInstagramBasic,
          hasInstagramPublish,
          user: data.user,
          pages: data.pages
        });

        const missingPermissions = [];
        if (!hasPublishToGroups) missingPermissions.push('publish_to_groups');
        if (!hasPagesPosts) missingPermissions.push('pages_manage_posts');
        if (!hasPagesEngagement) missingPermissions.push('pages_read_engagement');
        if (!hasInstagramBasic) missingPermissions.push('instagram_basic');
        if (!hasInstagramPublish) missingPermissions.push('instagram_content_publish');

        toast({
          title: "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–∞",
          description: missingPermissions.length > 0 
            ? `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${missingPermissions.join(', ')}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Instagram Setup Wizard.`
            : `–¢–æ–∫–µ–Ω –∏–º–µ–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: ${permissions}`,
          variant: missingPermissions.length > 0 ? "destructive" : "default"
        });
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
          description: data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error('‚ùå Debug token error:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞",
        variant: "destructive",
      });
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö Facebook –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ wizard
  useEffect(() => {
    const loadFacebookSettings = async () => {
      try {
        const response = await fetch(`/api/campaigns/${campaignId}`, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
          }
        });
        
        const data = await response.json();
        if (data.social_media_settings?.facebook?.token) {
          form.setValue('token', data.social_media_settings.facebook.token);
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω —É–∂–µ –µ—Å—Ç—å
          handleFetchPages();
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Facebook –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      }
    };

    loadFacebookSettings();
  }, [campaignId]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Instagram —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
  const handleFetchInstagramConnectedPages = async () => {
    setIsPagesLoading(true);
    
    try {
      console.log('Facebook Wizard: –ü–æ–ª—É—á–µ–Ω–∏–µ Instagram —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–º–ø–∞–Ω–∏–∏...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º Instagram —Ç–æ–∫–µ–Ω –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–º–ø–∞–Ω–∏–∏
      const campaignResponse = await fetch(`/api/campaigns/${campaignId}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
        }
      });
      
      const campaignData = await campaignResponse.json();
      console.log('Facebook Wizard: –î–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã:', campaignData);
      
      // –ò—â–µ–º Instagram —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
      const instagramSettings = campaignData.data?.social_media_settings?.instagram;
      const instagramToken = instagramSettings?.accessToken || 
                           instagramSettings?.token ||
                           instagramSettings?.longLivedToken;
      
      console.log('Facebook Wizard: Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:', {
        hasInstagramSettings: !!instagramSettings,
        tokenKeys: instagramSettings ? Object.keys(instagramSettings) : [],
        tokenLength: instagramToken ? instagramToken.length : 0
      });
      
      if (!instagramToken) {
        toast({
          title: "Instagram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω",
          description: "–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Instagram —á–µ—Ä–µ–∑ Instagram Setup Wizard",
          variant: "destructive",
        });
        return;
      }
      
      console.log('Facebook Wizard: –ò—Å–ø–æ–ª—å–∑—É–µ–º Instagram —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...');
      
      const response = await fetch(`/api/facebook/instagram-connected-pages?campaignId=${campaignId}`);
      const data = await response.json();
      
      console.log('Facebook Wizard: –û—Ç–≤–µ—Ç API Instagram —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü:', data);
      
      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü');
      }
      
      if (data.success && data.connected_pages) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const formattedPages = data.connected_pages.map((item: any) => ({
          id: item.facebook_page.id,
          name: `${item.facebook_page.name} ‚Üí @${item.instagram_account.username}`,
          access_token: item.facebook_page.access_token,
          category: item.facebook_page.category,
          instagram_info: item.instagram_account
        }));
        
        setPages(formattedPages);
        
        toast({
          title: "Instagram —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–µ–Ω—ã",
          description: `–ù–∞–π–¥–µ–Ω–æ ${formattedPages.length} —Å—Ç—Ä–∞–Ω–∏—Ü —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å Instagram`,
        });
      } else {
        toast({
          title: "–°—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
          description: "–£ –≤–∞—Å –Ω–µ—Ç Facebook —Å—Ç—Ä–∞–Ω–∏—Ü —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å Instagram Business –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏",
          variant: "destructive",
        });
      }
    } catch (error: any) {
      console.error('Facebook Wizard: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Instagram —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Instagram —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        variant: "destructive",
      });
    } finally {
      setIsPagesLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Facebook —Å—Ç—Ä–∞–Ω–∏—Ü
  const handleFetchPages = async () => {
    const formData = form.getValues();
    const token = formData.token;
    
    if (!token || token.length < 10) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
        variant: "destructive",
      });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥ –∫–æ–Ω—Å–æ–ª–∏
    if (token.includes('Facebook Wizard:') || token.includes('%20') || token.includes('FacebookSetupWizard')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–ª–µ —Ç–æ–∫–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–∏–π Facebook —Ç–æ–∫–µ–Ω.",
        variant: "destructive",
      });
      return;
    }

    setIsPagesLoading(true);
    try {
      const response = await fetch(`/api/facebook/pages?token=${encodeURIComponent(token)}`);
      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü');
      }

      if (data.pages && data.pages.length > 0) {
        setPages(data.pages);
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ",
          description: `–ù–∞–π–¥–µ–Ω–æ ${data.pages.length} —Å—Ç—Ä–∞–Ω–∏—Ü`,
        });
      } else {
        toast({
          title: "–í–Ω–∏–º–∞–Ω–∏–µ",
          description: "Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error('Error fetching Facebook pages:', error);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      let errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã";
      let shouldShowReauth = false;
      
      if (error instanceof Error) {
        if (error.message.includes('400') || error.message.includes('Bad Request')) {
          errorMessage = '–¢–æ–∫–µ–Ω Facebook –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫';
          shouldShowReauth = true;
        } else if (error.message.includes('401') || error.message.includes('TOKEN_EXPIRED')) {
          errorMessage = '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Facebook –∏—Å—Ç–µ–∫–ª–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.';
          shouldShowReauth = true;
        } else if (error.message.includes('403')) {
          errorMessage = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Facebook API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.';
        } else {
          errorMessage = error.message;
        }
      }
      
      toast({
        title: shouldShowReauth ? "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" : "–û—à–∏–±–∫–∞",
        description: errorMessage + (shouldShowReauth ? " –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ Instagram Setup Wizard." : ""),
        variant: "destructive",
      });
    } finally {
      setIsPagesLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Facebook –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–∞—Å—Ç–µ—Ä–∞
  useEffect(() => {
    const loadExistingFacebookSettings = async () => {
      try {
        console.log('üîÑ Loading existing Facebook settings for campaign:', campaignId);
        const response = await fetch(`/api/campaigns/${campaignId}/facebook-settings`, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('auth_token')}`
          }
        });
        
        if (response.ok) {
          const data = await response.json();
          console.log('üìã Facebook settings loaded:', data);
          
          if (data.success && data.settings && data.settings.token) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
            const token = data.settings.token;
            if (!token.includes('Facebook Wizard:') && !token.includes('%20') && !token.includes('FacebookSetupWizard')) {
              console.log('‚úÖ Setting Facebook token in form:', token.substring(0, 20) + '...');
              form.setValue('token', token);
              
              // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω
              setTimeout(() => {
                handleFetchPages();
              }, 500);
            } else {
              console.log('‚ùå Facebook token is corrupted, not loading');
            }
          }
        }
      } catch (error) {
        console.error('Error loading Facebook settings:', error);
      }
    };

    loadExistingFacebookSettings();
  }, [campaignId]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handleGetPageToken = async (pageId: string) => {
    const token = form.getValues('token');
    
    if (!token || !pageId) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        variant: "destructive",
      });
      return;
    }

    try {
      const response = await fetch(`/api/facebook/page-token/${pageId}?token=${encodeURIComponent(token)}`);
      const data = await response.json();

      if (data.success && data.page) {
        const { id, name, access_token } = data.page;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–æ—Ä–º–µ –Ω–∞ —Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        form.setValue('token', access_token);
        form.setValue('manualPageName', name);
        
        toast({
          title: "–¢–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–µ–Ω",
          description: `–ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è "${name}". –¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞.`,
        });
        
        console.log('üîë Page token retrieved:', {
          pageId: id,
          pageName: name,
          tokenPreview: access_token.substring(0, 20) + '...'
        });
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞",
          description: data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error('Error getting page token:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        variant: "destructive",
      });
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä—É—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handleManualPageSelect = () => {
    const formData = form.getValues();
    const token = formData.token;
    const manualPageId = formData.manualPageId;
    const manualPageName = formData.manualPageName;
    
    if (!token || token.length < 10) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞",
        variant: "destructive",
      });
      return;
    }

    if (!manualPageId) {
      toast({
        title: "–û—à–∏–±–∫–∞", 
        description: "–í–≤–µ–¥–∏—Ç–µ ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        variant: "destructive",
      });
      return;
    }

    onComplete({
      token,
      pageId: manualPageId,
      pageName: manualPageName || `Facebook Page ${manualPageId}`,
    });

    toast({
      title: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–∞",
      description: `–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${manualPageName || manualPageId}`,
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ —Å–ø–∏—Å–∫–∞
  const handlePageSelect = async (pageId: string, pageName: string) => {
    const token = form.getValues('token');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥ –∫–æ–Ω—Å–æ–ª–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–¥–∞—á–µ–π
    if (token.includes('Facebook Wizard:') || token.includes('%20') || token.includes('FacebookSetupWizard')) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–¢–æ–∫–µ–Ω –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω Facebook.",
        variant: "destructive",
      });
      return;
    }
    
    console.log('Facebook Wizard: –í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', {
      pageId,
      pageName,
      tokenLength: token.length,
      tokenValid: token.length > 50 && !token.includes('Facebook Wizard:')
    });

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try {
      const response = await fetch(`/api/facebook/page-token/${pageId}?token=${encodeURIComponent(token)}`);
      const data = await response.json();
      
      console.log('Facebook Wizard: –¢–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—É—á–µ–Ω:', data);
      
      if (data.success && data.page) {
        onComplete({
          token: data.page.access_token, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          pageId,
          pageName,
        });
        
        toast({
          title: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–∞",
          description: `–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageName} —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º`,
        });
      } else {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–∫–µ–Ω
        onComplete({
          token,
          pageId,
          pageName,
        });
        
        toast({
          title: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–∞",
          description: `–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageName} —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º`,
        });
      }
    } catch (error) {
      console.error('Facebook Wizard: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–∫–µ–Ω
      onComplete({
        token,
        pageId,
        pageName,
      });
      
      toast({
        title: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–∞",
        description: `–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageName} (—Ç–æ–∫–µ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)`,
      });
    }
    
    setPages([]); // –°–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    setShowManualInput(false); // –°–∫—Ä—ã–≤–∞–µ–º —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
  };

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h3 className="text-lg font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Facebook</h3>
        <Button variant="outline" onClick={onCancel} size="sm">
          –û—Ç–º–µ–Ω–∞
        </Button>
      </div>

      <div className="space-y-4">
        <Form {...form}>
          <div className="space-y-4">
            {/* –í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞ */}
            <FormField
              control={form.control}
              name="token"
              render={({ field }) => (
                <FormItem>
                  <FormLabel>Facebook Access Token</FormLabel>
                  <div className="flex space-x-2 mt-1">
                    <FormControl>
                      <Input
                        type="password"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ Facebook Access Token"
                        {...field}
                      />
                    </FormControl>
                    <Button 
                      type="button" 
                      onClick={handleFetchPages}
                      disabled={isPagesLoading || !form.getValues('token')}
                      size="sm"
                    >
                      {isPagesLoading ? (
                        <>
                          <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                          –ü–æ–∏—Å–∫...
                        </>
                      ) : (
                        'üìã –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã'
                      )}
                    </Button>
                    <Button 
                      type="button" 
                      variant="outline"
                      onClick={debugFacebookToken}
                      disabled={isPagesLoading || !form.getValues('token')}
                      size="sm"
                    >
                      üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                    </Button>
                  </div>
                  <FormMessage />
                  <div className="text-xs text-muted-foreground">
                    –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤ Facebook –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ‚Üí Graph API Explorer
                  </div>
                </FormItem>
              )}
            />
          </div>
        </Form>

        {/* –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∏–ª–∏ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold">–®–∞–≥ 2: –í—ã–±–µ—Ä–∏—Ç–µ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É</h3>
          
          {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü */}
          <div className="flex gap-2">
            <Button 
              onClick={handleFetchPages}
              disabled={isPagesLoading || !form.getValues('token')}
              className="bg-blue-600 hover:bg-blue-700"
            >
              {isPagesLoading ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  –ü–æ–ª—É—á–µ–Ω–∏–µ...
                </>
              ) : (
                <>üìã –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã</>
              )}
            </Button>
            
            <Button 
              onClick={handleFetchInstagramConnectedPages}
              disabled={isPagesLoading}
              className="bg-purple-600 hover:bg-purple-700"
            >
              {isPagesLoading ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  –ü–æ–ª—É—á–µ–Ω–∏–µ...
                </>
              ) : (
                <>üì± Instagram —Å–≤—è–∑–∞–Ω–Ω—ã–µ</>
              )}
            </Button>
            
            <Button 
              onClick={() => setShowManualInput(!showManualInput)}
              variant="outline"
            >
              {showManualInput ? '–°–∫—Ä—ã—Ç—å —Ä—É—á–Ω–æ–π –≤–≤–æ–¥' : '‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é'}
            </Button>
          </div>

          {/* –†—É—á–Ω–æ–π –≤–≤–æ–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
          {showManualInput && (
            <div className="bg-gray-50 border border-gray-200 rounded-md p-4 space-y-4">
              <h4 className="font-medium">–†—É—á–Ω–æ–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h4>
              
              <FormField
                control={form.control}
                name="manualPageId"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>ID Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã</FormLabel>
                    <div className="flex space-x-2">
                      <FormControl>
                        <Input
                          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 2120362494678794"
                          {...field}
                        />
                      </FormControl>
                      <Button 
                        type="button" 
                        variant="outline"
                        onClick={() => handleGetPageToken(field.value || '')}
                        disabled={!field.value || !form.getValues('token')}
                        size="sm"
                      >
                        üîë –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
                      </Button>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name="manualPageName"
                render={({ field }) => (
                  <FormItem>
                    <FormLabel>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</FormLabel>
                    <FormControl>
                      <Input
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: SMM –ë–∏–∑–Ω–µ—Å"
                        {...field}
                      />
                    </FormControl>
                    <FormMessage />
                  </FormItem>
                )}
              />

              {form.watch('manualPageId') && (
                <div className="bg-green-50 border border-green-200 rounded-md p-3">
                  <p className="text-sm text-green-700">
                    ‚úÖ ID: <code className="bg-green-100 px-1 rounded">{form.watch('manualPageId')}</code>
                    {form.watch('manualPageName') && <span>, –Ω–∞–∑–≤–∞–Ω–∏–µ: <strong>{form.watch('manualPageName')}</strong></span>}
                  </p>
                  <Button 
                    onClick={() => handleManualPageSelect()}
                    size="sm"
                    className="mt-2 bg-green-600 hover:bg-green-700"
                  >
                    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
                  </Button>
                </div>
              )}
            </div>
          )}

          {/* –°–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü */}
          {pages.length > 0 && (
            <div className="space-y-3">
              <h4 className="font-medium text-green-700">üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</h4>
              <div className="grid gap-3">
                {pages.map((page) => (
                  <div 
                    key={page.id}
                    className="border border-gray-200 rounded-lg p-4 hover:border-blue-300 transition-colors"
                  >
                    <div className="flex justify-between items-start">
                      <div className="space-y-1">
                        <h5 className="font-medium">{page.name}</h5>
                        <p className="text-sm text-gray-600">ID: {page.id}</p>
                        {page.category && (
                          <p className="text-sm text-gray-500">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {page.category}</p>
                        )}
                        {page.link && (
                          <p className="text-sm text-blue-600">
                            <a href={page.link} target="_blank" rel="noopener noreferrer">
                              {page.link}
                            </a>
                          </p>
                        )}
                      </div>
                      <Button
                        onClick={() => handlePageSelect(page.id, page.name)}
                        size="sm"
                        className="bg-green-600 hover:bg-green-700"
                      >
                        –í—ã–±—Ä–∞—Ç—å
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="bg-blue-50 border border-blue-200 rounded-md p-4">
          <h4 className="font-medium text-blue-800 mb-3">üìù –ö–∞–∫ –Ω–∞–π—Ç–∏ ID Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</h4>
          <ol className="text-sm text-blue-700 list-decimal list-inside space-y-2">
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à—É Facebook —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã" –≤ –ª–µ–≤–æ–º –º–µ–Ω—é</li>
            <li>–í—ã–±–µ—Ä–∏—Ç–µ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"</li>
            <li>–ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ "ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã" - —ç—Ç–æ –¥–ª–∏–Ω–Ω–æ–µ —á–∏—Å–ª–æ</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç ID –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤—ã—à–µ</li>
          </ol>
          
          <div className="mt-3 border-t border-blue-200 pt-3">
            <h5 className="font-medium text-blue-800 mb-2">–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±:</h5>
            <ol className="text-sm text-blue-700 list-decimal list-inside space-y-1">
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ</li>
              <li>–í –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞–π–¥–∏—Ç–µ –¥–ª–∏–Ω–Ω–æ–µ —á–∏—Å–ª–æ</li>
              <li>–ù–∞–ø—Ä–∏–º–µ—Ä: facebook.com/<strong>2120362494678794</strong></li>
            </ol>
          </div>

          <div className="mt-3 flex gap-2">
            <Button 
              onClick={() => window.open('https://www.facebook.com/pages/create', '_blank')}
              size="sm"
              className="bg-blue-600 hover:bg-blue-700"
            >
              üîó –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}