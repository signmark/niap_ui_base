import { useState, useEffect } from "react";
import { useMutation } from "@tanstack/react-query";
import { DialogContent, DialogHeader, DialogTitle, DialogDescription } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import { Textarea } from "@/components/ui/textarea";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Checkbox } from "@/components/ui/checkbox";
import { 
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue 
} from "@/components/ui/select";
import { Loader2, Image, RefreshCw, Sparkles, Pencil } from "lucide-react";
import { api } from "@/lib/api";
import { SUPPORTED_STYLES, STYLE_DESCRIPTIONS, ASPECT_RATIOS } from "../../../shared/fal-ai-styles";

/**
 * –û–¢–ö–õ–Æ–ß–ï–ù–û: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
 * –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —É—Ç–µ—á–∫—É –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏ –∏ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç
 */
/**
 * –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞: –º—ã –Ω–µ –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
 * –≠—Ç–æ –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–º–∏
 */
async function extractKeywordsFromText(text: string): Promise<string[]> {
  console.log("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–æ");
  return []; // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
}

interface ContentItem {
  content: string;
  originalContent?: string;
  imagePrompt?: string;
  prompt?: string; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ prompt, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ n8n
  [key: string]: any; // –î–ª—è –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π
}

interface ImageGenerationDialogProps {
  campaignId?: string;
  contentId?: string; // ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  businessData?: {
    companyName: string;
    businessDescription: string;
    brandImage: string;
    productsServices: string;
  };
  initialContent?: string | ContentItem; // –ù–∞—á–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏, –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–º
  initialPrompt?: string; // –ì–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º—Ç –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω–∞
  onImageGenerated?: (imageUrl: string, promptText?: string) => void;
  onClose: () => void;
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å Schnell –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ
const DEFAULT_MODELS = [
  // Schnell –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å–≤–µ—Ä—Ö—É —Å–ø–∏—Å–∫–∞)
  {
    id: 'schnell',
    name: 'Schnell',
    description: 'Schnell - –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)'
  },
  // –î—Ä—É–≥–∏–µ –º–æ–¥–µ–ª–∏
  {
    id: 'flux/juggernaut-xl-lora',
    name: 'Juggernaut Flux Lora',
    description: '–¢–æ–ø–æ–≤–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
  },
  {
    id: 'flux/juggernaut-xl-lightning',
    name: 'Juggernaut Flux Lightning',
    description: '–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
  },
  {
    id: 'flux/flux-lora',
    name: 'Flux Lora',
    description: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞'
  },
  {
    id: 'fooocus',
    name: 'Fooocus',
    description: 'Fooocus - –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –∫–æ–º–ø–æ–∑–∏—Ü–∏–µ–π'
  },
  {
    id: 'sdxl',
    name: 'Stable Diffusion XL',
    description: '–ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è Stable Diffusion XL'
  },
  {
    id: 'fast-sdxl',
    name: 'Fast SDXL',
    description: '–ë—ã—Å—Ç—Ä–∞—è –≤–µ—Ä—Å–∏—è Stable Diffusion XL'
  }
];

export function ImageGenerationDialog({
  campaignId,
  contentId,
  businessData,
  initialContent,
  initialPrompt,
  onImageGenerated,
  onClose
}: ImageGenerationDialogProps) {
  const [activeTab, setActiveTab] = useState<string>("prompt");
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –º—ã –æ–±–Ω–æ–≤–∏–º –∏—Ö –≤ useEffect
  const [prompt, setPrompt] = useState("");
  const [negativePrompt, setNegativePrompt] = useState("");
  const [imageSize, setImageSize] = useState<string>("1024x1024");
  const [content, setContent] = useState("");
  const [platform, setPlatform] = useState<"instagram" | "telegram" | "vk" | "facebook">("instagram");
  const [generatedImages, setGeneratedImages] = useState<string[]>([]);
  const [selectedImageIndex, setSelectedImageIndex] = useState<number>(-1);
  const [modelType, setModelType] = useState<string>("schnell"); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º schnell –∫–∞–∫ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
  const [stylePreset, setStylePreset] = useState<string>("photographic"); // –°—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const [numImages, setNumImages] = useState<number>(3); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3)
  const [generatedPrompt, setGeneratedPrompt] = useState<string>(""); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç
  const [savePrompt, setSavePrompt] = useState<boolean>(true); // –§–ª–∞–≥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞ –≤ –ë–î
  const [availableModels, setAvailableModels] = useState<{id: string, name: string, description: string, type?: string}[]>([]); // –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞
  
  // –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
  useEffect(() => {
    // –û—á–∏—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç HTML
    const simpleCleanHtml = (html: string): string => {
      if (!html || typeof html !== 'string') return '';
      return html.replace(/<[^>]*>/g, '');
    };
    
    console.log("üîÑ –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è ImageGenerationDialog –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏", { 
      contentId, 
      hasInitialPrompt: !!initialPrompt, 
      hasInitialContent: !!initialContent 
    });
    
    // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
    setNegativePrompt("");
    setImageSize("1024x1024");
    setContent("");
    setPlatform("instagram");
    setGeneratedImages([]);
    setSelectedImageIndex(-1);
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º schnell –∫–∞–∫ –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    setModelType("schnell");
    setStylePreset("photographic");
    setNumImages(3); // –ò—Å–ø–æ–ª—å–∑—É–µ–º 3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    setSavePrompt(true);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º—Ç–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º:
    // 1. –ï—Å–ª–∏ —ç—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (contentId) –∏ –µ—Å—Ç—å –ø—Ä–æ–º—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    // 2. –ï—Å–ª–∏ –µ—Å—Ç—å originalContent –≤ initialContent (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–º–ø—Ç), –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    // 3. –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–≥–æ –ø—Ä–æ–º—Ç–∞
    // 4. –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å–ª–∏ –≤ initialContent –µ—Å—Ç—å –ø–æ–ª–µ originalContent, –∫–æ—Ç–æ—Ä–æ–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–∑ ContentPlanGenerator
    const contentObject = typeof initialContent === 'object' ? initialContent as ContentItem : null;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –ø—Ä–æ–º–ø—Ç
    const originalContent = contentObject?.prompt || contentObject?.originalContent || contentObject?.imagePrompt || null;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–µ–π
    if (contentObject) {
      console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞–∫ –ø—Ä–æ–º–ø—Ç:', {
        prompt: contentObject.prompt || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        originalContent: contentObject.originalContent || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        imagePrompt: contentObject.imagePrompt || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
      });
    }
    
    if (contentId && initialPrompt) {
      // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –ø—Ä–æ–º—Ç–æ–º - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
      const cleanPrompt = simpleCleanHtml(initialPrompt);
      setPrompt(cleanPrompt);
      setGeneratedPrompt(cleanPrompt);
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –∏–∑ –ë–î:', cleanPrompt.substring(0, 100) + '...');
    } else if (originalContent) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º originalContent –∫–∞–∫ –ø—Ä–æ–º–ø—Ç
      const cleanPrompt = simpleCleanHtml(originalContent);
      setPrompt(cleanPrompt);
      setGeneratedPrompt(cleanPrompt);
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∫ –ø—Ä–æ–º–ø—Ç:', cleanPrompt.substring(0, 100) + '...');
    } else {
      // –õ–∏–±–æ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ª–∏–±–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–æ–º—Ç–∞ - –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
      setPrompt("");
      setGeneratedPrompt("");
      
      if (!contentId) {
        console.log('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –ø—Ä–æ–º—Ç —Å–±—Ä–æ—à–µ–Ω');
      } else if (initialContent) {
        console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–æ–º—Ç–∞ - –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º—Ç–∞');
      } else {
        console.log('–°–±—Ä–æ—Å –ø—Ä–æ–º—Ç–∞ - –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π –ø—Ä–æ–º—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      }
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º initialContent, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–º
    if (initialContent) {
      let contentText = '';
      
      // –ï—Å–ª–∏ initialContent - –æ–±—ä–µ–∫—Ç, –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è content
      if (typeof initialContent === 'object' && initialContent !== null) {
        const contentItem = initialContent as ContentItem;
        contentText = contentItem.content || '';
      } else if (typeof initialContent === 'string') {
        contentText = initialContent;
      }
      
      // –û—á–∏—â–∞–µ–º —Ç–µ–≥–∏ –∏–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      const cleanedContent = simpleCleanHtml(contentText);
      setContent(cleanedContent);
      console.log('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Å—Ç–∞:', cleanedContent.substring(0, 100) + '...');
    } else {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      setContent("");
    }
    
    // –í—ã–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞–Ω–Ω—ã—Ö
    if (initialPrompt) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–º—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä—è–º–æ–≥–æ –ø—Ä–æ–º—Ç–∞
      setActiveTab("prompt");
      console.log('–í—ã–±—Ä–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø—Ä–æ–º—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º—Ç –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Å—Ç–∞: contentId=${contentId}`);
    } else if (initialContent) {
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ–º—Ç–∞, –Ω–æ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
      setActiveTab("social"); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
      console.log('–í—ã–±—Ä–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞');
    } else {
      // –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
      setActiveTab("prompt"); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
      console.log('–í—ã–±—Ä–∞–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø—Ä–æ–º—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)');
    }
    
  }, [contentId, initialContent, initialPrompt]); // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  
  // –ü—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ FAL.AI
  useEffect(() => {
    const fetchModels = async () => {
      try {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        const response = await api.get('/api/fal-ai-models?nocache=' + Date.now());
        if (response.data?.success && response.data?.models) {
          console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', response.data.models);
          
          // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          response.data.models.forEach((model: any, index: number) => {
            console.log(`–ú–æ–¥–µ–ª—å ${index + 1}:`, model.id, model.name, model.description);
          });
          
          setAvailableModels(response.data.models);
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π:', error);
      }
    };

    fetchModels();
  }, []); // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  
  const { toast } = useToast();
  
  // –†–∞–∑–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —à–∏—Ä–∏–Ω—É –∏ –≤—ã—Å–æ—Ç—É
  const getImageDimensions = () => {
    const [width, height] = imageSize.split("x").map(Number);
    return { width, height };
  };
  
  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞
  const { mutate: generateTextPrompt, isPending: isPromptGenerationPending } = useMutation({
    mutationFn: async () => {
      if (!content) {
        throw new Error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞");
      }
      
      console.log("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥)");
      
      try {
        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–æ–º—Ç–∞
        // –û—á–∏—Å—Ç–∫–∞ –æ—Ç HTML-—Ç–µ–≥–æ–≤ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —á–µ—Ä–µ–∑ stripHtml
        const cleanedText = stripHtml(content);
        console.log("–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:", cleanedText);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
        let keywords: string[] = [];
        if (typeof extractKeywordsFromText === 'function') {
          try {
            keywords = await extractKeywordsFromText(cleanedText) || [];
          } catch (e) {
            console.log("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–æ");
          }
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ DeepSeek –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        // DeepSeek —Å–∞–º –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –ø—Ä–æ–º—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const response = await api.post("/api/generate-image-prompt", {
          content: cleanedText, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç
          keywords: keywords || [] // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
        });
        
        if (response.data?.success && response.data?.prompt) {
          return response.data.prompt;
        } else {
          throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç");
        }
      } catch (error: unknown) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ onError
        throw error;
      }
    },
    onSuccess: (promptText) => {
      console.log("–ü—Ä–æ–º—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:", promptText);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      setGeneratedPrompt(promptText);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–º—Ç –∏ –≤ –ø–æ–ª–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
      setPrompt(promptText);
      
      toast({
        title: "–£—Å–ø–µ—à–Ω–æ",
        description: "–ü—Ä–æ–º—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞"
      });
    },
    onError: (error: unknown) => {
      const errorMessage = error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞:", error);
      
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞",
        description: errorMessage || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞"
      });
    }
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ HTML-—Ç–µ–≥–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –±–∞–∑–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const stripHtml = (html: string): string => {
    if (!html || typeof html !== 'string') return '';
    
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–≥–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
      let processedHtml = html
        // –ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫
        .replace(/<p.*?>(.*?)<\/p>/gi, '$1\n\n')
        // –ó–∞–≥–æ–ª–æ–≤–∫–∏
        .replace(/<h[1-6].*?>(.*?)<\/h[1-6]>/gi, '$1\n\n')
        // –ü–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        .replace(/<br\s*\/?>/gi, '\n')
        // –°–ø–∏—Å–∫–∏
        .replace(/<li.*?>(.*?)<\/li>/gi, '‚Ä¢ $1\n')
        // –°—Å—ã–ª–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ URI)
        .replace(/<a\s+[^>]*href=['"]([^'"]*)['"]\s*[^>]*>(.*?)<\/a>/gi, (match, url, text) => {
          return text && text.trim() ? `${text.trim()} (${url})` : url;
        });
      
      // –£–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ HTML-—Ç–µ–≥–∏ –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–≥—É–ª—è—Ä–∫–æ–π
      processedHtml = processedHtml.replace(/<[^>]*>/g, '');
      
      // –î–µ–∫–æ–¥–∏—Ä—É–µ–º HTML-—Å—É—â–Ω–æ—Å—Ç–∏
      processedHtml = processedHtml
        .replace(/&nbsp;/g, ' ')
        .replace(/&amp;/g, '&')
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, '\'')
        .replace(/&ndash;/g, '‚Äì')
        .replace(/&mdash;/g, '‚Äî')
        .replace(/&laquo;/g, '¬´')
        .replace(/&raquo;/g, '¬ª');
      
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π div —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è HTML-—Å—É—â–Ω–æ—Å—Ç–µ–π
      // –≠—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
      let plainText = processedHtml;
      try {
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = processedHtml;
        plainText = tempDiv.textContent || tempDiv.innerText || processedHtml;
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å DOM-—ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è HTML:', e);
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–º–æ–¥–∑–∏ –∏ –æ—Å–Ω–æ–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
      const cleanedText = plainText
        .replace(/\n\s+/g, '\n')           // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫
        .replace(/\n{3,}/g, '\n\n')        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ –¥–æ 2
        .replace(/\s{2,}/g, ' ')           // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
        .trim();
      
      return cleanedText;
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : String(error);
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ HTML:', errorMessage);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ–≥–∏
      return html.replace(/<[^>]*>/g, '');
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø—Ä–æ–º—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
  const translateToEnglish = async (text: string): Promise<string> => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç–æ–π
      if (!text.trim()) return text;
      
      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç HTML-—Ç–µ–≥–æ–≤ –ø–µ—Ä–µ–¥ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
      const cleanedText = stripHtml(text);
      console.log('–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç HTML:', cleanedText);
      
      // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —É–∂–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
      const englishPattern = /^[a-zA-Z0-9\s.,!?;:'"()\-_\[\]@#$%^&*+=<>/\\|{}~`]+$/;
      if (englishPattern.test(cleanedText)) {
        console.log('–¢–µ–∫—Å—Ç —É–∂–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
        return cleanedText;
      }
      
      console.log('–ü–µ—Ä–µ–≤–æ–¥–∏–º –ø—Ä–æ–º—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
      const response = await api.post('/translate-to-english', { text: cleanedText });
      
      if (response.data?.success && response.data?.translatedText) {
        console.log('–ü—Ä–æ–º—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω:', response.data.translatedText);
        return response.data.translatedText;
      } else {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç');
        return cleanedText;
      }
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : String(error);
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –ø—Ä–æ–º—Ç–∞:', errorMessage);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ HTML
      return stripHtml(text);
    }
  };

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫)
  const { mutate: savePromptToDb } = useMutation({
    mutationFn: async (promptText: string) => {
      if (!contentId) {
        console.warn('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç: contentId –Ω–µ —É–∫–∞–∑–∞–Ω');
        return false;
      }
      
      console.log(`–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å ID: ${contentId} –î–û –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏`);
      
      try {
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
        console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å PATCH –∫ /campaign-content/' + contentId);
        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', { prompt: promptText });
        
        const response = await api.patch(`/campaign-content/${contentId}`, {
          prompt: promptText
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', {
          status: response.status,
          statusText: response.statusText,
          data: response.data
        });
        
        if (response.data && response.status === 200) {
          console.log('‚úÖ –ü—Ä–æ–º—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
          return true;
        } else {
          console.warn('‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ –≤–µ—Ä–Ω—É–ª–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:', response.status);
          return false;
        }
      } catch (error: unknown) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–º—Ç–∞:', error);
        // –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –æ—à–∏–±–∫–µ
        const errorObject = error as any;
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
          message: errorObject.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
          response: errorObject.response?.data,
          status: errorObject.response?.status
        });
        return false;
      }
    }
  });

  // –ú—É—Ç–∞—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const { mutate: generateImage, isPending } = useMutation({
    mutationFn: async () => {
      let requestData: {
        prompt?: string;
        negativePrompt?: string;
        originalPrompt?: string;
        originalContent?: string;
        width?: number;
        height?: number;
        campaignId?: string;
        contentId?: string;
        modelName?: string;
        numImages?: number;
        stylePreset?: string;
        savePrompt?: boolean;
        modelParams?: {
          use_api_path?: boolean;
          direct_urls?: boolean;
        };
      } = {};
      
      if (activeTab === "prompt" || activeTab === "models") {
        // –ü—Ä—è–º–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ–º–ø—Ç—É (—Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –¥–ª—è –æ–±–µ–∏—Ö –≤–∫–ª–∞–¥–æ–∫)
        const { width, height } = getImageDimensions();

        // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç" –∏ –µ—Å—Ç—å contentId, —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ prompt)
        if (activeTab === "prompt" && savePrompt && contentId && prompt) {
          console.log('–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º—Ç –≤ –ë–î, –∞ –ø–æ—Ç–æ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
          await savePromptToDb(prompt);
        }
        
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –ø—Ä–æ–º—Ç –≤ –Ω–∞—á–∞–ª–æ (–∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ playground FAL.AI)
        let enhancedPrompt = prompt;
        if (stylePreset) {
          // –ù–∞—Ö–æ–¥–∏–º —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const styleName = Object.entries(SUPPORTED_STYLES).find(([key]) => key === stylePreset)?.[1] || stylePreset;
          // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞
          enhancedPrompt = `${styleName} style. ${prompt}`;
          console.log(`–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å ${styleName} –≤ –ø—Ä–æ–º—Ç: "${enhancedPrompt}"`);
        }
        
        // –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø—Ä–æ–º—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        const translatedPrompt = await translateToEnglish(enhancedPrompt);
        const translatedNegativePrompt = negativePrompt ? await translateToEnglish(negativePrompt) : negativePrompt;
        
        console.log(`–û–¢–ü–†–ê–í–õ–Ø–ï–ú –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å ${modelType}:`, translatedPrompt);
        
        requestData = {
          prompt: translatedPrompt, // <-- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Å–æ —Å—Ç–∏–ª–µ–º
          negativePrompt: translatedNegativePrompt,
          originalPrompt: enhancedPrompt, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç —Å–æ —Å—Ç–∏–ª–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          width,
          height,
          campaignId,
          contentId, // –î–æ–±–∞–≤–ª—è–µ–º contentId –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É (–º–æ–∂–µ—Ç –±—ã—Ç—å null –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
          modelName: modelType,
          numImages: numImages, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
          stylePreset, // –ü–µ—Ä–µ–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫ —Ç–µ–∫—Å—Ç—É –≤ –ø—Ä–æ–º—Ç–µ)
          savePrompt: activeTab === "prompt" ? false : false // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
        };
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
        if (activeTab === "models") {
          console.log(`–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ ${modelType} —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, {
            numImages,
            imageSize: `${width}x${height}`,
            hasNegativePrompt: !!negativePrompt
          });
        }
      // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –¥—Ä—É–≥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–º —Ç–∞–±–æ–º —è–≤–ª—è–µ—Ç—Å—è "text",
      // –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ—Ç —Å–æ–±–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–∞–±—ã social –∏ business
      } else if (activeTab === "text") {
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
        if (!content) {
          throw new Error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏");
        }
        
        // –ï—Å–ª–∏ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
        if (generatedPrompt) {
          console.log("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–Ω–µ–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç:", generatedPrompt.substring(0, 100) + "...");
          
          // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞, –µ—Å–ª–∏ –æ–Ω –≤—ã–±—Ä–∞–Ω
          let enhancedPrompt = generatedPrompt;
          if (stylePreset) {
            // –ù–∞—Ö–æ–¥–∏–º —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const styleName = Object.entries(SUPPORTED_STYLES).find(([key]) => key === stylePreset)?.[1] || stylePreset;
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞
            enhancedPrompt = `${styleName} style. ${generatedPrompt}`;
            console.log(`–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å ${styleName} –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º—Ç: "${enhancedPrompt}"`);
          }
          
          // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç" –∏ –µ—Å—Ç—å contentId, —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
          if (savePrompt && contentId && enhancedPrompt) {
            console.log('–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º—Ç –≤ –ë–î, –∞ –ø–æ—Ç–æ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
            await savePromptToDb(enhancedPrompt);
          }
          
          requestData = {
            prompt: enhancedPrompt,
            originalContent: content,
            campaignId,
            contentId,
            modelName: modelType,
            stylePreset,
            numImages,
            savePrompt: false // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏
          };
        } else {
          // –ï—Å–ª–∏ –ø—Ä–æ–º—Ç –µ—â–µ –Ω–µ –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω
          console.log("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek");
          
          try {
            // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç HTML-—Ç–µ–≥–æ–≤ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –ø—Ä–æ–º—Ç–∞
            const cleanedText = stripHtml(content);
            console.log("–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ DeepSeek (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥):", cleanedText);
            
            // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            let keywords: string[] = [];
            if (typeof extractKeywordsFromText === 'function') {
              try {
                keywords = await extractKeywordsFromText(cleanedText) || [];
              } catch (e) {
                console.log("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–æ");
              }
            }
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ DeepSeek –Ω–∞–ø—Ä—è–º—É—é –∏–∑ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            // DeepSeek —Å–∞–º –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –ø—Ä–æ–º—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const response = await api.post("/api/generate-image-prompt", {
              content: cleanedText, // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç
              keywords: keywords || [] // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
            });
            
            if (response.data?.success && response.data?.prompt) {
              console.log("–ü—Ä–æ–º—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ DeepSeek:", response.data.prompt);
              
              // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
              setGeneratedPrompt(response.data.prompt);
              
              // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç" –∏ –µ—Å—Ç—å contentId, —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
              if (savePrompt && contentId && response.data.prompt) {
                console.log('–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º DeepSeek-–ø—Ä–æ–º—Ç –≤ –ë–î, –∞ –ø–æ—Ç–æ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
                await savePromptToDb(response.data.prompt);
              }
              
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
              // DeepSeek —É–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω—É–∂–µ–Ω
              requestData = {
                prompt: response.data.prompt,
                originalContent: content, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                campaignId,
                contentId, // –î–æ–±–∞–≤–ª—è–µ–º contentId –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
                modelName: modelType,
                stylePreset,
                numImages, // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                savePrompt: false // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏
              };
            } else {
              // –ï—Å–ª–∏ DeepSeek –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
              console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ DeepSeek, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥");
              
              // –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
              const translatedContent = await translateToEnglish(content);
              
              // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞, –µ—Å–ª–∏ –æ–Ω –≤—ã–±—Ä–∞–Ω
              let enhancedContent = translatedContent;
              if (stylePreset) {
                // –ù–∞—Ö–æ–¥–∏–º —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const styleName = Object.entries(SUPPORTED_STYLES).find(([key]) => key === stylePreset)?.[1] || stylePreset;
                // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞
                enhancedContent = `${styleName} style. ${translatedContent}`;
                console.log(`–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å ${styleName} –≤ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø—Ä–æ–º—Ç: "${enhancedContent}"`);
              }
              
              // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ø—Ä–æ–º—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
              setGeneratedPrompt(enhancedContent);
              
              // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç" –∏ –µ—Å—Ç—å contentId, —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
              if (savePrompt && contentId && enhancedContent) {
                console.log('–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –≤ –ë–î, –∞ –ø–æ—Ç–æ–º –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
                await savePromptToDb(enhancedContent);
              }
              
              requestData = {
                originalContent: content, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                campaignId,
                contentId, // –î–æ–±–∞–≤–ª—è–µ–º contentId –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
                modelName: modelType,
                stylePreset,
                numImages, // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                savePrompt: false, // –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏
                prompt: enhancedContent // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º —Å—Ç–∏–ª–µ–º –∫–∞–∫ –ø—Ä–æ–º—Ç
              };
            }
          } catch (error: unknown) {
            const errorMessage = error instanceof Error ? error.message : String(error);
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek:", errorMessage);
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
            // –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            const translatedContent = await translateToEnglish(content);
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞, –µ—Å–ª–∏ –æ–Ω –≤—ã–±—Ä–∞–Ω (–∫—Ä–æ–º–µ –º–æ–¥–µ–ª–∏ DeepSeek, –≥–¥–µ —Å—Ç–∏–ª—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
            let finalPrompt = translatedContent;
            if (stylePreset && modelType !== 'deepseek') {
              // –ù–∞—Ö–æ–¥–∏–º —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              const styleName = Object.entries(SUPPORTED_STYLES).find(([key]) => key === stylePreset)?.[1] || stylePreset;
              // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º—Ç–∞
              finalPrompt = `${styleName} style. ${translatedContent}`;
              console.log(`–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–∏–ª—å ${styleName} –≤ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø—Ä–æ–º—Ç: "${finalPrompt}"`);
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ø—Ä–æ–º—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            setGeneratedPrompt(finalPrompt);
            
            requestData = {
              originalContent: content, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
              campaignId,
              contentId, // –î–æ–±–∞–≤–ª—è–µ–º contentId –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
              modelName: modelType,
              stylePreset,
              numImages, // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
              savePrompt: true, // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
              prompt: translatedContent // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ø—Ä–æ–º—Ç
            };
          }
        }
      }
      
      console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", JSON.stringify(requestData).substring(0, 100) + "...");
      
      // –î–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—É—é —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
      requestData.modelParams = {
        use_api_path: true,   // –î–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º /api/ –≤ –ø—É—Ç–∏
        direct_urls: true     // –î–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä—è–º—ã–µ CDN URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      };
      
      // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ localStorage –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      // userId —É–∂–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –≤ api.ts
      const userId = localStorage.getItem('user_id');
      
      console.log(`üîç –ú–æ–¥–µ–ª—å: ${requestData.modelName}, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å FAL.AI —Å userId=${userId}`);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
      try {
        const response = await api.post("/api/generate-image", requestData, {
          timeout: 300000, // 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
          headers: {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–µ–º userId –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
            'x-user-id': userId || ''
          }
        });
        
        console.log(`API –æ—Ç–≤–µ—Ç –¥–ª—è –º–æ–¥–µ–ª–∏ ${requestData.modelName}:`, JSON.stringify(response.data).substring(0, 200));
        return response.data;
      } catch (error: unknown) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API –¥–ª—è –º–æ–¥–µ–ª–∏ ${requestData.modelName}:`, errorMessage);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ - –≤—ã–≤–æ–¥–∏–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (errorMessage.includes('timeout')) {
          throw new Error(`–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å.`);
        }
        
        throw error;
      }
    },
    onSuccess: (data) => {
      console.log('–û—Ç–≤–µ—Ç –æ—Ç API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', JSON.stringify(data).substring(0, 100) + '...');
      
      console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(data, null, 2).substring(0, 200));
      
      if (data.success) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
        let images: string[] = [];
        
        console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', JSON.stringify(data.data, null, 2).substring(0, 500));
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        console.log(`–ó–∞–ø—Ä–æ—à–µ–Ω–æ ${numImages} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç –º–æ–¥–µ–ª–∏ ${modelType}`);
        
        if (data.data?.images && Array.isArray(data.data.images)) {
          console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Å—Å–∏–≤ images –≤ –æ—Ç–≤–µ—Ç–µ API —Å ${data.data.images.length} —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏`);
          // –§–æ—Ä–º–∞—Ç —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º –º–∞—Å—Å–∏–≤–æ–º images
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞: –º–∞—Å—Å–∏–≤ URL-—Å—Ç—Ä–æ–∫ –∏ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª–µ–º url
          images = data.data.images.map((img: any) => {
            if (typeof img === 'string') return img;
            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç, —Ç–æ –∏—â–µ–º –ø–æ–ª–µ url (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç FAL.AI)
            if (img && typeof img === 'object') {
              const imageUrl = img.url || img.image || '';
              console.log(`–ò–∑–≤–ª–µ—á–µ–Ω URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –æ–±—ä–µ–∫—Ç–∞: ${imageUrl.substring(0, 50)}...`);
              return imageUrl;
            }
            return '';
          }).filter(Boolean);
          
          console.log(`–ò–∑–≤–ª–µ—á–µ–Ω–æ ${images.length} URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ images`);
        }
        else if (Array.isArray(data.data)) {
          console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ä–Ω–µ –æ—Ç–≤–µ—Ç–∞ API');
          // –ü—Ä—è–º–æ–π –º–∞—Å—Å–∏–≤ URL-–æ–≤ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
          images = data.data.map((img: any) => {
            if (typeof img === 'string') return img;
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–µ–π url –∏–ª–∏ image –≤ –æ–±—ä–µ–∫—Ç–µ
            if (img && typeof img === 'object') {
              return img.url || img.image || '';
            }
            return '';
          }).filter(Boolean);
        }
        else if (typeof data.data === 'string') {
          console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤ –∫–æ—Ä–Ω–µ –æ—Ç–≤–µ—Ç–∞ API');
          // –û–¥–∏–Ω URL –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
          images = [data.data];
        }
        else if (data.data && typeof data.data === 'object') {
          console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç –≤ –∫–æ—Ä–Ω–µ –æ—Ç–≤–µ—Ç–∞ API:', Object.keys(data.data));
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–±—ä–µ–∫—Ç–∞
          
          // –í–∞—Ä–∏–∞–Ω—Ç –≥–¥–µ —Å–∞–º data.data —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è url –∏–ª–∏ image
          if (data.data.url || data.data.image) {
            const imgUrl = data.data.url || data.data.image;
            if (imgUrl) images = [imgUrl];
          }
          // –í–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∞ fast-sdxl –≥–¥–µ images - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å url
          else if (data.data.images && Array.isArray(data.data.images)) {
            images = data.data.images.map((img: any) => {
              // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "–ù–ï–ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô"
              if (typeof img === 'string') {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞ –Ω–µ –Ω–∞ API
                if (img.includes('fal.media') || img.includes('cdn') || img.includes('.jpg') || img.includes('.png')) {
                  return img;
                } else {
                  console.warn('–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É:', img);
                  return null;
                }
              }
              
              // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ä–µ–∫—Ç, –∏–∑–≤–ª–µ–∫–∞—è –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
              const directUrl = img?.url || img?.image || '';
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞ –Ω–µ –Ω–∞ API
              if (directUrl && (directUrl.includes('fal.media') || directUrl.includes('cdn') || directUrl.includes('.jpg') || directUrl.includes('.png'))) {
                return directUrl;
              } else {
                console.warn('–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –æ–±—ä–µ–∫—Ç–∞:', directUrl);
                return null;
              }
            }).filter(Boolean); // –§–∏–ª—å—Ç—Ä—É–µ–º null/undefined/–ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
          }
        }
        
        console.log('–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', images);
        
        if (images.length > 0) {
          setGeneratedImages(images);
          setSelectedImageIndex(-1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
          
          toast({
            title: "–£—Å–ø–µ—à–Ω–æ",
            description: `–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${images.length} ${images.length === 1 ? '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' : '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'}`
          });
        } else {
          console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç–µ:', data);
          toast({
            variant: "destructive",
            title: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
            description: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞"
          });
        }
      } else {
        console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API:', data);
        toast({
          variant: "destructive",
          title: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
          description: "–ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"
        });
      }
    },
    onError: (error: unknown) => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
      let errorMessage = error instanceof Error ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è";
      
      if (errorMessage.includes('ENOTFOUND') || errorMessage.includes('getaddrinfo')) {
        errorMessage = "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–∏—Å–æ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏.";
      } else if (errorMessage.includes('timeout')) {
        errorMessage = "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
      } else if (errorMessage.includes('API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω') || errorMessage.includes('API –∫–ª—é—á –¥–ª—è FAL.AI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')) {
        errorMessage = "API –∫–ª—é—á –¥–ª—è FAL.AI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞.";
      } else if (errorMessage.includes('DeepSeek API') || errorMessage.includes('API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω')) {
        errorMessage = "API –∫–ª—é—á –¥–ª—è DeepSeek –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞.";
      } else if (errorMessage.includes('unauthorized') || errorMessage.includes('Unauthorized') || errorMessage.includes('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á')) {
        errorMessage = "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ API –∫–ª—é—á–µ–π.";
      } else if (errorMessage.includes('rejectUnauthorized') || errorMessage.includes('certificate')) {
        errorMessage = "–ü—Ä–æ–±–ª–µ–º–∞ —Å SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API. –ò–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥.";
      } else if (errorMessage.includes('DNS')) {
        errorMessage = "–ü—Ä–æ–±–ª–µ–º–∞ —Å DNS-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç—É–ø–∞.";
      } else if (errorMessage.includes('–ø—Ä–æ–∫—Å–∏') || errorMessage.includes('proxy')) {
        errorMessage = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä–∞. –ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.";
      } else if (errorMessage.includes('422') || errorMessage.includes('Unprocessable Entity')) {
        errorMessage = "–°–µ—Ä–≤–∏—Å –≤–µ—Ä–Ω—É–ª –∫–æ–¥ 422 (Unprocessable Entity). –í —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–º—É URL.";
      }
      
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏",
        description: errorMessage
      });
    }
  });
  
  // –í—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –≤—ã–¥–µ–ª–µ–Ω–∏–µ, –±–µ–∑ –≤—ã–∑–æ–≤–∞ callback)
  const handleSelectImage = (index: number) => {
    if (index >= 0 && index < generatedImages.length) {
      console.log(`–í—ã–±—Ä–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∏–Ω–¥–µ–∫—Å–æ–º ${index}: ${generatedImages[index].substring(0, 50)}...`);
      setSelectedImageIndex(index);
      // –ú—ã –±–æ–ª—å—à–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º onImageGenerated –∑–¥–µ—Å—å
      // –¢–µ–ø–µ—Ä—å –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ confirmSelection
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
  const confirmSelection = () => {
    if (selectedImageIndex >= 0) {
      if (onImageGenerated) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –ø—Ä–æ–º—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å prompt –∏–ª–∏ generatedPrompt
        let finalPrompt = "";
        
        if (activeTab === "prompt" || activeTab === "models") {
          // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤–∫–ª–∞–¥–∫—É —Å –ø—Ä—è–º—ã–º –≤–≤–æ–¥–æ–º –ø—Ä–æ–º—Ç–∞ –∏–ª–∏ –≤–∫–ª–∞–¥–∫—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
          finalPrompt = prompt;
        } else if (activeTab === "text" && generatedPrompt) {
          // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤–∫–ª–∞–¥–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
          finalPrompt = generatedPrompt;
        }
        
        // –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –ø—Ä–æ–º—Ç –ø—É—Å—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
        if (!finalPrompt && initialPrompt) {
          finalPrompt = initialPrompt;
        }
        
        console.log(`–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä–æ–º—Ç–æ–º: ${finalPrompt.substring(0, 50)}...`);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏ –ø—Ä–æ–º—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –¥–ª—è –µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        onImageGenerated(generatedImages[selectedImageIndex], finalPrompt);
      }
      onClose();
    } else {
      toast({
        variant: "destructive",
        title: "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
      });
    }
  };

  return (
    <DialogContent className="sm:max-w-[600px] max-h-[90vh] overflow-y-auto">
      <DialogHeader>
        <DialogTitle>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</DialogTitle>
        <DialogDescription className="text-xs text-muted-foreground mt-1">
          –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –¥–µ—Ç–∞–ª–∏ –∏ —Å—Ç–∏–ª–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∑–∞–ø—Ä–æ—Å.
        </DialogDescription>
      </DialogHeader>
      
      {/* –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="grid grid-cols-2 gap-2 mb-3">
        <div className="space-y-1">
          <Label className="text-xs flex justify-between items-center">
            <span>–ú–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</span>
            <span className="text-xs text-muted-foreground">
              {modelType === 'fast-sdxl' ? '(–±—ã—Å—Ç—Ä–∞—è)' : 
               modelType === 'fooocus' ? '(—Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è)' : 
               '(–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)'}
            </span>
          </Label>
          <Select 
            value={modelType} 
            onValueChange={(value) => {
              setModelType(value);
              console.log(`–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å: ${value}`);
            }}
          >
            <SelectTrigger className="h-8">
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å" />
            </SelectTrigger>
            <SelectContent>
              {/* –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã DEFAULT_MODELS */}
              {DEFAULT_MODELS.map((model) => (
                <SelectItem key={model.id} value={model.id}>
                  {model.name}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>

        <div className="space-y-1">
          <Label className="text-xs flex justify-between items-center">
            <span>–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
            <span className="text-xs text-muted-foreground">
              {imageSize === '1024x1024' ? '(–∫–≤–∞–¥—Ä–∞—Ç)' : 
               imageSize === '1024x768' ? '(–∞–ª—å–±–æ–º–Ω–∞—è)' : 
               imageSize === '768x1024' ? '(–ø–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è)' : ''}
            </span>
          </Label>
          <Select value={imageSize} onValueChange={(value) => setImageSize(value)}>
            <SelectTrigger className="h-8">
              <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä" />
            </SelectTrigger>
            <SelectContent>
              {ASPECT_RATIOS.map((ratio) => (
                <SelectItem key={`${ratio.width}x${ratio.height}`} value={`${ratio.width}x${ratio.height}`}>
                  {`${ratio.width}x${ratio.height}`} ({ratio.name})
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
      </div>

      <Tabs value={activeTab} onValueChange={(value) => {
        // –ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–æ–º—Ç –¥–ª—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
        setActiveTab(value);
        
        // –ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
        if (value === "prompt" && generatedPrompt && !prompt) {
          setPrompt(generatedPrompt);
          console.log("–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:", generatedPrompt.substring(0, 100) + "...");
        }
      }} className="w-full">
        <TabsList className="grid grid-cols-2 mb-2">
          <TabsTrigger value="prompt">–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å</TabsTrigger>
          <TabsTrigger value="text">–ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞</TabsTrigger>
        </TabsList>
        
        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ —Å –ø—Ä–æ–º–ø—Ç–æ–º */}
        <TabsContent value="prompt" className="space-y-2">
          <div className="space-y-2">
            <Label>–ó–∞–ø—Ä–æ—Å (–ø—Ä–æ–º–ø—Ç)</Label>
            <Textarea
              value={prompt}
              onChange={(e) => setPrompt(e.target.value)}
              placeholder="–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å..."
              className="min-h-[180px]"
            />
          </div>
          
          <div className="space-y-2">
            <Label>–ù–µ–≥–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å (—á–µ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å)</Label>
            <Input
              value={negativePrompt}
              onChange={(e) => setNegativePrompt(e.target.value)}
              placeholder="bad quality, blurry, distorted, etc."
            />
          </div>
          
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª—è */}
          <div className="space-y-1">
            <Label className="text-xs">–°—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</Label>
            <Select value={stylePreset} onValueChange={(value) => setStylePreset(value)}>
              <SelectTrigger className="h-8">
                <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å" />
              </SelectTrigger>
              <SelectContent>
                {SUPPORTED_STYLES.map((style) => (
                  <SelectItem key={style} value={style}>
                    {STYLE_DESCRIPTIONS[style] || style}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>
          
          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <div className="space-y-1">
            <Label className="text-xs">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</Label>
            <div className="flex items-center space-x-2">
              <Input
                type="number"
                min={1}
                max={5}
                value={numImages}
                onChange={(e) => setNumImages(Math.max(1, Math.min(5, parseInt(e.target.value) || 1)))}
                className="w-16 h-8 text-sm"
              />
              <span className="text-xs text-muted-foreground">(–æ—Ç 1 –¥–æ 5)</span>
            </div>
          </div>
          
          <div className="flex items-center space-x-2 mt-2">
            <Checkbox 
              id="save-prompt-direct" 
              checked={savePrompt}
              onCheckedChange={(checked) => setSavePrompt(!!checked)}
            />
            <label
              htmlFor="save-prompt-direct"
              className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            >
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç
            </label>
          </div>
        </TabsContent>
        
        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ */}
        <TabsContent value="text" className="space-y-2">
          <div className="space-y-1">
            <Label>–¢–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</Label>
            <Textarea
              value={content}
              onChange={(e) => {
                // –û—á–∏—â–∞–µ–º HTML —Ç–µ–≥–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–∏ –≤–≤–æ–¥–µ
                const cleanedText = e.target.value.replace(/<[^>]*>/g, '');
                setContent(cleanedText);
              }}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è..."
              className="min-h-[100px]"
            />
          </div>
          
          <div className="flex justify-between items-center">
            <div className="font-medium text-xs text-muted-foreground">
              –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞.
            </div>
            <div>
              <Button
                size="sm"
                variant="ghost"
                onClick={() => generateTextPrompt()}
                disabled={isPromptGenerationPending || !content}
                className="mt-1"
              >
                {isPromptGenerationPending ? (
                  <Loader2 className="h-3 w-3 mr-1 animate-spin" />
                ) : (
                  <Sparkles className="h-3 w-3 mr-1" />
                )}
                –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç
              </Button>
            </div>
          </div>
          
          {/* –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π —É–±—Ä–∞–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          
          <div className="space-y-1">
            <Label className="text-xs">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</Label>
            <div className="flex items-center space-x-2">
              <Input
                type="number"
                min={1}
                max={5}
                value={numImages}
                onChange={(e) => setNumImages(Math.max(1, Math.min(5, parseInt(e.target.value) || 1)))}
                className="w-16 h-8 text-sm"
              />
              <span className="text-xs text-muted-foreground">(–æ—Ç 1 –¥–æ 5)</span>
            </div>
          </div>
          
          <div className="flex items-center space-x-2 mt-2">
            <Checkbox 
              id="save-prompt-text" 
              checked={savePrompt}
              onCheckedChange={(checked) => setSavePrompt(!!checked)}
            />
            <label
              htmlFor="save-prompt-text"
              className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
            >
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç
            </label>
          </div>
          
          {generatedPrompt && (
            <div className="space-y-1 mt-2">
              <div className="flex justify-between items-center">
                <Label className="text-xs">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç</Label>
              </div>
              <div className="rounded-md border border-gray-200 bg-gray-50 p-4">
                <p className="text-xs font-mono whitespace-pre-wrap break-words">
                  {generatedPrompt}
                </p>
              </div>
            </div>
          )}
        </TabsContent>


      </Tabs>
      
      {/* –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
      <Button 
        onClick={() => generateImage()} 
        disabled={
          isPending || 
          (activeTab === "prompt" && !prompt) || 
          (activeTab === "text" && (!generatedPrompt || !content))
        }
        className="w-full"
      >
        {isPending ? (
          <>
            <Loader2 className="mr-2 h-4 w-4 animate-spin" />
            –ì–µ–Ω–µ—Ä–∞—Ü–∏—è...
          </>
        ) : (
          <>
            <Sparkles className="mr-2 h-4 w-4" />
            –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          </>
        )}
      </Button>
      
      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      {generatedImages.length > 0 && (
        <div className="mt-4 space-y-4">
          <h3 className="text-base font-semibold">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
          <div className={`grid ${generatedImages.length > 2 ? 'grid-cols-3' : 'grid-cols-2'} gap-2`}>
            {generatedImages.map((imageUrl, index) => (
              <div 
                key={index}
                className={`relative rounded-md overflow-hidden border-2 cursor-pointer ${selectedImageIndex === index ? 'border-primary' : 'border-transparent'}`}
                onClick={() => handleSelectImage(index)}
              >
                <div className="w-full aspect-square bg-gray-100 flex items-center justify-center relative">
                  <img 
                    src={imageUrl} 
                    alt={`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${index + 1}`} 
                    className="w-full h-auto object-cover aspect-square"
                    crossOrigin="anonymous"
                    referrerPolicy="no-referrer"
                    loading="lazy"
                    onError={(e) => {
                      console.log(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${index + 1}: ${imageUrl}`);
                      
                      // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç FAL.AI
                      if (imageUrl.includes('fal.ai') || imageUrl.includes('fal.run')) {
                        // –≠–∫—Å—Ç—Ä–∞–∫—Ç–∏–º request_id –∏ image_idx –∏–∑ URL, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
                        try {
                          const url = new URL(imageUrl);
                          const requestId = url.searchParams.get('request_id');
                          const imageIdx = url.searchParams.get('image_idx');
                          
                          // –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL
                          if (requestId && imageIdx !== null) {
                            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –º–æ–¥–µ–ª–∏ –∏–∑ –ø—É—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º
                            const modelPath = url.pathname.split('/')[2];
                            
                            // –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ CDN
                            const cdnUrl = `https://cdn.fal.ai/${modelPath}/results-direct/${requestId}/${imageIdx}`;
                            console.log(`–ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π CDN URL: ${cdnUrl}`);
                            
                            // –ó–∞–º–µ–Ω—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                            e.currentTarget.src = cdnUrl;
                            return; // –í—ã—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É —Å—Ä–∞–∑—É
                          }
                        } catch (err) {
                          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è URL:', err);
                        }
                      }
                      
                      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–ª–∏ –Ω–µ FAL.AI URL, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏
                      e.currentTarget.style.display = 'none';
                      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω –±–ª–æ–∫–∞ –∫–∞–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏
                      e.currentTarget.parentElement!.classList.add('bg-red-50');
                      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                      const errorDiv = document.createElement('div');
                      errorDiv.className = 'absolute inset-0 flex items-center justify-center text-xs text-red-500 p-2 text-center';
                      errorDiv.innerHTML = `–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ<br/>–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: ${index + 1}`;
                      e.currentTarget.parentElement!.appendChild(errorDiv);
                    }}
                  />
                </div>
              </div>
            ))}
          </div>
          
          <div className="flex justify-between mt-2">
            <Button variant="outline" size="sm" onClick={() => generateImage()}>
              <RefreshCw className="mr-1 h-3 w-3" />
              –ï—â—ë
            </Button>
            <Button 
              size="sm"
              onClick={confirmSelection}
              disabled={selectedImageIndex < 0}
            >
              <Image className="mr-1 h-3 w-3" />
              –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            </Button>
          </div>
        </div>
      )}
    </DialogContent>
  );
}