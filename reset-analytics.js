/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–∑ –ø–æ—Å—Ç–æ–≤
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏–∑ –ø–æ–ª—è social_platforms, —Å–æ—Ö—Ä–∞–Ω—è—è –æ—Å—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª–µ–π
 */

import axios from 'axios';
import fs from 'fs';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
const ADMIN_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
const ADMIN_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD || 'QtpZ3dh7';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∑–∞–ø–∏—Å—å—é –≤ —Ñ–∞–π–ª
function log(message) {
  const timestamp = new Date().toISOString();
  const formattedMessage = `${timestamp} - ${message}`;
  console.log(formattedMessage);
  fs.appendFileSync('reset-analytics.log', `${formattedMessage}\n`);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
async function getAdminToken() {
  try {
    const response = await axios.post(`${DIRECTUS_URL}/auth/login`, {
      email: ADMIN_EMAIL,
      password: ADMIN_PASSWORD
    });
    
    if (response.data && response.data.data && response.data.data.access_token) {
      log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      return response.data.data.access_token;
    } else {
      throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ');
    }
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    throw error;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
async function getPublishedPosts(token, userId = null) {
  try {
    // –ë–∞–∑–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
    const filter = {
      status: { _in: ['published'] }
    };
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω userId, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Ñ–∏–ª—å—Ç—Ä
    if (userId) {
      filter.user_id = { _eq: userId };
    }
    
    const response = await axios.get(`${DIRECTUS_URL}/items/campaign_content`, {
      params: {
        filter: JSON.stringify(filter),
        limit: 100
      },
      headers: {
        Authorization: `Bearer ${token}`
      }
    });
    
    if (response.data && response.data.data) {
      const posts = response.data.data;
      log(`üìÑ –ü–æ–ª—É—á–µ–Ω–æ ${posts.length} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤`);
      return posts;
    } else {
      log('‚ö†Ô∏è –ù–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ');
      return [];
    }
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: ${error.message}`);
    throw error;
  }
}

// –û—á–∏—Å—Ç–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –ø–æ—Å—Ç–µ
async function resetPostAnalytics(postId, token, socialPlatforms) {
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ platforms –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    const updatedPlatforms = {};
    
    // –î–ª—è –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ –ø–æ—Å—Ç–µ
    for (const [platform, data] of Object.entries(socialPlatforms)) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –Ω–æ —É–¥–∞–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
      const updatedPlatformData = { ...data };
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –∑–∞–º–µ–Ω—è–µ–º –µ–µ –Ω–∞ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
      if (updatedPlatformData.analytics) {
        updatedPlatformData.analytics = {
          views: 0,
          likes: 0,
          comments: 0,
          shares: 0,
          clicks: 0,
          engagementRate: 0,
          lastUpdated: new Date().toISOString()
        };
      }
      
      updatedPlatforms[platform] = updatedPlatformData;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
    const response = await axios.patch(`${DIRECTUS_URL}/items/campaign_content/${postId}`, {
      social_platforms: updatedPlatforms
    }, {
      headers: {
        Authorization: `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (response.data && response.data.data) {
      log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–∞ ${postId}`);
      return true;
    } else {
      log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ ${postId}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ`);
      return false;
    }
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ—Å—Ç–∞ ${postId}: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function resetAllAnalytics() {
  try {
    log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—á–∏—Å—Ç–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const token = await getAdminToken();
    
    // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (admin ID –∏–∑ —Å–∏—Å—Ç–µ–º—ã) - –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userId = '53921f16-f51d-4591-80b9-8caa4fde4d13';
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
    const posts = await getPublishedPosts(token, userId);
    
    // –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    let successCount = 0;
    let errorCount = 0;
    let skippedCount = 0;
    
    // –û—á–∏—â–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞
    for (const post of posts) {
      if (!post.social_platforms) {
        log(`‚è© –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç ${post.id}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö social_platforms`);
        skippedCount++;
        continue;
      }
      
      const hasPlatformsWithAnalytics = Object.values(post.social_platforms).some(
        platform => platform && platform.analytics
      );
      
      if (!hasPlatformsWithAnalytics) {
        log(`‚è© –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç ${post.id}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏`);
        skippedCount++;
        continue;
      }
      
      // –û—á–∏—â–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ—Å—Ç–∞
      const success = await resetPostAnalytics(post.id, token, post.social_platforms);
      
      if (success) {
        successCount++;
      } else {
        errorCount++;
      }
    }
    
    // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:`);
    log(`  ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–æ: ${successCount} –ø–æ—Å—Ç–æ–≤`);
    log(`  ‚ùå –û—à–∏–±–æ–∫: ${errorCount} –ø–æ—Å—Ç–æ–≤`);
    log(`  ‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} –ø–æ—Å—Ç–æ–≤`);
    log(`  üìù –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${posts.length} –ø–æ—Å—Ç–æ–≤`);
    
    log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—á–∏—Å—Ç–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω');
  } catch (error) {
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—á–∏—Å—Ç–∫–∏: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
resetAllAnalytics().catch(error => {
  log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
});