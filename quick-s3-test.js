#!/usr/bin/env node

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç S3 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è Instagram
 */

import https from 'https';
import http from 'http';

async function checkHeaders(url) {
  return new Promise((resolve, reject) => {
    const protocol = url.startsWith('https:') ? https : http;
    
    const req = protocol.request(url, { method: 'HEAD' }, (res) => {
      console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: ${url}`);
      console.log(`üìä HTTP Status: ${res.statusCode}`);
      console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:`);
      
      const headers = res.headers;
      
      // –ö–ª—é—á–µ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Instagram
      const contentType = headers['content-type'];
      const acceptRanges = headers['accept-ranges'];
      const contentLength = headers['content-length'];
      const cacheControl = headers['cache-control'];
      
      console.log(`  Content-Type: ${contentType || '–ù–ï –ù–ê–ô–î–ï–ù'}`);
      console.log(`  Accept-Ranges: ${acceptRanges || '–ù–ï –ù–ê–ô–î–ï–ù'}`);
      console.log(`  Content-Length: ${contentLength || '–ù–ï –ù–ê–ô–î–ï–ù'}`);
      console.log(`  Cache-Control: ${cacheControl || '–ù–ï –ù–ê–ô–î–ï–ù'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Instagram —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
      let issues = [];
      
      if (!contentType || !contentType.startsWith('video/')) {
        issues.push('‚ùå Content-Type –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å video/mp4');
      }
      
      if (acceptRanges !== 'bytes') {
        issues.push('‚ùå Accept-Ranges –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "bytes" –¥–ª—è Instagram');
      }
      
      if (issues.length > 0) {
        console.log('\nüö´ –ü–†–û–ë–õ–ï–ú–´:');
        issues.forEach(issue => console.log(`  ${issue}`));
      } else {
        console.log('\n‚úÖ –í–°–ï –ó–ê–ì–û–õ–û–í–ö–ò –ö–û–†–†–ï–ö–¢–ù–´ –î–õ–Ø INSTAGRAM');
      }
      
      resolve({ 
        success: true, 
        headers, 
        issues, 
        isInstagramCompatible: issues.length === 0 
      });
    });
    
    req.on('error', (error) => {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`);
      resolve({ success: false, error: error.message });
    });
    
    req.setTimeout(10000, () => {
      req.destroy();
      console.error('‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞');
      resolve({ success: false, error: 'Timeout' });
    });
    
    req.end();
  });
}

async function main() {
  console.log('üöÄ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê S3 –ó–ê–ì–û–õ–û–í–ö–û–í');
  console.log('=' .repeat(50));
  
  // –°–ø–∏—Å–æ–∫ URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const testUrls = [
    'https://lbrspb.beget.tech/videos/test.mp4',
    'https://lbrspb.beget.tech/test.mp4',
    // –¢–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    'https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4'
  ];
  
  for (const url of testUrls) {
    const result = await checkHeaders(url);
    console.log('-'.repeat(50));
    
    if (result.success && result.isInstagramCompatible) {
      console.log('üéâ –≠–¢–û–¢ URL –°–û–í–ú–ï–°–¢–ò–ú –° INSTAGRAM!');
    } else if (result.success) {
      console.log('‚ö†Ô∏è  –≠–¢–û–¢ URL –¢–†–ï–ë–£–ï–¢ –ù–ê–°–¢–†–û–ô–ö–ò');
    } else {
      console.log('üí• –û–®–ò–ë–ö–ê –î–û–°–¢–£–ü–ê –ö URL');
    }
    
    console.log('');
  }
  
  console.log('üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('1. –ï—Å–ª–∏ Accept-Ranges –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É Beget');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å Content-Type: video/mp4');
  console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º –≤ S3');
}

main().catch(console.error);