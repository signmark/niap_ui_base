#!/usr/bin/env node

const axios = require('axios');

async function testInstagramOAuthCallback() {
  console.log('üî• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Instagram OAuth Callback');
  
  const testData = {
    code: 'test_code_123',
    state: 'test_state_' + Date.now()
  };
  
  // –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Å—Å–∏—é
  const sessionData = {
    appId: '1234567890123456',
    appSecret: 'test_secret',
    campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e',
    redirectUri: 'http://localhost:3000/instagram-callback',
    webhookUrl: 'https://n8n.roboflow.space/webhook/instagram-auth'
  };
  
  try {
    console.log('1. –°–æ–∑–¥–∞–µ–º OAuth —Å–µ—Å—Å–∏—é...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (–æ–±—ã—á–Ω–æ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≤ /api/instagram/auth/start)
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–∞ —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ OAuth –ø—Ä–æ—Ü–µ—Å—Å–∞
    console.log(`–¢–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è: ${JSON.stringify(sessionData, null, 2)}`);
    
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Instagram –≤ –∫–∞–º–ø–∞–Ω–∏–∏...');
    
    const currentSettingsResponse = await axios.get(
      `https://directus.roboflow.space/items/user_campaigns/46868c44-c6a4-4bed-accf-9ad07bba790e`,
      {
        headers: {
          'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    const currentInstagram = currentSettingsResponse.data.data.social_media_settings?.instagram;
    console.log('–¢–µ–∫—É—â–∏–µ Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
    console.log(JSON.stringify(currentInstagram, null, 2));
    
    if (currentInstagram?.token) {
      console.log('‚úÖ Instagram —Ç–æ–∫–µ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.log(`üìä –¢–æ–∫–µ–Ω: ${currentInstagram.token.substring(0, 20)}...`);
      console.log(`üìä Business Account ID: ${currentInstagram.businessAccountId}`);
    } else {
      console.log('‚ùå Instagram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }
    
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—à–ª–∏ –±—ã –∏–∑ Facebook API
    const mockFacebookResponse = {
      longLivedToken: 'EAA_new_token_from_oauth_' + Date.now(),
      expiresIn: 'never', // Instagram tokens –Ω–µ –∏—Å—Ç–µ–∫–∞—é—Ç
      user: {
        id: 'test_user_id',
        name: 'Test User'
      },
      instagramAccounts: [
        {
          instagramId: '17841422578516105',
          username: 'test_instagram_account',
          name: 'Test Instagram Business'
        }
      ]
    };
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const existingInstagram = currentInstagram || {};
    const newInstagramSettings = {
      appId: sessionData.appId,
      longLivedToken: mockFacebookResponse.longLivedToken,
      expiresIn: mockFacebookResponse.expiresIn,
      tokenExpiresAt: null, // –¥–ª—è "never"
      user: mockFacebookResponse.user,
      instagramAccounts: mockFacebookResponse.instagramAccounts,
      authTimestamp: new Date().toISOString(),
      status: 'active'
    };
    
    const updatedInstagramSettings = {
      ...existingInstagram,
      ...newInstagramSettings,
      token: existingInstagram.token || newInstagramSettings.longLivedToken,
      businessAccountId: existingInstagram.businessAccountId || 
        (newInstagramSettings.instagramAccounts[0] ? 
          newInstagramSettings.instagramAccounts[0].instagramId : null)
    };
    
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:');
    console.log(JSON.stringify(updatedInstagramSettings, null, 2));
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log(`üîë –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω: ${updatedInstagramSettings.token?.substring(0, 20)}...`);
    console.log(`üìä Business Account ID: ${updatedInstagramSettings.businessAccountId}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    if (error.response) {
      console.error('üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
    }
  }
}

testInstagramOAuthCallback();