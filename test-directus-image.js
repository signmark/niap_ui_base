// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ Directus
import axios from 'axios';
import fs from 'fs';
import path from 'path';
import os from 'os';
import FormData from 'form-data';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
const TELEGRAM_TOKEN = "7529101043:AAG298h0iubyeKPuZ-WRtEFbNEnEyqy_XJU";
const TELEGRAM_CHAT_ID = "-1002302366310";

// –ü—Ä–∏–Ω–∏–º–∞–µ–º URL –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
let IMAGE_URL = args[0] || "https://picsum.photos/300/200";

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω Directus –∏–∑ .env
const DIRECTUS_TOKEN = process.env.DIRECTUS_TOKEN || "";

async function downloadImage() {
  try {
    console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑: ${IMAGE_URL}`);
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    const tempDir = path.join(os.tmpdir(), 'telegram_test');
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir, { recursive: true });
    }
    
    const tempFile = path.join(tempDir, `test_image_${Date.now()}.jpg`);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = {
      'Accept': 'image/*',
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
      'Cache-Control': 'no-cache'
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus, –µ—Å–ª–∏ URL –æ—Ç Directus
    if (IMAGE_URL.includes('directus') && DIRECTUS_TOKEN) {
      console.log(`‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Directus: ${DIRECTUS_TOKEN.substring(0, 10)}...`);
      headers['Authorization'] = `Bearer ${DIRECTUS_TOKEN}`;
    }
    
    console.log(`üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏:`, headers);
    
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    console.time('–í—Ä–µ–º—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è');
    const imageResponse = await axios.get(IMAGE_URL, {
      responseType: 'arraybuffer',
      timeout: 30000, // —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
      headers: headers
    });
    console.timeEnd('–í—Ä–µ–º—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–∫–∞—á–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const dataSize = imageResponse.data.length;
    if (dataSize === 0) {
      throw new Error(`–°–∫–∞—á–∞–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª (0 –±–∞–π—Ç)`);
    }
    
    console.log(`üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${dataSize} –±–∞–π—Ç`);
    console.log(`üìÑ –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${imageResponse.headers['content-type']}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(tempFile, Buffer.from(imageResponse.data));
    console.log(`üíæ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${tempFile} (${dataSize} –±–∞–π—Ç)`);
    
    return {
      tempFile,
      contentType: imageResponse.headers['content-type'] || 'image/jpeg',
      dataSize
    };
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`);
    if (error.response) {
      console.error(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`);
      console.error(`üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:`, error.response.data);
    }
    throw error;
  }
}

async function sendToTelegram(imageInfo) {
  try {
    console.log(`üì§ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram...`);
    
    // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const form = new FormData();
    form.append('chat_id', TELEGRAM_CHAT_ID);
    form.append('caption', `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Directus (${imageInfo.dataSize} –±–∞–π—Ç)`);
    form.append('parse_mode', 'HTML');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    console.log(`üìé –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª ${imageInfo.tempFile}`);
    const fileStream = fs.createReadStream(imageInfo.tempFile);
    form.append('photo', fileStream, { 
      filename: `image_${Date.now()}.jpg`,
      contentType: imageInfo.contentType 
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram
    console.log(`üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram API...`);
    console.time('–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
    
    const result = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendPhoto`,
      form,
      {
        headers: {
          ...form.getHeaders()
        },
        timeout: 30000 // —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
      }
    );
    
    console.timeEnd('–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    fileStream.destroy();
    
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏:`, JSON.stringify(result.data, null, 2));
    
    return result.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: ${error.message}`);
    if (error.response) {
      console.error(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${error.response.status}`);
      console.error(`üìù –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:`, error.response.data);
    }
    throw error;
  } finally {
    // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try {
      if (imageInfo && imageInfo.tempFile && fs.existsSync(imageInfo.tempFile)) {
        fs.unlinkSync(imageInfo.tempFile);
        console.log(`üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: ${imageInfo.tempFile}`);
      }
    } catch (err) {
      console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${err.message}`);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
async function main() {
  console.log(`üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${IMAGE_URL}`);
  try {
    const imageInfo = await downloadImage();
    await sendToTelegram(imageInfo);
    console.log(`‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!`);
  } catch (err) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ${err}`);
  }
}

main();