const axios = require('axios');
require('dotenv').config();

/**
 * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç Instagram OAuth flow —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏
 */

async function testFullInstagramOAuthFlow() {
  console.log('üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ INSTAGRAM OAUTH FLOW –° –õ–û–ì–ê–ú–ò');
  
  const campaignId = '46868c44-c6a4-4bed-accf-9ad07bba790e';
  const baseURL = 'http://localhost:5000';
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Instagram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const testAppData = {
    appId: '1234567890123456',
    appSecret: 'test_app_secret_real_12345_updated',
    redirectUri: `${baseURL}/instagram-callback`,
    webhookUrl: 'https://n8n.roboflow.space/webhook/instagram-auth',
    instagramId: '17841422578516105',
    campaignId: campaignId
  };
  
  // –¢–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ–º admin token –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  const adminToken = process.env.DIRECTUS_TOKEN;
  
  console.log('\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞:', {
    campaignId,
    appId: testAppData.appId,
    hasAdminToken: !!adminToken,
    baseURL
  });
  
  try {
    console.log('\n=== –≠–¢–ê–ü 1: –ó–ê–ü–£–°–ö OAUTH FLOW ===');
    
    const startResponse = await axios.post(
      `${baseURL}/api/instagram/auth/start`,
      testAppData,
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ OAuth flow –∑–∞–ø—É—â–µ–Ω:', {
      success: startResponse.data.success,
      hasAuthUrl: !!startResponse.data.authUrl,
      state: startResponse.data.state
    });
    
    const state = startResponse.data.state;
    
    console.log('\n=== –≠–¢–ê–ü 2: –°–ò–ú–£–õ–Ø–¶–ò–Ø OAUTH CALLBACK ===');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º callback —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const mockCode = 'AQD8_test_code_from_facebook_oauth_simulation_12345_updated';
    
    console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã callback:', {
      code: mockCode.substring(0, 25) + '...',
      state: state
    });
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ)
    try {
      const callbackResponse = await axios.get(
        `${baseURL}/api/instagram/auth/callback?code=${mockCode}&state=${state}`,
        { timeout: 15000 }
      );
      
      console.log('‚úÖ OAuth callback –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ:', callbackResponse.data);
      
    } catch (callbackError) {
      if (callbackError.response) {
        console.log('üìã OAuth callback –æ—Ç–≤–µ—Ç (–æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞):', {
          status: callbackError.response.status,
          success: callbackError.response.data?.success,
          error: callbackError.response.data?.error,
          details: callbackError.response.data?.details
        });
        console.log('‚ÑπÔ∏è  –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–µ–º–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç Facebook');
      } else {
        console.log('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ callback:', callbackError.message);
      }
    }
    
    console.log('\n=== –≠–¢–ê–ü 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø –ù–ê–°–¢–†–û–ï–ö ===');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–ø—Ä—è–º—É—é
    const settingsData = {
      appId: testAppData.appId,
      appSecret: testAppData.appSecret,
      instagramId: testAppData.instagramId,
      accessToken: 'EAALyiQk1I8oBOZC2FZBZA1j_test_long_lived_token_for_testing_12345'
    };
    
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', {
      appId: settingsData.appId,
      appSecret: settingsData.appSecret.substring(0, 15) + '...',
      instagramId: settingsData.instagramId,
      accessToken: settingsData.accessToken.substring(0, 25) + '...'
    });
    
    const saveResponse = await axios.patch(
      `${baseURL}/api/campaigns/${campaignId}/instagram-settings`,
      settingsData,
      {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${adminToken}`
        }
      }
    );
    
    console.log('‚úÖ Instagram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', {
      success: saveResponse.data.success,
      message: saveResponse.data.message
    });
    
    console.log('\n=== –≠–¢–ê–ü 4: –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–ï–ù–ù–´–• –ù–ê–°–¢–†–û–ï–ö ===');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π endpoint
    const settingsResponse = await axios.get(
      `${baseURL}/api/campaigns/${campaignId}/instagram-settings`,
      {
        headers: {
          'Authorization': `Bearer ${adminToken}`
        }
      }
    );
    
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π endpoint:', {
      success: settingsResponse.data.success,
      hasSettings: !!settingsResponse.data.settings,
      appId: settingsResponse.data.settings?.appId,
      hasAccessToken: !!settingsResponse.data.settings?.accessToken
    });
    
    console.log('\n=== –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===');
    console.log('‚úÖ OAuth flow –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('‚úÖ Callback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è (—Å –æ–∂–∏–¥–∞–µ–º–æ–π –æ—à–∏–±–∫–æ–π —Ç–æ–∫–µ–Ω–∞)');
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∏–∑ –±–∞–∑—ã');
    console.log('‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö');
    
    console.log('\nüìã –ü–†–û–í–ï–†–¨–¢–ï –°–ï–†–í–ï–†–ù–´–ï –õ–û–ì–ò –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞');
    
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
testFullInstagramOAuthFlow();