// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π
import axios from 'axios';
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function getScheduledContent() {
  try {
    const directusUrl = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
    const email = process.env.DIRECTUS_ADMIN_EMAIL;
    const password = process.env.DIRECTUS_ADMIN_PASSWORD;
    
    console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${email}`);
    
    // –®–∞–≥ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    let token;
    try {
      const authResponse = await axios.post(`${directusUrl}/auth/login`, {
        email,
        password
      });
      
      if (authResponse.data?.data?.access_token) {
        token = authResponse.data.data.access_token;
        console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω: ***${token.substring(token.length - 10)}`);
        
        // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞
        console.log('\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π:');
        
        const params = {
          filter: {
            status: {
              _eq: 'scheduled'
            },
            scheduled_at: {
              _nnull: true
            }
          },
          sort: ['scheduled_at']
        };
        
        console.log(`URL: ${directusUrl}/items/campaign_content`);
        console.log(`–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: ${JSON.stringify(params, null, 2)}`);
        console.log(`–ó–∞–≥–æ–ª–æ–≤–∫–∏: Authorization: Bearer ***${token.substring(token.length - 10)}`);
        
        try {
          console.log('\nüìã –ü–æ–ø—ã—Ç–∫–∞ 1: –ß–µ—Ä–µ–∑ query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
          const response1 = await axios.get(`${directusUrl}/items/campaign_content`, {
            headers: {
              'Authorization': `Bearer ${token}`,
              'Content-Type': 'application/json'
            },
            params: params
          });
          
          console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
          console.log(`–ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${response1.data.data.length}`);
          console.log(`–ü–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞: ${JSON.stringify(response1.data.data.slice(0, 3).map(item => ({ id: item.id, title: item.title })), null, 2)}`);
        } catch (error) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–ü–æ–ø—ã—Ç–∫–∞ 1):');
          console.log(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.response?.status}`);
          console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.errors?.[0]?.message}`);
          
          // –ü–æ–ø—ã—Ç–∫–∞ 2: –ó–∞–ø—Ä–æ—Å —Å —è–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
          try {
            console.log('\nüìã –ü–æ–ø—ã—Ç–∫–∞ 2: –° —è–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞');
            const filterStr = "filter[status][_eq]=scheduled&filter[scheduled_at][_nnull]=true&sort=scheduled_at";
            const response2 = await axios.get(`${directusUrl}/items/campaign_content?${filterStr}`, {
              headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
              }
            });
            
            console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
            console.log(`–ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${response2.data.data.length}`);
            console.log(`–ü–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞: ${JSON.stringify(response2.data.data.slice(0, 3).map(item => ({ id: item.id, title: item.title })), null, 2)}`);
          } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–ü–æ–ø—ã—Ç–∫–∞ 2):');
            console.log(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.response?.status}`);
            console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.errors?.[0]?.message}`);
            
            // –ü–æ–ø—ã—Ç–∫–∞ 3: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞
            try {
              console.log('\nüìã –ü–æ–ø—ã—Ç–∫–∞ 3: –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞, –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
              const response3 = await axios.get(`${directusUrl}/items/campaign_content`, {
                headers: {
                  'Authorization': `Bearer ${token}`,
                  'Content-Type': 'application/json'
                }
              });
              
              console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
              console.log(`–ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${response3.data.data.length}`);
              console.log(`–ü–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞: ${JSON.stringify(response3.data.data.slice(0, 3).map(item => ({ id: item.id, title: item.title })), null, 2)}`);
              
              // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
              const now = new Date();
              const scheduledContent = response3.data.data.filter(item => {
                return item.status === 'scheduled' && item.scheduled_at && new Date(item.scheduled_at) <= now;
              });
              
              console.log(`\n–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${scheduledContent.length}`);
              console.log(`–î–µ—Ç–∞–ª–∏: ${JSON.stringify(scheduledContent.map(item => ({
                id: item.id,
                title: item.title,
                status: item.status,
                scheduled_at: item.scheduled_at
              })), null, 2)}`);
            } catch (error) {
              console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ (–ü–æ–ø—ã—Ç–∫–∞ 3):');
              console.log(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.response?.status}`);
              console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.errors?.[0]?.message}`);
            }
          }
        }
      } else {
        console.log('‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç–µ');
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
      console.log(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.response?.status}`);
      console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.errors?.[0]?.message}`);
    }
  } catch (error) {
    console.error('–û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

getScheduledContent();