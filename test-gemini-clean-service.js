/**
 * –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —á–∏—Å—Ç–æ–≥–æ Gemini —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

async function testGeminiCleanService() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —á–∏—Å—Ç—ã–π Gemini —Å–µ—Ä–≤–∏—Å...');
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —á–∏—Å—Ç—ã–π —Å–µ—Ä–≤–∏—Å
    const { geminiVertexClean } = await import('./server/services/gemini-vertex-clean');
    
    const testData = {
      text: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è",
      prompt: "–£–ª—É—á—à–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, —Å–¥–µ–ª–∞–π –µ–≥–æ –±–æ–ª–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º",
      model: "gemini-2.5-flash-preview-05-20"
    };
    
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –º–æ–¥–µ–ª—å—é: ${testData.model}`);
    console.log(`üìù –¢–µ–∫—Å—Ç: ${testData.text}`);
    console.log(`üí≠ –ü—Ä–æ–º–ø—Ç: ${testData.prompt}`);
    
    const startTime = Date.now();
    const result = await geminiVertexClean.improveText(testData);
    const endTime = Date.now();
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —á–∏—Å—Ç–æ–≥–æ Gemini —Å–µ—Ä–≤–∏—Å–∞!');
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime - startTime}ms`);
    console.log(`üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ç–æ—Ä—É—é –º–æ–¥–µ–ª—å
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ç–æ—Ä—É—é –º–æ–¥–µ–ª—å Gemini 2.5...');
    
    const testData2 = {
      ...testData,
      model: "gemini-2.5-pro-preview-05-06"
    };
    
    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –º–æ–¥–µ–ª—å—é: ${testData2.model}`);
    
    const startTime2 = Date.now();
    const result2 = await geminiVertexClean.improveText(testData2);
    const endTime2 = Date.now();
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –≤—Ç–æ—Ä–æ–π –º–æ–¥–µ–ª–∏!');
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime2 - startTime2}ms`);
    console.log(`üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result2}`);
    
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —á–∏—Å—Ç–æ–≥–æ Gemini —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚ú® –°—Ç–∞—Ä—ã–µ –∫—Ä–µ–¥–µ–Ω—à–∞–ª—ã –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —á–∏—Å—Ç–æ–≥–æ Gemini —Å–µ—Ä–≤–∏—Å–∞:', error.message);
    console.error('üìù –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testGeminiCleanService();