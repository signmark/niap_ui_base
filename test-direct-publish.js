#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram —á–µ—Ä–µ–∑ publishViaInstagramDirectAPI
 * –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ credentials
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000';

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
const EXISTING_CONTENT_ID = 'f23f1b20-2002-4c5c-8005-2900724a4782';

async function testDirectPublish() {
  console.log('üöÄ –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram —á–µ—Ä–µ–∑ Direct API');
  console.log(`üìã Content ID: ${EXISTING_CONTENT_ID}`);
  console.log('');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Instagram Direct API
    console.log('üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Instagram Direct API...');
    const statusResponse = await axios.get(`${API_BASE}/api/instagram-direct/status`);
    console.log(`   ‚úÖ API —Å—Ç–∞—Ç—É—Å: ${statusResponse.data.message}`);
    console.log(`   üåê Proxy: ${statusResponse.data.proxy?.server}:${statusResponse.data.proxy?.port}`);
    console.log('');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ endpoint
    console.log('üì± –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ /api/publish...');
    
    const publishData = {
      contentId: EXISTING_CONTENT_ID,
      platform: 'instagram'
    };
    
    console.log(`   üì§ –ü—É–±–ª–∏–∫—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç ${EXISTING_CONTENT_ID} –≤ Instagram`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π endpoint –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    const publishResponse = await axios.post(
      `${API_BASE}/api/publish`,
      publishData
    );
    
    if (publishResponse.data.success) {
      console.log('   ‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
      console.log(`   üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${publishResponse.data.platform}`);
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${publishResponse.data.status}`);
      if (publishResponse.data.postUrl) {
        console.log(`   üîó URL –ø–æ—Å—Ç–∞: ${publishResponse.data.postUrl}`);
      }
      if (publishResponse.data.postId) {
        console.log(`   üÜî Post ID: ${publishResponse.data.postId}`);
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${publishResponse.data.error}`);
    }
    console.log('');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
    console.log('üìä –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö Instagram —Å–µ—Å—Å–∏–π...');
    const sessionsResponse = await axios.get(`${API_BASE}/api/instagram-direct/sessions`);
    
    if (sessionsResponse.data.sessions && sessionsResponse.data.sessions.length > 0) {
      console.log(`   üìã –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: ${sessionsResponse.data.sessions.length}`);
      sessionsResponse.data.sessions.forEach((session, index) => {
        console.log(`   üë§ –°–µ—Å—Å–∏—è ${index + 1}: ${session.username}`);
        console.log(`   ‚è∞ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ: ${new Date(session.expiresAt).toLocaleString()}`);
      });
    } else {
      console.log(`   ‚ö†Ô∏è –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
    }
    console.log('');
    
    console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    
    if (error.response) {
      console.error('   üìä –°—Ç–∞—Ç—É—Å HTTP:', error.response.status);
      if (error.response.data) {
        console.error('   üìÑ –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(error.response.data, null, 2));
      }
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testDirectPublish();