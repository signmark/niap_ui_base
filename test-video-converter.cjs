/**
 * –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
 */
const axios = require('axios');

async function testVideoConverter() {
  const SERVER_URL = 'http://localhost:5000';
  const TEST_VIDEO_URL = 'https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/9b1ed8d5-8e55-46ad-9ea9-4f3a504703ab.webm';
  
  try {
    console.log('üé¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –≤–∏–¥–µ–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä FFmpeg');
    console.log('–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ:', TEST_VIDEO_URL);
    
    const response = await axios.post(`${SERVER_URL}/api/real-video-converter/convert`, {
      videoUrl: TEST_VIDEO_URL
    }, {
      timeout: 300000 // 5 –º–∏–Ω—É—Ç
    });
    
    console.log('\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(response.data, null, 2));
    
    if (response.data.success && response.data.convertedUrl) {
      console.log('\nüéâ –£–°–ü–ï–•! –í–∏–¥–µ–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ:');
      console.log('–ò—Å—Ö–æ–¥–Ω—ã–π URL:', response.data.originalUrl);
      console.log('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL:', response.data.convertedUrl);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–π URL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ MP4
      if (response.data.convertedUrl.includes('.mp4')) {
        console.log('‚úÖ –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP4');
      }
    } else {
      console.log('‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testVideoConverter();