/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö HTML-—Ç–µ–≥–æ–≤
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä—è–º–æ–µ API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ –ø–æ–ª–∞–≥–∞—è—Å—å
 * –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ Directus
 */

const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const CONFIG = {
  apiUrl: 'http://localhost:5000',
  campaignId: '46868c44-c6a4-4bed-accf-9ad07bba790e', // ID —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
  telegram: {
    token: '7529101043:AAG298h0iubyeKPuZ-WRtEFbNEnEyqy_XJU',
    chatId: '-1002302366310'
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É HTML-—Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 */
async function testHtmlFormatting() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram\n');
  
  // –ú–∞—Å—Å–∏–≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ HTML-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
  const testCases = [
    {
      title: "–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç —Å –±–∞–∑–æ–≤—ã–º–∏ —Ç–µ–≥–∞–º–∏",
      html: "<p>–¢–µ–∫—Å—Ç —Å <b>–∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º</b> –∏ <i>–∫—É—Ä—Å–∏–≤–æ–º</i>.</p><p>–ù–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å <u>–ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–º</u> —Ç–µ–∫—Å—Ç–æ–º.</p>",
      testId: "test-basic-" + Date.now().toString().slice(-5)
    },
    {
      title: "–°–ø–∏—Å–∫–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏",
      html: "<h2>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h2><ul><li>–ü–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç</li><li>–í—Ç–æ—Ä–æ–π <b>–∂–∏—Ä–Ω—ã–π</b> –ø—É–Ω–∫—Ç</li></ul><p>–¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞</p>",
      testId: "test-lists-" + Date.now().toString().slice(-5)
    },
    {
      title: "–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏ –∏ —ç–º–æ–¥–∑–∏",
      html: "<p>–¢–µ–∫—Å—Ç —Å <b>–∂–∏—Ä–Ω—ã–º –∏ <i>–≤–ª–æ–∂–µ–Ω–Ω—ã–º –∫—É—Ä—Å–∏–≤–æ–º</i></b> –∏ —ç–º–æ–¥–∑–∏ üéâ üöÄ ‚ú®</p>",
      testId: "test-nested-" + Date.now().toString().slice(-5)
    },
    {
      title: "–ù–µ–∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã)",
      html: "<p>–¢–µ–∫—Å—Ç —Å <b>–Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–º –∂–∏—Ä–Ω—ã–º —Ç–µ–≥–æ–º –∏ <i>–≤–ª–æ–∂–µ–Ω–Ω—ã–º –∫—É—Ä—Å–∏–≤–æ–º</p><p>–ù–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ</p>",
      testId: "test-unclosed-" + Date.now().toString().slice(-5)
    }
  ];

  // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
  for (let i = 0; i < testCases.length; i++) {
    const testCase = testCases[i];
    console.log(`\n‚è≥ –¢–µ—Å—Ç ${i+1}/${testCases.length}: ${testCase.title}`);
    
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ—Å—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ Telegram
      const htmlWithTestId = `${testCase.html}\n\n[Test ID: ${testCase.testId}]`;
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –º–∞—Ä—à—Ä—É—Ç API
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ POST /api/test/telegram-post`);
      console.log(`üìù HTML: ${htmlWithTestId.slice(0, 60)}${htmlWithTestId.length > 60 ? '...' : ''}`);
      
      const response = await axios.post(`${CONFIG.apiUrl}/api/test/telegram-post`, {
        text: htmlWithTestId,
        token: CONFIG.telegram.token,
        chatId: CONFIG.telegram.chatId
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏
      if (response.data.success) {
        console.log(`‚úÖ –£–°–ü–ï–•: –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram`);
        console.log(`üîó URL: ${response.data.postUrl || '–ù–µ –ø–æ–ª—É—á–µ–Ω'}`);
      } else {
        console.log(`‚ùå –û–®–ò–ë–ö–ê: ${response.data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      }
    } catch (error) {
      console.error(`‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: ${error.message}`);
      if (error.response) {
        console.error(error.response.data);
      }
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API
    if (i < testCases.length - 1) {
      console.log('‚è±Ô∏è –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ—Å—Ç–æ–º...');
      await sleep(3000);
    }
  }
  
  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testHtmlFormatting().catch(err => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤:', err.message);
});