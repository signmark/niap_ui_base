/**
 * Скрипт для проверки трансформации конкретного HTML в совместимый с Telegram формат
 * Запуск: node transformation-test.cjs
 */

const { cleanHtmlForTelegram } = require('./server/utils/telegram-html-cleaner-new.cjs');

// Пример HTML, который вызывает проблемы в Telegram (из скриншота)
const problematicHtml = `<p><strong>Разработка сбалансированного и индивидуализированного рациона питания</strong> – сложная задача, требующая учета множества факторов: особенностей организма, образа жизни и состояния здоровья. Однако благодаря <em>инновационному онлайн-сервису для составления персонализированных планов питания</em> эта задача стала значительно проще.</p>

<p>Наш сервис использует <strong>передовые алгоритмы анализа данных</strong> для создания идеального рациона, полностью соответствующего вашим индивидуальным потребностям. Независимо от ваших целей – снижение веса, наращивание мышечной массы или поддержание здорового баланса – наш сервис поможет их достичь <em>максимально эффективным и безопасным способом</em>.</p>

<p>Одно из <strong>ключевых преимуществ нашего сервиса</strong> – возможность для медицинских специалистов, таких как врачи и диетологи, осуществлять <em>удаленный мониторинг питания своих клиентов в режиме реального времени</em>. Это позволяет отслеживать прогресс, своевременно корректировать рацион и предоставлять рекомендации, экономя время и ресурсы.</p>

<p>Мы приглашаем вас опробовать наш сервис и убедиться в его эффективности. Будем рады получить вашу <strong>обратную связь и отзывы</strong>, которые помогут нам продолжать совершенствовать наше предложение. Вместе мы сделаем путь к здоровому образу жизни более простым и увлекательным.</p>`;

// Функция для отображения преобразований HTML
function showTransformations() {
  console.log('\x1b[36m=== ИСХОДНЫЙ HTML ===\x1b[0m');
  console.log(problematicHtml);
  console.log('\n');
  
  // Очищаем HTML для Telegram
  const cleanedHtml = cleanHtmlForTelegram(problematicHtml);
  
  console.log('\x1b[36m=== ИТОГОВЫЙ HTML ДЛЯ TELEGRAM ===\x1b[0m');
  console.log(cleanedHtml);
  
  // Для сравнения выведем простую замену HTML-тегов на обычный текст
  const plainText = problematicHtml.replace(/<\/?[^>]+(>|$)/g, '');
  console.log('\n\x1b[36m=== ПРОСТОЙ ТЕКСТ БЕЗ ТЕГОВ ===\x1b[0m');
  console.log(plainText);
}

showTransformations();