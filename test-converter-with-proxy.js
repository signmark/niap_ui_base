#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ø—Ä–æ–∫—Å–∏
 */

import fetch from 'node-fetch';
import fs from 'fs';

async function testConverterWithProxy() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–í–ï–†–¢–ï–†–ê –° –ü–†–û–ö–°–ò');
  console.log('='.repeat(60));
  
  try {
    const testVideoPath = 'attached_assets/reels-test_1755686797072.mp4';
    
    if (!fs.existsSync(testVideoPath)) {
      console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', testVideoPath);
      return false;
    }
    
    const stats = fs.statSync(testVideoPath);
    console.log(`üìπ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: ${testVideoPath}`);
    console.log(`üìä –†–∞–∑–º–µ—Ä: ${(stats.size / 1024 / 1024).toFixed(2)} MB`);
    
    // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    console.log('\nüîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —á–µ—Ä–µ–∑ API...');
    
    const response = await fetch('http://localhost:5000/api/real-video-converter/convert', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        localPath: testVideoPath,
        forceConvert: true
      })
    });
    
    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      console.log(`üîó –°–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL: ${result.convertedUrl}`);
      console.log(`‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${result.duration} ms`);
      console.log(`üìè –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`, result.metadata);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∫—Å–∏ URL
      const isProxyUrl = result.convertedUrl && result.convertedUrl.includes('/api/instagram-video-proxy/');
      
      if (isProxyUrl) {
        console.log('\nüéâ –û–¢–õ–ò–ß–ù–û! –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-URL');
        console.log(`üì± Instagram –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: ${result.convertedUrl}`);
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ URL
        console.log('\nüß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∫—Å–∏ URL...');
        
        const proxyResponse = await fetch(result.convertedUrl, { method: 'HEAD' });
        
        console.log(`üìä –ü—Ä–æ–∫—Å–∏ —Å—Ç–∞—Ç—É—Å: ${proxyResponse.status}`);
        console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–æ–∫—Å–∏:`);
        console.log(`  Content-Type: ${proxyResponse.headers.get('content-type')}`);
        console.log(`  Accept-Ranges: ${proxyResponse.headers.get('accept-ranges')}`);
        console.log(`  Content-Length: ${proxyResponse.headers.get('content-length')}`);
        
        if (proxyResponse.headers.get('accept-ranges') === 'bytes') {
          console.log('\nüèÜ –ü–û–õ–ù–´–ô –£–°–ü–ï–•!');
          console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Å–æ–∑–¥–∞–µ—Ç –≤–∏–¥–µ–æ');
          console.log('‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞ S3');
          console.log('‚úÖ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-URL');
          console.log('‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏');
          console.log(`\nüéØ –ì–æ—Ç–æ–≤—ã–π URL –¥–ª—è Instagram: ${result.convertedUrl}`);
          
          return true;
        } else {
          console.log('\n‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Accept-Ranges: bytes');
        }
      } else {
        console.log('\n‚ö†Ô∏è –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä—è–º—É—é S3 —Å—Å—ã–ª–∫—É, –∞ –Ω–µ –ø—Ä–æ–∫—Å–∏');
        console.log('üîß –í–æ–∑–º–æ–∂–Ω–æ, –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—â–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å');
      }
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:', result.error);
      return false;
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    return false;
  }
  
  return false;
}

async function main() {
  const success = await testConverterWithProxy();
  
  if (success) {
    console.log('\n' + '='.repeat(60));
    console.log('üéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è Instagram –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    console.log('='.repeat(60));
  } else {
    console.log('\nüí• –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
  }
}

main().catch(console.error);