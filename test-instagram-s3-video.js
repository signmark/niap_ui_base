#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Instagram –≤–∏–¥–µ–æ –Ω–∞ S3
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ S3 —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è Instagram Graph API
 */

const axios = require('axios');
const path = require('path');
const fs = require('fs');

const API_BASE = 'http://localhost:5000';

// –¢–µ—Å—Ç–æ–≤—ã–µ URL –≤–∏–¥–µ–æ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑ –≤–∞—à–µ–≥–æ S3)
const TEST_VIDEOS = [
  // –î–æ–±–∞–≤—å—Ç–µ —Å—é–¥–∞ URL –≤–∏–¥–µ–æ –∏–∑ –≤–∞—à–µ–≥–æ S3
  'https://lbrspb.beget.tech/videos/ig_stories_converted_example.mp4',
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
];

async function testVideoUrl(videoUrl) {
  console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ: ${videoUrl}`);
  console.log('='.repeat(60));

  try {
    const response = await axios.post(`${API_BASE}/api/test/instagram-video`, {
      videoUrl: videoUrl
    });

    const { data } = response.data;
    
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${data.isValid ? '–í–ê–õ–ò–î–ù–´–ô' : '–ù–ï–í–ê–õ–ò–î–ù–´–ô'}`);
    
    if (data.errors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò:');
      data.errors.forEach(error => {
        console.log(`  - ${error}`);
      });
    }
    
    if (data.warnings.length > 0) {
      console.log('\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:');
      data.warnings.forEach(warning => {
        console.log(`  - ${warning}`);
      });
    }
    
    console.log('\nüìã –î–ï–¢–ê–õ–ò:');
    console.log(`  HTTP Status: ${data.details.statusCode}`);
    console.log(`  Content-Type: ${data.details.contentType}`);
    console.log(`  Accept-Ranges: ${data.details.acceptRanges ? 'bytes ‚úÖ' : '–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è ‚ùå'}`);
    if (data.details.contentLength) {
      const sizeMB = (data.details.contentLength / (1024 * 1024)).toFixed(1);
      console.log(`  –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${sizeMB} MB`);
    }

    return data.isValid;

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: ${error.message}`);
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   –û—Ç–≤–µ—Ç: ${JSON.stringify(error.response.data, null, 2)}`);
    }
    return false;
  }
}

async function testS3Headers(fileKey) {
  console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ S3 —Ñ–∞–π–ª–∞: ${fileKey}`);
  console.log('='.repeat(60));

  try {
    const response = await axios.get(`${API_BASE}/api/test/instagram-s3-headers/${fileKey}`);
    
    const { data } = response.data;
    
    console.log(`‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π URL: ${data.publicUrl}`);
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${data.validation.isValid ? '–í–ê–õ–ò–î–ù–´–ô' : '–ù–ï–í–ê–õ–ò–î–ù–´–ô'}`);
    
    if (data.validation.errors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò:');
      data.validation.errors.forEach(error => {
        console.log(`  - ${error}`);
      });
    }
    
    console.log('\nüìã HTTP –ó–ê–ì–û–õ–û–í–ö–ò:');
    Object.entries(data.validation.details.headers || {}).forEach(([key, value]) => {
      console.log(`  ${key}: ${value}`);
    });

    return data.validation.isValid;

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: ${error.message}`);
    return false;
  }
}

async function uploadAndTestVideo(videoPath) {
  console.log(`\nüì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ: ${videoPath}`);
  console.log('='.repeat(60));

  if (!fs.existsSync(videoPath)) {
    console.error(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${videoPath}`);
    return false;
  }

  try {
    const response = await axios.post(`${API_BASE}/api/test/instagram-upload-and-test`, {
      videoPath: videoPath
    });

    const { data } = response.data;
    
    console.log(`‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${data.uploadUrl}`);
    console.log(`‚úÖ S3 –∫–ª—é—á: ${data.uploadKey}`);
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${data.validation.isValid ? '–í–ê–õ–ò–î–ù–´–ô' : '–ù–ï–í–ê–õ–ò–î–ù–´–ô'}`);
    
    if (data.validation.errors.length > 0) {
      console.log('\n‚ùå –û–®–ò–ë–ö–ò:');
      data.validation.errors.forEach(error => {
        console.log(`  - ${error}`);
      });
    }

    return data.validation.isValid;

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: ${error.message}`);
    return false;
  }
}

async function main() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï INSTAGRAM S3 –í–ò–î–ï–û');
  console.log('='.repeat(60));
  
  let allValid = true;

  // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ URL
  if (TEST_VIDEOS.length > 0) {
    console.log('\nüìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–• URL');
    for (const videoUrl of TEST_VIDEOS) {
      const isValid = await testVideoUrl(videoUrl);
      if (!isValid) allValid = false;
    }
  }

  // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ S3
  const testKeys = [
    'videos/ig_stories_converted_example.mp4',
    'test/instagram_test.mp4'
    // –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ –≤–∞—à–µ–≥–æ S3
  ];

  console.log('\nüìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ì–û–õ–û–í–ö–û–í S3');
  for (const key of testKeys) {
    const isValid = await testS3Headers(key);
    if (!isValid) allValid = false;
  }

  // 3. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ)
  const testVideoPath = './test-video.mp4'; // –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –≤–∏–¥–µ–æ
  if (fs.existsSync(testVideoPath)) {
    console.log('\nüìã –ó–ê–ì–†–£–ó–ö–ê –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ì–û –í–ò–î–ï–û');
    const isValid = await uploadAndTestVideo(testVideoPath);
    if (!isValid) allValid = false;
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\n' + '='.repeat(60));
  console.log(`üèÅ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${allValid ? '‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´' : '‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´'}`);
  
  if (!allValid) {
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É Beget S3 –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Accept-Ranges: bytes');
    console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –¥–ª—è –≤–∞—à–µ–≥–æ S3 bucket');
    console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º Content-Type: video/mp4');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main().catch(console.error);