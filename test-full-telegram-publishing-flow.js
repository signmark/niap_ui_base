/**
 * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ü–∏–∫–ª–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
 * 
 * –ó–∞–ø—É—Å–∫: node test-full-telegram-publishing-flow.js ID_–ö–û–ù–¢–ï–ù–¢–ê
 */

import axios from 'axios';
import fs from 'fs';
import 'dotenv/config';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_URL = 'http://localhost:5000';
const DIRECTUS_URL = process.env.DIRECTUS_URL || 'https://directus.nplanner.ru';
const DIRECTUS_EMAIL = process.env.DIRECTUS_ADMIN_EMAIL || 'lbrspb@gmail.com';
const DIRECTUS_PASSWORD = process.env.DIRECTUS_ADMIN_PASSWORD || '123456789';

// –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π
const CONTENT_ID = process.argv[2];

if (!CONTENT_ID) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node test-full-telegram-publishing-flow.js ID_–ö–û–ù–¢–ï–ù–¢–ê');
  process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
const directusApi = axios.create({
  baseURL: DIRECTUS_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

const api = axios.create({
  baseURL: API_URL,
  headers: {
    'Content-Type': 'application/json'
  }
});

// –§–ª–∞–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
let authToken = null;

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function waitFor(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Directus
async function authenticate() {
  if (authToken) {
    // –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    console.log('‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    return true;
  }
  
  try {
    console.log(`\nüîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${DIRECTUS_EMAIL}`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ Directus
    const response = await directusApi.post('/auth/login', {
      email: DIRECTUS_EMAIL,
      password: DIRECTUS_PASSWORD
    });
    
    if (!response.data || !response.data.data || !response.data.data.access_token) {
      console.error('‚ùå –û—Ç–≤–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω:', response.data);
      return false;
    }
    
    authToken = response.data.data.access_token;
    console.log(`‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –¥–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: ${authToken.length}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    directusApi.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;
    api.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã
    try {
      const checkResponse = await directusApi.get('/users/me');
      console.log(`‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: ${checkResponse.data.data.id}`);
    } catch (checkError) {
      console.error('‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å:', checkError.message);
      if (checkError.response) {
        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', checkError.response.data);
      }
      return false;
    }
    
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return false;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞
async function getContent(id) {
  try {
    console.log(`\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å ID: ${id}`);
    const response = await api.get(`/api/campaign-content/${id}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ social_platforms –≤ –æ—Ç–≤–µ—Ç–µ
    console.log('\n[DEBUG] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ API:');
    console.log(`–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: ${typeof response.data}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç data
    let contentData = response.data;
    if (response.data && response.data.data) {
      console.log('[DEBUG] –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç data');
      contentData = response.data.data;
    }
    
    if (contentData && typeof contentData === 'object') {
      console.log('[DEBUG] –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:');
      Object.keys(contentData).forEach(key => {
        const value = contentData[key];
        console.log(`  - ${key}: ${typeof value} ${value === null ? '(null)' : ''}`);
      });
      
      if (contentData.socialPlatforms) {
        console.log('[DEBUG] socialPlatforms (camelCase) –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ');
        console.log('[DEBUG] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ socialPlatforms:');
        console.log(JSON.stringify(contentData.socialPlatforms, null, 2));
      } else if (contentData.social_platforms) {
        console.log('[DEBUG] social_platforms (snake_case) –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ');
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º snake_case –≤ camelCase
        contentData.socialPlatforms = contentData.social_platforms;
      } else {
        console.log('[DEBUG] –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ API');
      }
    }
    
    return contentData;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
async function initializePlatforms(id) {
  try {
    console.log(`\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${id}`);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
    const testPlatforms = {
      telegram: { status: 'pending' },
      vk: { status: 'pending' },
      instagram: { status: 'pending' }
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
    const response = await api.patch(`/api/campaign-content/${id}`, {
      socialPlatforms: testPlatforms
    });
    
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram
async function publishToTelegram(id) {
  try {
    console.log(`\nüöÄ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Telegram: ${id}`);
    const response = await api.post(`/api/publish/telegram/${id}`);
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram: ${error.message}`);
    if (error.response) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
    return null;
  }
}

// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–æ –∏ –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
function comparePlatforms(before, after) {
  console.log('\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:');
  
  // –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º
  console.log('\n–î–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
  console.log(JSON.stringify(before?.socialPlatforms || {}, null, 2));
  
  console.log('\n–ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
  console.log(JSON.stringify(after?.socialPlatforms || {}, null, 2));
  
  const beforePlatforms = Object.keys(before?.socialPlatforms || {});
  const afterPlatforms = Object.keys(after?.socialPlatforms || {});
  
  console.log(`\n–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (${beforePlatforms.length}): ${beforePlatforms.join(', ')}`);
  console.log(`–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (${afterPlatforms.length}): ${afterPlatforms.join(', ')}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
  const missingPlatforms = beforePlatforms.filter(p => !afterPlatforms.includes(p));
  if (missingPlatforms.length > 0) {
    console.log(`\n‚ùå –ü–û–¢–ï–†–Ø–ù–´ –î–ê–ù–ù–´–ï –ü–õ–ê–¢–§–û–†–ú: ${missingPlatforms.join(', ')}`);
    return false;
  } 
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å Telegram –Ω–∞ published
  if (!after?.socialPlatforms?.telegram || after.socialPlatforms.telegram.status !== 'published') {
    console.log(`\n‚ùå –û–®–ò–ë–ö–ê: –°—Ç–∞—Ç—É—Å Telegram –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ 'published'`);
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  if (!after?.socialPlatforms?.telegram?.postUrl) {
    console.log(`\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    // –ù–µ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ–π –æ—à–∏–±–∫–æ–π, —Ç.–∫. –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ URL –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
  }
  
  console.log('\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, —Å—Ç–∞—Ç—É—Å Telegram –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  return true;
}

// –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
async function runTest() {
  console.log('========================================');
  console.log('üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –ü–£–ë–õ–ò–ö–ê–¶–ò–ò –í TELEGRAM üß™');
  console.log('========================================');
  console.log(`üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: ${CONTENT_ID}`);
  
  try {
    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    console.log('\nüîí –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
    const isAuthenticated = await authenticate();
    if (!isAuthenticated) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const initialContent = await getContent(CONTENT_ID);
    if (!initialContent) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    console.log(`\nüìÑ –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:`);
    console.log(`  –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${initialContent.title || '(–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞)'}`);
    console.log(`  –°—Ç–∞—Ç—É—Å: ${initialContent.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    console.log(`  –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${initialContent.contentType || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    if (initialContent.imageUrl) {
      console.log(`  URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${initialContent.imageUrl}`);
    }
    
    // –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º
    const updatedContent = await initializePlatforms(CONTENT_ID);
    if (!updatedContent) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    console.log('\nüìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:');
    const platforms = Object.keys(updatedContent.socialPlatforms || {});
    platforms.forEach(platform => {
      console.log(`  ${platform}: ${updatedContent.socialPlatforms[platform].status}`);
    });
    
    // –®–∞–≥ 3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram
    const publishResult = await publishToTelegram(CONTENT_ID);
    if (!publishResult) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ Telegram. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    console.log('\nüì£ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram:');
    console.log(`  –°—Ç–∞—Ç—É—Å: ${publishResult.status || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    if (publishResult.postUrl) {
      console.log(`  URL –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${publishResult.postUrl}`);
    }
    
    // –®–∞–≥ 4: –ñ–¥–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    console.log('\n‚è±Ô∏è –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞...');
    await waitFor(5000);
    
    // –®–∞–≥ 5: –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const finalContent = await getContent(CONTENT_ID);
    if (!finalContent) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç. –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      return;
    }
    
    // –®–∞–≥ 6: –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º
    const success = comparePlatforms(updatedContent, finalContent);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const results = {
      contentId: CONTENT_ID,
      timestamp: new Date().toISOString(),
      before: updatedContent.socialPlatforms,
      after: finalContent.socialPlatforms,
      success
    };
    
    const filename = `telegram-publication-test-${new Date().toISOString().replace(/:/g, '-')}.json`;
    fs.writeFileSync(filename, JSON.stringify(results, null, 2));
    console.log(`\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${filename}`);
    
    console.log('\n========================================');
    if (success) {
      console.log('üéâ –¢–ï–°–¢ –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!');
    } else {
      console.log('‚ùå –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò');
    }
    console.log('========================================');
    
  } catch (error) {
    console.error(`\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: ${error.message}`);
    if (error.stack) {
      console.error(error.stack);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
runTest();