/**
 * –¢–µ—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ Instagram —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Å—Å–∏–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ Instagram Private API —Å –ø–æ–ª–Ω—ã–º–∏ —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */

// –î–ª—è node.js < 18 –Ω—É–∂–µ–Ω node-fetch
let fetch;
try {
  fetch = globalThis.fetch || require('node-fetch');
} catch (e) {
  // –î–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π Node.js –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP
  const http = require('http');
  const https = require('https');
  const { URL } = require('url');
  
  fetch = async (url, options = {}) => {
    return new Promise((resolve, reject) => {
      const parsedUrl = new URL(url);
      const client = parsedUrl.protocol === 'https:' ? https : http;
      
      const requestOptions = {
        hostname: parsedUrl.hostname,
        port: parsedUrl.port,
        path: parsedUrl.pathname + parsedUrl.search,
        method: options.method || 'GET',
        headers: options.headers || {}
      };
      
      const req = client.request(requestOptions, (res) => {
        let data = '';
        res.on('data', (chunk) => data += chunk);
        res.on('end', () => {
          resolve({
            status: res.statusCode,
            json: async () => JSON.parse(data),
            text: async () => data
          });
        });
      });
      
      req.on('error', reject);
      
      if (options.body) {
        req.write(options.body);
      }
      
      req.end();
    });
  };
}

const API_BASE = 'http://localhost:5000/api';

// –î–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ —Å —Ä–∞–±–æ—á–∏–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';
const INSTAGRAM_USERNAME = 'dsignmark';
const INSTAGRAM_PASSWORD = 'K<2Y#DJh-<WCb!S';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
const TEST_POST_DATA = {
  content: 'üî• –¢–µ—Å—Ç Instagram Private API –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∏–Ω–≥–∞. #test #instagram #api',
  platform: 'instagram',
  campaignId: CAMPAIGN_ID,
  contentType: 'text',
  scheduledAt: new Date().toISOString()
};

async function testInstagramPublishing() {
  console.log('\nüöÄ === –¢–ï–°–¢ INSTAGRAM PUBLISHING –° –†–ê–°–®–ò–†–ï–ù–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò ===\n');

  try {
    // –®–∞–≥ 1: –û—á–∏—Å—Ç–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    console.log('1Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Å—Å–∏–π...');
    try {
      const clearResponse = await fetch(`${API_BASE}/instagram-direct/clear-cache`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      console.log(`‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω: ${clearResponse.status}`);
    } catch (e) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –ø—É—Å—Ç)');
    }

    // –®–∞–≥ 2: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    console.log('\n2Ô∏è‚É£ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Instagram Private API...');
    const authResponse = await fetch(`${API_BASE}/instagram-direct/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: INSTAGRAM_USERNAME,
        password: INSTAGRAM_PASSWORD,
        campaignId: CAMPAIGN_ID
      })
    });

    const authData = await authResponse.json();
    console.log('üîê –†–µ–∑—É–ª—å—Ç–∞—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', {
      success: authData.success,
      status: authData.status,
      userId: authData.userId,
      username: authData.username,
      cached: authData.cached,
      authMethod: authData.authMethod
    });

    if (!authData.success) {
      throw new Error(`–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ${authData.error || authData.message}`);
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
    const sessionData = authData.sessionData;
    console.log('\nüìä –ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
    console.log('- –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', {
      username: sessionData.username,
      isAuthenticated: sessionData.isAuthenticated,
      authMethod: sessionData.authMethod
    });
    console.log('- –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', {
      hasSessionId: !!sessionData.sessionId,
      hasCsrfToken: !!sessionData.csrfToken,
      hasDeviceId: !!sessionData.deviceId,
      hasUserAgent: !!sessionData.userAgent,
      hasCookies: !!sessionData.cookies,
      hasAuthData: !!sessionData.authData
    });

    // –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    const contentResponse = await fetch(`${API_BASE}/campaign-content`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        campaignId: CAMPAIGN_ID,
        content: TEST_POST_DATA.content,
        contentType: TEST_POST_DATA.contentType,
        status: 'scheduled',
        scheduledAt: TEST_POST_DATA.scheduledAt,
        socialPlatforms: {
          instagram: { status: 'pending' }
        }
      })
    });

    const contentData = await contentResponse.json();
    console.log('üìù –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', {
      success: !!contentData.id,
      contentId: contentData.id,
      status: contentData.status
    });

    if (!contentData.id) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç');
    }

    // –®–∞–≥ 4: –ü–æ–ø—ã—Ç–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Instagram Direct API
    console.log('\n4Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ Instagram Direct API...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Instagram Private API –∫–ª–∏–µ–Ω—Ç–∞
    const statusResponse = await fetch(`${API_BASE}/instagram-direct/status`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username: INSTAGRAM_USERNAME })
    });

    const statusData = await statusResponse.json();
    console.log('üîç –°—Ç–∞—Ç—É—Å Instagram –∫–ª–∏–µ–Ω—Ç–∞:', {
      hasIgClient: statusData.hasIgClient,
      sessionValid: statusData.sessionValid,
      userId: statusData.userId
    });

    if (!statusData.hasIgClient) {
      throw new Error('Instagram Private API –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    }

    // –ü–æ–ø—ã—Ç–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
    console.log('\n5Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä...');
    const publishResponse = await fetch(`${API_BASE}/social-publishing/publish-content`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        platform: 'instagram',
        contentId: contentData.id,
        campaignId: CAMPAIGN_ID,
        content: TEST_POST_DATA.content,
        contentType: TEST_POST_DATA.contentType
      })
    });

    const publishData = await publishResponse.json();
    console.log('üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', {
      success: publishData.success,
      status: publishData.status,
      postId: publishData.postId,
      postUrl: publishData.postUrl,
      message: publishData.message
    });

    // –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const updatedContentResponse = await fetch(`${API_BASE}/campaign-content/${contentData.id}`);
    const updatedContent = await updatedContentResponse.json();
    
    console.log('üíæ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', {
      contentId: updatedContent.id,
      status: updatedContent.status,
      instagramStatus: updatedContent.socialPlatforms?.instagram?.status || '–Ω–µ –∑–∞–¥–∞–Ω',
      postUrl: updatedContent.socialPlatforms?.instagram?.postUrl || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    });

    console.log('\n‚úÖ === –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û ===\n');

    return {
      success: true,
      authMethod: authData.authMethod,
      sessionData: authData.sessionData,
      publishResult: publishData,
      finalStatus: updatedContent.socialPlatforms?.instagram?.status
    };

  } catch (error) {
    console.error('\n‚ùå === –û–®–ò–ë–ö–ê –í –¢–ï–°–¢–ï ===');
    console.error('üí• –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
    console.error('üìç Stack trace:', error.stack);
    
    return {
      success: false,
      error: error.message
    };
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testInstagramPublishing()
    .then(result => {
      console.log('\nüèÅ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:', result);
      process.exit(result.success ? 0 : 1);
    })
    .catch(error => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
      process.exit(1);
    });
}

module.exports = { testInstagramPublishing };