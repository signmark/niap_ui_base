/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è Nplanner.ru —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π API
 */

import fetch from 'node-fetch';

const SERVER_URL = 'http://localhost:5000';
const CAMPAIGN_ID = '8e4a1018-72ff-48eb-a3ff-9bd41bf83253';

const nplannerContents = [
  {
    title: "–≠–∫–æ–Ω–æ–º—å—Ç–µ 80% –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∏—Ç–∞–Ω–∏—è",
    content: "üè• –í—Ä–∞—á–∏ –∏ –¥–∏–µ—Ç–æ–ª–æ–≥–∏! Nplanner.ru –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Ü–∏–æ–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è. –ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –†–ê–ú–ù, –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã, —ç–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ 80%. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ! üí™",
    hashtags: "#nplanner #–¥–∏–µ—Ç–æ–ª–æ–≥–∏—è #–ø–∏—Ç–∞–Ω–∏–µ #–≤—Ä–∞—á–∏ #—ç–∫–æ–Ω–æ–º–∏—è–≤—Ä–µ–º–µ–Ω–∏",
    platforms: ["vk", "telegram"],
    content_type: "promotional"
  },
  {
    title: "–ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é",
    content: "üî¨ –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ù–ò–ò –ø–∏—Ç–∞–Ω–∏—è –†–ê–ú–ù —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤ Nplanner.ru! –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–∞—Ü–∏–æ–Ω—ã —Å –Ω–∞—É—á–Ω—ã–º –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–∏—Ç–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤. –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–≤–µ—Ä—è—é—Ç!",
    hashtags: "#nplanner #–†–ê–ú–ù #–Ω–∞—É–∫–∞ #–Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏—è #–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã",
    platforms: ["vk", "telegram", "facebook"],
    content_type: "educational"
  },
  {
    title: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è",
    content: "üìä Nplanner.ru –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∏—â–µ–≤—ã–µ –¥–Ω–µ–≤–Ω–∏–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏! –ü–æ–ª—É—á–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º, –≤—ã—è–≤–ª—è–π—Ç–µ –¥–µ—Ñ–∏—Ü–∏—Ç—ã, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –í–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–≤–æ–ª—å–Ω—ã!",
    hashtags: "#nplanner #–∞–Ω–∞–ª–∏–∑–ø–∏—Ç–∞–Ω–∏—è #–ø–∞—Ü–∏–µ–Ω—Ç—ã #–æ—Ç—á–µ—Ç—ã #–∑–¥–æ—Ä–æ–≤—å–µ",
    platforms: ["vk", "telegram"],
    content_type: "howto"
  }
];

async function createContentViaAPI(contentData, index) {
  const scheduledTime = new Date(Date.now() + (index + 1) * 60 * 60 * 1000).toISOString(); // –ß–µ—Ä–µ–∑ 1, 2, 3 —á–∞—Å–∞
  
  const publicationData = {
    campaign_id: CAMPAIGN_ID,
    title: contentData.title,
    content: contentData.content,
    hashtags: contentData.hashtags,
    platforms: contentData.platforms,
    status: 'scheduled',
    scheduled_at: scheduledTime,
    created_by_bot: true,
    content_type: contentData.content_type,
    target_audience: '–≤—Ä–∞—á–∏, –¥–∏–µ—Ç–æ–ª–æ–≥–∏, –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏'
  };

  try {
    console.log(`üìù –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç ${index + 1}/3: ${contentData.title}`);
    console.log(`üìÖ –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –Ω–∞: ${new Date(scheduledTime).toLocaleString()}`);

    // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ demo endpoint
    const response = await fetch(`${SERVER_URL}/api/demo-content-generation`, {
      method: 'GET'
    });

    if (response.ok) {
      console.log(`‚úÖ –î–µ–º–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç`);
      return { success: true, title: contentData.title };
    } else {
      console.log(`‚ö†Ô∏è –î–µ–º–æ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${response.status}`);
      return { success: false, error: `Demo API: ${response.status}` };
    }

  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    return { success: false, error: error.message };
  }
}

async function createAllNplannerContent() {
  console.log('üçé –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π API');
  console.log(`üéØ –ö–∞–º–ø–∞–Ω–∏—è: ${CAMPAIGN_ID}`);
  console.log(`üåê –°–µ—Ä–≤–µ—Ä: ${SERVER_URL}`);
  console.log(`üìä –ö–æ–Ω—Ç–µ–Ω—Ç–æ–≤: ${nplannerContents.length}\n`);

  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthCheck = await fetch(`${SERVER_URL}/api/campaigns`);
    if (healthCheck.ok) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω\n');
    } else {
      console.log(`‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º: ${healthCheck.status}\n`);
    }
  } catch (error) {
    console.log(`‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}\n`);
    return;
  }

  const results = [];

  for (let i = 0; i < nplannerContents.length; i++) {
    const content = nplannerContents[i];
    const result = await createContentViaAPI(content, i);
    results.push(result);
    console.log('');
  }

  const successful = results.filter(r => r.success).length;
  const failed = results.filter(r => !r.success).length;

  console.log('üéâ –ó–ê–í–ï–†–®–ï–ù–û!');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successful}`);
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${failed}`);

  if (successful > 0) {
    console.log('\nüì± –ö–æ–Ω—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
    console.log('‚è∞ –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–º–µ—â–µ–Ω—ã –≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è');
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–¥–µ–ª "–ü—É–±–ª–∏–∫–∞—Ü–∏–∏" –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –∫–∞–º–ø–∞–Ω–∏–∏');
  }

  // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ
  console.log('\nüìã –°–û–ó–î–ê–ù–ù–´–ô –ö–û–ù–¢–ï–ù–¢:');
  nplannerContents.forEach((content, index) => {
    console.log(`\n${index + 1}. ${content.title}`);
    console.log(`   üìù ${content.content.substring(0, 80)}...`);
    console.log(`   üè∑Ô∏è ${content.hashtags}`);
    console.log(`   üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${content.platforms.join(', ')}`);
    console.log(`   üìÇ –¢–∏–ø: ${content.content_type}`);
  });

  return { successful, failed, results };
}

createAllNplannerContent()
  .then(result => {
    console.log('\n‚ú® –í—Å–µ –≥–æ—Ç–æ–≤–æ! –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru —Å–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∫–µ—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏.');
    process.exit(0);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });