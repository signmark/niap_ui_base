#!/usr/bin/env node

const axios = require('axios');

async function testInstagramSettingsSave() {
  console.log('üî• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Instagram –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –ë–î');
  
  const campaignId = '46868c44-c6a4-4bed-accf-9ad07bba790e';
  const testSettings = {
    appId: '1234567890123456',
    appSecret: 'test_app_secret_12345',
    instagramId: '17841422578516105',
    accessToken: 'test_access_token_12345'
  };
  
  try {
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...');
    
    const beforeResponse = await axios.get(
      `https://directus.roboflow.space/items/user_campaigns/${campaignId}`,
      {
        headers: {
          'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    const beforeInstagram = beforeResponse.data.data.social_media_settings?.instagram;
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –î–û —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:');
    console.log(JSON.stringify(beforeInstagram, null, 2));
    
    console.log('\n2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ App ID –∏ App Secret —á–µ—Ä–µ–∑ API...');
    
    const saveResponse = await axios.patch(
      `http://localhost:5000/api/campaigns/${campaignId}/instagram-settings`,
      testSettings,
      {
        headers: {
          'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('API –æ—Ç–≤–µ—Ç:', saveResponse.data);
    
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...');
    
    const afterResponse = await axios.get(
      `https://directus.roboflow.space/items/user_campaigns/${campaignId}`,
      {
        headers: {
          'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    const afterInstagram = afterResponse.data.data.social_media_settings?.instagram;
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–û–°–õ–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:');
    console.log(JSON.stringify(afterInstagram, null, 2));
    
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    if (afterInstagram?.appId === testSettings.appId) {
      console.log('‚úÖ App ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ:', afterInstagram.appId);
    } else {
      console.log('‚ùå App ID –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    }
    
    if (afterInstagram?.appSecret === testSettings.appSecret) {
      console.log('‚úÖ App Secret —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ:', afterInstagram.appSecret);
    } else {
      console.log('‚ùå App Secret –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    }
    
    if (afterInstagram?.token) {
      console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', afterInstagram.token.substring(0, 20) + '...');
    }
    
    if (afterInstagram?.businessAccountId) {
      console.log('‚úÖ Business Account ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', afterInstagram.businessAccountId);
    }
    
    if (afterInstagram?.accessToken === testSettings.accessToken) {
      console.log('‚úÖ Access Token —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ:', afterInstagram.accessToken);
    } else {
      console.log('‚ùå Access Token –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    if (error.response) {
      console.error('üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
      console.error('üìã –°—Ç–∞—Ç—É—Å:', error.response.status);
    }
  }
}

testInstagramSettingsSave();