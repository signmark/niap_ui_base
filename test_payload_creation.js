// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è payload –≤ trends/collect
const keywordsList = [
  '—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ AI –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π',
  '—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', 
  '—Å–µ—Ä–≤–∏—Å –¥–ª—è SMM —Å –ò–ò'
];

const collectSources = true;

console.log('üîç TEST: Creating payload for collectSources with keywords:', keywordsList.slice(0, 3));
console.log('üîç TEST: collectSources value:', collectSources);

const followerRequirements = {
  instagram: 5000,
  telegram: 2000,
  vk: 3000,
  facebook: 5000,
  youtube: 10000
};

const selectedPlatforms = ["instagram", "telegram", "vk"];
const maxSourcesPerPlatform = 10;
const maxTrendsPerSource = 10;
const collectionDays = 30;
const campaignId = '45daab2a-4c6f-4578-8665-3a049458c0c8';
const userId = '53921f16-f51d-4591-80b9-8caa4fde4d13';
const requestId = 'test-123';

let payload;

if (collectSources) {
  console.log('‚úÖ TEST: Entering collectSources branch');
  payload = {
    minFollowers: followerRequirements,
    maxSourcesPerPlatform: maxSourcesPerPlatform,
    platforms: selectedPlatforms,
    collectSources: 1,
    collectComments: [],
    keywords: keywordsList,
    maxTrendsPerSource: maxTrendsPerSource,
    day_past: collectionDays,
    language: "ru",
    filters: {
      minReactions: 10,
      minViews: 500,
      contentTypes: ["text", "image", "video"]
    },
    campaignId: campaignId,
    userId: userId,
    requestId: requestId
  };
  console.log('üìù TEST: CREATED CORRECT payload for sources collection:', JSON.stringify(payload, null, 2));
} else {
  console.log('‚ùå TEST: Should not enter this branch');
}

console.log('üöÄ TEST: FINAL PAYLOAD:', JSON.stringify(payload, null, 2));

// –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ sourcesList (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å)
if (payload.sourcesList) {
  console.error('‚ùå –û–®–ò–ë–ö–ê: payload —Å–æ–¥–µ—Ä–∂–∏—Ç sourcesList –≤–º–µ—Å—Ç–æ keywords!');
} else if (payload.keywords) {
  console.log('‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: payload —Å–æ–¥–µ—Ä–∂–∏—Ç keywords –∫–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å');
} else {
  console.error('‚ùå –û–®–ò–ë–ö–ê: payload –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ keywords –Ω–∏ sourcesList!');
}