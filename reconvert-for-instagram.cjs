const axios = require('axios');

async function reconvertForInstagram() {
  console.log('üîÑ –†–ï–ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í–ò–î–ï–û –î–õ–Ø INSTAGRAM');
  console.log('–ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã CloudConvert –∏–∑ N8N');
  
  const originalVideoUrl = 'https://6e679636ae90-ridiculous-seth.s3.ru1.storage.beget.cloud/videos/ig_stories_converted_1755588867493_vypzjpvb7.mp4';
  
  try {
    console.log('üìπ –ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ:', originalVideoUrl);
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π URL –¥–ª—è –æ–±—Ö–æ–¥–∞ –∫—ç—à–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å —Ç–æ—á–Ω—ã–º–∏ CloudConvert –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const tempVideoName = `temp_reconvert_${Date.now()}.mp4`;
    const reconvertRequest = {
      videoUrl: originalVideoUrl,
      forceReconvert: true,
      outputName: tempVideoName
    };
    
    console.log('üõ†Ô∏è –ó–∞–ø—É—Å–∫ —Ä–µ–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏...');
    
    const response = await axios.post('http://localhost:5000/api/real-video-converter/convert', {
      videoUrl: originalVideoUrl
    }, {
      timeout: 120000
    });
    
    if (response.data.success) {
      console.log('‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ (–∏–ª–∏ –≤–∏–¥–µ–æ —É–∂–µ –≥–æ—Ç–æ–≤–æ)');
      console.log('URL:', response.data.convertedUrl);
      
      // –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ N8N –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      console.log('\nüöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ N8N –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram');
      
      const webhookPayload = {
        contentId: '7fdcd858-0d14-4cd2-8950-5c8b31f29fea',
        contentType: 'video_story', 
        platforms: ['instagram'],
        scheduledAt: new Date().toISOString(),
        content: {
          title: '–ì—Ä–µ–±–∞–Ω—ã–π –∫—Ä–æ–ª–∏–∫',
          videoUrl: response.data.convertedUrl,
          mediaType: 'video'
        },
        media_type: 'VIDEO',
        image_url: response.data.convertedUrl
      };
      
      const webhookResponse = await axios.post('https://n8n.roboflow.space/webhook/publish-stories', webhookPayload, {
        headers: {
          'Content-Type': 'application/json'
        },
        timeout: 30000
      });
      
      console.log('‚úÖ N8N WEBHOOK –û–¢–ü–†–ê–í–õ–ï–ù!');
      console.log('–°—Ç–∞—Ç—É—Å:', webhookResponse.status);
      console.log('–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Instagram –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏');
      
      return {
        success: true,
        videoUrl: response.data.convertedUrl,
        webhookStatus: webhookResponse.status
      };
      
    } else {
      throw new Error('–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: ' + response.data.error);
    }
    
  } catch (error) {
    console.log('‚ùå –û–®–ò–ë–ö–ê:', error.message);
    return null;
  }
}

reconvertForInstagram().then(result => {
  if (result && result.success) {
    console.log('\nüèÜ –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê!');
    console.log(`–ö–æ–Ω—Ç–µ–Ω—Ç "7fdcd858-0d14-4cd2-8950-5c8b31f29fea" –≥–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram`);
    console.log('–í–∏–¥–µ–æ URL:', result.videoUrl);
    console.log('N8N —Å—Ç–∞—Ç—É—Å:', result.webhookStatus);
  } else {
    console.log('\n‚ùå –ó–∞–¥–∞—á–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
  }
});