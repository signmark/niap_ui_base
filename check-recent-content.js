#!/usr/bin/env node

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è Nplanner.ru
 */

import axios from 'axios';

const API_BASE = 'http://localhost:5000/api';
const CAMPAIGN_ID = '46868c44-c6a4-4bed-accf-9ad07bba790e';

async function checkRecentContent() {
  try {
    const headers = {
      'Authorization': `Bearer ${process.env.DIRECTUS_TOKEN || ''}`,
      'Content-Type': 'application/json'
    };

    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
    const response = await axios.get(`${API_BASE}/campaign-content`, {
      headers,
      params: {
        campaignId: CAMPAIGN_ID,
        limit: 20,
        page: 1,
        sort: '-created_at'
      }
    });

    if (response.data?.success && response.data?.data) {
      const content = response.data.data;
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${content.length}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–æ—Å—Ç–æ–≤
      console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤:');
      content.slice(0, 10).forEach((item, index) => {
        const createdDate = new Date(item.created_at || item.createdAt).toLocaleString('ru-RU');
        const hasImage = item.image_url ? 'üì∏' : 'üìù';
        const source = item.metadata?.source || 'unknown';
        
        console.log(`${index + 1}. ${hasImage} ${item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
        console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${createdDate}`);
        console.log(`   üè∑Ô∏è –ò—Å—Ç–æ—á–Ω–∏–∫: ${source}`);
        console.log(`   üìù –î–ª–∏–Ω–∞: ${item.content?.length || 0} —Å–∏–º–≤–æ–ª–æ–≤`);
        if (item.image_url) {
          console.log(`   üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${item.image_url.substring(0, 50)}...`);
        }
        console.log(`   üÜî ID: ${item.id}`);
        console.log('');
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
      const sources = {};
      content.forEach(item => {
        const source = item.metadata?.source || 'unknown';
        sources[source] = (sources[source] || 0) + 1;
      });
      
      console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:');
      Object.entries(sources).forEach(([source, count]) => {
        console.log(`   ${source}: ${count} –ø–æ—Å—Ç–æ–≤`);
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
      const withImages = content.filter(item => item.image_url);
      console.log(`\nüì∏ –ü–æ—Å—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${withImages.length}/${content.length}`);
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', response.data);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

checkRecentContent();